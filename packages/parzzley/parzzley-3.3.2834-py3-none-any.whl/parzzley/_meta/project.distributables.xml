<?xml version="1.0" ?>
<a:project xmlns:a="annize" xmlns="annize:distributables" xmlns:base="annize:base" xmlns:i18n="annize:i18n">
    <base:Basket a:append_to="homepage">
        <Group a:name="packagegroup_pythonwheel">
            <Group.title>
                <i18n:String.stringtr>tr("an_int_PythonWheelPackage")</i18n:String.stringtr>
            </Group.title>
            <Package xmlns="annize:distributables.pythonwheel" version="~reference version~" a:name="package_pythonwheel">
                <ExecutableLink linkname="parzzley" methodname="main" modulename="parzzley.syncengine.core" is_gui="~False~"/>
                <ExecutableLink linkname="parzzley-manageconflicts" methodname="run" modulename="parzzley.tools.infssyncmanageconflicts" is_gui="~False~"/>
                <ExecutableLink linkname="parzzley-gui" methodname="run" modulename="parzzley.gui.app_main" is_gui="~True~"/>
                <ExecutableLink linkname="parzzley-manageconflicts-gui" methodname="run" modulename="parzzley.gui.app_manageconflicts" is_gui="~True~"/>
                <ExecutableLink linkname="parzzley-report-gui" methodname="run" modulename="parzzley.gui.app_report" is_gui="~True~"/>
                <Dir xmlns="annize:files">
                    <DirPart source_path="parzzley" destination_path="parzzley"/>
                    <DirPart source_path="_meta" destination_path="parzzley/_meta"/>
                </Dir>
            </Package>
        </Group>
    </base:Basket>
    <Dir xmlns="annize:files" a:name="cleaned_project_dir">
        <ExcludeByGitIgnores xmlns="annize:versioncontrol.git"/>
    </Dir>
    <Dir xmlns="annize:files" a:name="enriched_project_dir">
        <DirPart root="~reference cleaned_project_dir~"/>
    </Dir>
    <base:FirstOf a:name="flatpak_repo">
        <FlatpakRepository xmlns="annize:pinoprivate" public_url="https://pseudopolis.eu/pino/flatpak/annize"/>
        <LocalRepository xmlns="annize:distributables.flatpak" public_url="http://x" upload_path="/tmp/annize"/>
    </base:FirstOf>

    <!-- TODO


    <let k="distributables.pool.addgroup" linkto="../parsley.deb" name="Debian package">
        <val k="sources" t="files.TaskExecution">
            <val k="executablelinks">
                <val k="parsley" v="/usr/lib/parsley/parsley.py"/>
                <val k="parsley_gui" v="/usr/lib/parsley/parsley_gui.py"/>
                <val k="parsley_infssync_manageconflicts" v="/usr/lib/parsley/parsley_infssync_manageconflicts.py"/>
                <val k="parsley_infssync_manageconflicts_gui" v="/usr/lib/parsley/parsley_infssync_manageconflicts_gui.py"/>
            </val>
            <val k="menuentries">
                <val command="parsley_gui" icon="_meta/parsley.64.png" name="parsley" t="packages.debian.MenuEntry" title="Parsley">
                    <val k="category" oref="packages.debian.Category.ApplicationsSystem"/>
                    <val k="gui" t="bool" v="True"/>
                </val>
            </val>
            <val k="source" t="files.MergedFilestructure">
                <val k="frommap">
                    <val k="/usr/lib/{name}" t="files.TaskExecution">
                        <val k="task" oref="packages.debian.only_programfiles"/>
                        <val k="source" t="packages.RawPackage"/>
                    </val>
                    <val k="/usr/share/locale" t="files.TaskExecution">
                        <val k="task" oref="lambda *a,**b: universe.locales(*a,**b)"/>
                    </val>
                </val>
            </val>
            <val k="task" oref="packages.debian.debpackage"/>
        </val>
    </let>
    <let k="distributables.pool.addgroup" name="Python wheel package">
        <val k="sources" t="files.TaskExecution">
            <val k="applicationlinks">
                <val linkname="parsley" method="main" module="parzzley.syncengine.core" t="packages.python.WheelApplicationLink">
                    <val k="gui" t="bool" v="False"/>
                </val>
                <val linkname="parsley_gui" method="run" module="parzzley.gui.app_main" t="packages.python.WheelApplicationLink">
                    <val k="gui" t="bool" v="True"/>
                </val>
                <val linkname="parsley_infssync_manageconflicts_gui" method="run" module="parzzley.gui.app_manageconflicts" t="packages.python.WheelApplicationLink">
                    <val k="gui" t="bool" v="True"/>
                </val>
                <val linkname="parsley_report_gui" method="run" module="parzzley.gui.app_report" t="packages.python.WheelApplicationLink">
                    <val k="gui" t="bool" v="True"/>
                </val>
                <val linkname="parsley_infssync_manageconflicts" method="run" module="parzzley.tools.infssyncmanageconflicts" t="packages.python.WheelApplicationLink">
                    <val k="gui" t="bool" v="False"/>
                </val>
            </val>
            <val k="task" oref="packages.python.wheelpackage"/>
            <val k="source" t="files.MergedFilestructure">
                <val k="frommap">
                    <val k="/" t="packages.RawPackage"/>
                    <val k="/locale" t="files.TaskExecution">
                        <val k="task" oref="lambda *a,**b: universe.withinitpys(universe.locales(*a,**b))"/>
                    </val>
                </val>
            </val>
        </val>
    </let>
    <let k="distributables.pool.addgroup" name="flatpak">
        <val k="sources" t="files.TaskExecution" sdk="org.gnome.Sdk" platform="org.gnome.Platform" kitversion="3.36" command="parsley_gui.py">
            <val k="task" oref="packages.flatpak.flatpakpackage"/>
            <val k="source" t="files.MergedFilestructure">
                <val k="frommap">
                    <val k="/files/bin" t="packages.RawPackage"/>
                    <val k="/files/bin/locale" t="files.TaskExecution">
                        <val k="task" oref="lambda *a,**b: universe.locales(*a,**b)"/>
                    </val>
                </val>
            </val>
            <val k="filesystems" oref="['host']"/>
            <val k="menuentries">
                <val icon="_meta/parsley.64.png" name="parsley" t="packages.flatpak.MenuEntry" title="Parsley">
                    <val k="category" oref="packages.debian.Category.ApplicationsSystem"/>
                    <val k="gui" t="bool" v="True"/>
                </val>
            </val>
            <val k="metafiles">
                <val t="packages.flatpak.FlatpakRef" runtimerepourl="https://flathub.org/repo/flathub.flatpakrepo"/>
            </val>
        </val>
    </let>
    <let k="distributables.pool.addgroup" linkto="../parsley.tgz" name="source tarball">
        <val k="sources" t="files.TaskExecution">
            <val k="task" oref="packages.tarpackage"/>
            <val k="source" t="packages.RawPackage"/>
        </val>
    </let>
     -->
</a:project>
