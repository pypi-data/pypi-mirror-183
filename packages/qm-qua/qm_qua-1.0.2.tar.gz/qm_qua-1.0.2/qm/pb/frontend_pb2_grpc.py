# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2
from qm.pb import compiler_pb2 as qm_dot_pb_dot_compiler__pb2
from qm.pb import frontend_pb2 as qm_dot_pb_dot_frontend__pb2
from qm.pb import inc_qm_api_pb2 as qm_dot_pb_dot_inc__qm__api__pb2
from qm.pb import inc_qua_config_pb2 as qm_dot_pb_dot_inc__qua__config__pb2
from qm.pb import job_results_pb2 as qm_dot_pb_dot_job__results__pb2
from qm.pb import qm_manager_pb2 as qm_dot_pb_dot_qm__manager__pb2


class FrontendStub(object):
    """The greeting service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
                )
        self.HealthCheck = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/HealthCheck',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.HealthCheckResponse.FromString,
                )
        self.Execute = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/Execute',
                request_serializer=qm_dot_pb_dot_frontend__pb2.ExecutionRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.ExecutionResponse.FromString,
                )
        self.AddToQueue = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/AddToQueue',
                request_serializer=qm_dot_pb_dot_frontend__pb2.AddToQueueRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.AddToQueueResponse.FromString,
                )
        self.Compile = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/Compile',
                request_serializer=qm_dot_pb_dot_frontend__pb2.CompileRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.CompileResponse.FromString,
                )
        self.AddCompiledToQueue = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/AddCompiledToQueue',
                request_serializer=qm_dot_pb_dot_frontend__pb2.AddCompiledToQueueRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.AddCompiledToQueueResponse.FromString,
                )
        self.RemovePendingJobs = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/RemovePendingJobs',
                request_serializer=qm_dot_pb_dot_frontend__pb2.JobQueryParams.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.RemovePendingJobsResponse.FromString,
                )
        self.GetPendingJobs = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetPendingJobs',
                request_serializer=qm_dot_pb_dot_frontend__pb2.JobQueryParams.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.GetPendingJobsResponse.FromString,
                )
        self.GetJobExecutionStatus = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetJobExecutionStatus',
                request_serializer=qm_dot_pb_dot_frontend__pb2.GetJobExecutionStatusRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.GetJobExecutionStatusResponse.FromString,
                )
        self.PausedStatus = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/PausedStatus',
                request_serializer=qm_dot_pb_dot_frontend__pb2.PausedStatusRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.PausedStatusResponse.FromString,
                )
        self.Resume = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/Resume',
                request_serializer=qm_dot_pb_dot_frontend__pb2.ResumeRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.ResumeResponse.FromString,
                )
        self.Halt = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/Halt',
                request_serializer=qm_dot_pb_dot_frontend__pb2.HaltRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.HaltResponse.FromString,
                )
        self.ResetDataProcessing = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/ResetDataProcessing',
                request_serializer=qm_dot_pb_dot_frontend__pb2.ResetDataProcessingRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.ResetDataProcessingResponse.FromString,
                )
        self.ValidateConfig = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/ValidateConfig',
                request_serializer=qm_dot_pb_dot_inc__qua__config__pb2.QuaConfig.SerializeToString,
                response_deserializer=qm_dot_pb_dot_compiler__pb2.ValidationResponse.FromString,
                )
        self.Init = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/Init',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.PerformQmRequest = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/PerformQmRequest',
                request_serializer=qm_dot_pb_dot_inc__qm__api__pb2.HighQmApiRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_inc__qm__api__pb2.HighQmApiResponse.FromString,
                )
        self.RequestData = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/RequestData',
                request_serializer=qm_dot_pb_dot_frontend__pb2.QmDataRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.QmDataResponse.FromString,
                )
        self.PullSimulatorSamples = channel.unary_stream(
                '/qm.grpc.frontend.Frontend/PullSimulatorSamples',
                request_serializer=qm_dot_pb_dot_job__results__pb2.PullSimulatorSamplesRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_job__results__pb2.SimulatorSamplesResponse.FromString,
                )
        self.OpenQuantumMachine = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/OpenQuantumMachine',
                request_serializer=qm_dot_pb_dot_qm__manager__pb2.OpenQuantumMachineRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.OpenQuantumMachineResponse.FromString,
                )
        self.CloseQuantumMachine = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/CloseQuantumMachine',
                request_serializer=qm_dot_pb_dot_qm__manager__pb2.CloseQuantumMachineRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.CloseQuantumMachineResponse.FromString,
                )
        self.GetQuantumMachine = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetQuantumMachine',
                request_serializer=qm_dot_pb_dot_qm__manager__pb2.GetQuantumMachineRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.GetQuantumMachineResponse.FromString,
                )
        self.GetRunningJob = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetRunningJob',
                request_serializer=qm_dot_pb_dot_qm__manager__pb2.GetRunningJobRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.GetRunningJobResponse.FromString,
                )
        self.ListOpenQuantumMachines = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/ListOpenQuantumMachines',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.ListOpenQuantumMachinesResponse.FromString,
                )
        self.CloseAllQuantumMachines = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/CloseAllQuantumMachines',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.CloseAllQuantumMachinesResponse.FromString,
                )
        self.GetControllers = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetControllers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=qm_dot_pb_dot_qm__manager__pb2.GetControllersResponse.FromString,
                )
        self.IsJobRunning = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/IsJobRunning',
                request_serializer=qm_dot_pb_dot_frontend__pb2.IsJobRunningRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.IsJobRunningResponse.FromString,
                )
        self.IsJobAcquiringData = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/IsJobAcquiringData',
                request_serializer=qm_dot_pb_dot_frontend__pb2.IsJobAcquiringDataRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.IsJobAcquiringDataResponse.FromString,
                )
        self.Simulate = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/Simulate',
                request_serializer=qm_dot_pb_dot_frontend__pb2.SimulationRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.SimulationResponse.FromString,
                )
        self.ClearAllJobResults = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/ClearAllJobResults',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.PerformHalDebugCommand = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/PerformHalDebugCommand',
                request_serializer=qm_dot_pb_dot_frontend__pb2.PerformHalDebugCommandRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.PerformHalDebugCommandResponse.FromString,
                )
        self.GetSimulatedQuantumState = channel.unary_unary(
                '/qm.grpc.frontend.Frontend/GetSimulatedQuantumState',
                request_serializer=qm_dot_pb_dot_frontend__pb2.GetSimulatedQuantumStateRequest.SerializeToString,
                response_deserializer=qm_dot_pb_dot_frontend__pb2.GetSimulatedQuantumStateResponse.FromString,
                )


class FrontendServicer(object):
    """The greeting service definition.
    """

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Execute(self, request, context):
        """Compile and Run a QUA program
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddToQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Compile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddCompiledToQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemovePendingJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPendingJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobExecutionStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PausedStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Resume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Halt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetDataProcessing(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformQmRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RequestData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullSimulatorSamples(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenQuantumMachine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseQuantumMachine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetQuantumMachine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRunningJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOpenQuantumMachines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseAllQuantumMachines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetControllers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsJobRunning(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IsJobAcquiringData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Simulate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ClearAllJobResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PerformHalDebugCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSimulatedQuantumState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FrontendServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_wrappers__pb2.StringValue.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.HealthCheckResponse.SerializeToString,
            ),
            'Execute': grpc.unary_unary_rpc_method_handler(
                    servicer.Execute,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.ExecutionRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.ExecutionResponse.SerializeToString,
            ),
            'AddToQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.AddToQueue,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.AddToQueueRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.AddToQueueResponse.SerializeToString,
            ),
            'Compile': grpc.unary_unary_rpc_method_handler(
                    servicer.Compile,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.CompileRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.CompileResponse.SerializeToString,
            ),
            'AddCompiledToQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.AddCompiledToQueue,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.AddCompiledToQueueRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.AddCompiledToQueueResponse.SerializeToString,
            ),
            'RemovePendingJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.RemovePendingJobs,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.JobQueryParams.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.RemovePendingJobsResponse.SerializeToString,
            ),
            'GetPendingJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPendingJobs,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.JobQueryParams.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.GetPendingJobsResponse.SerializeToString,
            ),
            'GetJobExecutionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobExecutionStatus,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.GetJobExecutionStatusRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.GetJobExecutionStatusResponse.SerializeToString,
            ),
            'PausedStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.PausedStatus,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.PausedStatusRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.PausedStatusResponse.SerializeToString,
            ),
            'Resume': grpc.unary_unary_rpc_method_handler(
                    servicer.Resume,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.ResumeRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.ResumeResponse.SerializeToString,
            ),
            'Halt': grpc.unary_unary_rpc_method_handler(
                    servicer.Halt,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.HaltRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.HaltResponse.SerializeToString,
            ),
            'ResetDataProcessing': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetDataProcessing,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.ResetDataProcessingRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.ResetDataProcessingResponse.SerializeToString,
            ),
            'ValidateConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateConfig,
                    request_deserializer=qm_dot_pb_dot_inc__qua__config__pb2.QuaConfig.FromString,
                    response_serializer=qm_dot_pb_dot_compiler__pb2.ValidationResponse.SerializeToString,
            ),
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'PerformQmRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformQmRequest,
                    request_deserializer=qm_dot_pb_dot_inc__qm__api__pb2.HighQmApiRequest.FromString,
                    response_serializer=qm_dot_pb_dot_inc__qm__api__pb2.HighQmApiResponse.SerializeToString,
            ),
            'RequestData': grpc.unary_unary_rpc_method_handler(
                    servicer.RequestData,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.QmDataRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.QmDataResponse.SerializeToString,
            ),
            'PullSimulatorSamples': grpc.unary_stream_rpc_method_handler(
                    servicer.PullSimulatorSamples,
                    request_deserializer=qm_dot_pb_dot_job__results__pb2.PullSimulatorSamplesRequest.FromString,
                    response_serializer=qm_dot_pb_dot_job__results__pb2.SimulatorSamplesResponse.SerializeToString,
            ),
            'OpenQuantumMachine': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenQuantumMachine,
                    request_deserializer=qm_dot_pb_dot_qm__manager__pb2.OpenQuantumMachineRequest.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.OpenQuantumMachineResponse.SerializeToString,
            ),
            'CloseQuantumMachine': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseQuantumMachine,
                    request_deserializer=qm_dot_pb_dot_qm__manager__pb2.CloseQuantumMachineRequest.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.CloseQuantumMachineResponse.SerializeToString,
            ),
            'GetQuantumMachine': grpc.unary_unary_rpc_method_handler(
                    servicer.GetQuantumMachine,
                    request_deserializer=qm_dot_pb_dot_qm__manager__pb2.GetQuantumMachineRequest.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.GetQuantumMachineResponse.SerializeToString,
            ),
            'GetRunningJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRunningJob,
                    request_deserializer=qm_dot_pb_dot_qm__manager__pb2.GetRunningJobRequest.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.GetRunningJobResponse.SerializeToString,
            ),
            'ListOpenQuantumMachines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOpenQuantumMachines,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.ListOpenQuantumMachinesResponse.SerializeToString,
            ),
            'CloseAllQuantumMachines': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseAllQuantumMachines,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.CloseAllQuantumMachinesResponse.SerializeToString,
            ),
            'GetControllers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetControllers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=qm_dot_pb_dot_qm__manager__pb2.GetControllersResponse.SerializeToString,
            ),
            'IsJobRunning': grpc.unary_unary_rpc_method_handler(
                    servicer.IsJobRunning,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.IsJobRunningRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.IsJobRunningResponse.SerializeToString,
            ),
            'IsJobAcquiringData': grpc.unary_unary_rpc_method_handler(
                    servicer.IsJobAcquiringData,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.IsJobAcquiringDataRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.IsJobAcquiringDataResponse.SerializeToString,
            ),
            'Simulate': grpc.unary_unary_rpc_method_handler(
                    servicer.Simulate,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.SimulationRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.SimulationResponse.SerializeToString,
            ),
            'ClearAllJobResults': grpc.unary_unary_rpc_method_handler(
                    servicer.ClearAllJobResults,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'PerformHalDebugCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.PerformHalDebugCommand,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.PerformHalDebugCommandRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.PerformHalDebugCommandResponse.SerializeToString,
            ),
            'GetSimulatedQuantumState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSimulatedQuantumState,
                    request_deserializer=qm_dot_pb_dot_frontend__pb2.GetSimulatedQuantumStateRequest.FromString,
                    response_serializer=qm_dot_pb_dot_frontend__pb2.GetSimulatedQuantumStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'qm.grpc.frontend.Frontend', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Frontend(object):
    """The greeting service definition.
    """

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_wrappers__pb2.StringValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/HealthCheck',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.HealthCheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Execute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/Execute',
            qm_dot_pb_dot_frontend__pb2.ExecutionRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.ExecutionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddToQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/AddToQueue',
            qm_dot_pb_dot_frontend__pb2.AddToQueueRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.AddToQueueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Compile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/Compile',
            qm_dot_pb_dot_frontend__pb2.CompileRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.CompileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddCompiledToQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/AddCompiledToQueue',
            qm_dot_pb_dot_frontend__pb2.AddCompiledToQueueRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.AddCompiledToQueueResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemovePendingJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/RemovePendingJobs',
            qm_dot_pb_dot_frontend__pb2.JobQueryParams.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.RemovePendingJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPendingJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetPendingJobs',
            qm_dot_pb_dot_frontend__pb2.JobQueryParams.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.GetPendingJobsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobExecutionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetJobExecutionStatus',
            qm_dot_pb_dot_frontend__pb2.GetJobExecutionStatusRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.GetJobExecutionStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PausedStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/PausedStatus',
            qm_dot_pb_dot_frontend__pb2.PausedStatusRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.PausedStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Resume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/Resume',
            qm_dot_pb_dot_frontend__pb2.ResumeRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.ResumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Halt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/Halt',
            qm_dot_pb_dot_frontend__pb2.HaltRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.HaltResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResetDataProcessing(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/ResetDataProcessing',
            qm_dot_pb_dot_frontend__pb2.ResetDataProcessingRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.ResetDataProcessingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/ValidateConfig',
            qm_dot_pb_dot_inc__qua__config__pb2.QuaConfig.SerializeToString,
            qm_dot_pb_dot_compiler__pb2.ValidationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/Init',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PerformQmRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/PerformQmRequest',
            qm_dot_pb_dot_inc__qm__api__pb2.HighQmApiRequest.SerializeToString,
            qm_dot_pb_dot_inc__qm__api__pb2.HighQmApiResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RequestData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/RequestData',
            qm_dot_pb_dot_frontend__pb2.QmDataRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.QmDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullSimulatorSamples(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/qm.grpc.frontend.Frontend/PullSimulatorSamples',
            qm_dot_pb_dot_job__results__pb2.PullSimulatorSamplesRequest.SerializeToString,
            qm_dot_pb_dot_job__results__pb2.SimulatorSamplesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenQuantumMachine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/OpenQuantumMachine',
            qm_dot_pb_dot_qm__manager__pb2.OpenQuantumMachineRequest.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.OpenQuantumMachineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseQuantumMachine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/CloseQuantumMachine',
            qm_dot_pb_dot_qm__manager__pb2.CloseQuantumMachineRequest.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.CloseQuantumMachineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetQuantumMachine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetQuantumMachine',
            qm_dot_pb_dot_qm__manager__pb2.GetQuantumMachineRequest.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.GetQuantumMachineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRunningJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetRunningJob',
            qm_dot_pb_dot_qm__manager__pb2.GetRunningJobRequest.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.GetRunningJobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOpenQuantumMachines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/ListOpenQuantumMachines',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.ListOpenQuantumMachinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseAllQuantumMachines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/CloseAllQuantumMachines',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.CloseAllQuantumMachinesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetControllers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetControllers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            qm_dot_pb_dot_qm__manager__pb2.GetControllersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsJobRunning(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/IsJobRunning',
            qm_dot_pb_dot_frontend__pb2.IsJobRunningRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.IsJobRunningResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def IsJobAcquiringData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/IsJobAcquiringData',
            qm_dot_pb_dot_frontend__pb2.IsJobAcquiringDataRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.IsJobAcquiringDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Simulate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/Simulate',
            qm_dot_pb_dot_frontend__pb2.SimulationRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.SimulationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ClearAllJobResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/ClearAllJobResults',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PerformHalDebugCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/PerformHalDebugCommand',
            qm_dot_pb_dot_frontend__pb2.PerformHalDebugCommandRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.PerformHalDebugCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSimulatedQuantumState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/qm.grpc.frontend.Frontend/GetSimulatedQuantumState',
            qm_dot_pb_dot_frontend__pb2.GetSimulatedQuantumStateRequest.SerializeToString,
            qm_dot_pb_dot_frontend__pb2.GetSimulatedQuantumStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
