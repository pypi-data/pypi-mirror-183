[tox]
envlist=lint,{py37}-unit,{py38}-unit,{py39}-unit,{py310}-unit,{py311}-unit
skipsdist=true

[gh-actions]
python =
    3.7: py37-unit, lint
    3.8: py38-unit
    3.9: py39-unit
    3.10: py310-unit
    3.11: py311-unit

[testenv]
commands =
    pip install --upgrade -r requirements.txt -r test-requirements.txt .
    nose2 --config tox.ini --verbose
    coverage xml -o reports/coverage.xml --omit=hcl2/lark_parser.py

[testenv:lint]
allowlist_externals=npm
basepython=python3.7
commands =
    pip install --upgrade -r requirements.txt -r test-requirements.txt -e .
    pylint --rcfile=pylintrc --output-format=colorized --ignore lark_parser.py,version.py hcl2 test
    pycodestyle --exclude=lark_parser.py,version.py hcl2 test
    mypy .
    # run markdown lint. If this fails then run `remark . -o` to reformat all markdown files
    npm install
    npm run lint_markdown

# recursively parse all terraform files in a directory
[testenv:tf_test]
whitelist_externals=rm
passenv = TERRAFORM_CONFIG
basepython=python3.7
commands =
    pip install --upgrade -r requirements.txt -r test-requirements.txt -e .
    rm -f hcl2/lark_parser.py
    python bin/terraform_test {posargs}

[unittest]
plugins=nose2.plugins.junitxml
code-directories=hcl2
start-dir=test
test-file-pattern=test_*.py

[coverage]
always-on=True
coverage=hcl2
coverage-report=
    xml
    term

[junit-xml]
always-on=True
path=reports/nose2.xml

[pycodestyle]
max_line_length=110
ignore=E402
