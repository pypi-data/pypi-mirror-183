{"version":3,"sources":["../node_modules/react-iframe/dist/es/iframe.js","../../src/fscreen.js","../../src/index.tsx","pages/RunDetail/TextsVisualizer/TextsVisualizer.tsx","pages/RunDetail/TextsVisualizer/index.ts"],"names":["Iframe","url","allowFullScreen","position","display","height","width","overflow","styles","onLoad","onMouseOver","onMouseOut","scrolling","id","frameBorder","ariaHidden","sandbox","allow","className","title","ariaLabel","ariaLabelledby","name","target","loading","importance","referrerpolicy","allowpaymentrequest","src","key","defaultProps","objectAssign","style","join","props","Object","create","keys","prop","i","hasOwnProperty","pop","currentAllow","replace","trim","border","React","createElement","assign","fullscreenEnabled","fullscreenElement","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","fullscreen","webkit","moz","ms","document","window","vendor","element","requestFullscreenFunction","bind","addEventListener","type","handler","options","removeEventListener","Boolean","val","toLowerCase","FullScreen","handle","onChange","children","classNames","push","active","useEffect","ref","node","undefined","fullScreenBtnCSS","MyFullScreen","useState","setActive","useRef","handleChange","fscreen","current","enter","useCallback","then","exit","Promise","resolve","useMemo","useFullScreenHandle","onClick","dataurlToBlobUrl","parts","split","mime","substr","blob","b64toBlob","URL","createObjectURL","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","Blob","is_all_custom_data","rs","text","startsWith","is_table_data","content","is_moleculer_data","molecular_types","Set","add","has","is_html_data","html_escape","html","rules","expression","replacement","result","toString","rule","replaceAll","render_raw_moleculer_iframe","dtype","substring","indexOf","render_table_data","data","JSON","parse","e","columns","j","render_html_data","backgroudColor","padding","TextsVisualizer","tableRef","tableColumns","dataKey","flexGrow","cellRenderer","cellData","ErrorBoundary","processedValues","reverse","map","object","step","DataList","tableData","isLoading","searchableKeys","displayName","memo"],"mappings":"6KAuEeA,EArEA,SAAH,GAiCR,IAjCqT,IAAvSC,EAAG,EAAHA,IAAKC,EAAe,EAAfA,gBAAiBC,EAAQ,EAARA,SAAUC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAAUC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAAYC,EAAS,EAATA,UAAWC,EAAE,EAAFA,GAAIC,EAAW,EAAXA,YAAaC,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAU,EAAVA,WAAYC,EAAc,EAAdA,eAAgBC,EAAmB,EAAnBA,oBAAqBC,EAAG,EAAHA,IAAKC,EAAG,EAAHA,IACrSC,EAAeC,IAAa,CAC9BH,IAAKA,GAAO3B,EACZsB,OAAQA,GAAU,KAClBS,MAAO,CACH7B,SAAUA,GAAY,KACtBC,QAASA,GAAW,UACpBG,SAAUA,GAAY,MAE1BK,UAAWA,GAAa,KACxBe,oBAAqBA,GAAuB,KAC5CF,WAAYA,GAAc,KAC1BT,QAAUA,GAAW,YAAIA,GAASiB,KAAK,MAAS,KAChDT,QAASA,GAAW,KACpBhB,OAAQA,GAAU,KAClBc,KAAMA,GAAQ,KACdJ,UAAWA,GAAa,KACxBhB,gBAAiB,kBACjBwB,eAAgBA,GAAkB,KAClCP,MAAOA,GAAS,KAChBF,MAAOA,GAAS,KAChBJ,GAAIA,GAAM,KACV,kBAAmBQ,GAAkB,KACrC,cAAeN,GAAc,KAC7B,aAAcK,GAAa,KAC3Bd,MAAOA,GAAS,KAChBD,OAAQA,GAAU,KAClBI,OAAQA,GAAU,KAClBC,YAAaA,GAAe,KAC5BC,WAAYA,GAAc,KAC1BkB,IAAKA,GAAO,WAEZK,EAAQC,OAAOC,OAAO,MAC1B,MAAiBD,OAAOE,KAAKP,GAAa,eAAE,CAAvC,IAAIQ,EAAI,KACiB,MAAtBR,EAAaQ,KACbJ,EAAMI,GAAQR,EAAaQ,IAGnC,IAAK,IAAL,MAAcH,OAAOE,KAAKH,EAAMF,OAAM,eAAE,CAAnC,IAAIO,EAAC,KACgB,MAAlBL,EAAMF,MAAMO,WACLL,EAAMF,MAAMO,GAG3B,GAAIL,EAAM1B,OACN,IAAK,IAAL,MAAgB2B,OAAOE,KAAKH,EAAM1B,QAAO,eAAE,CAAtC,IAAIqB,EAAG,KACJK,EAAM1B,OAAOgC,eAAeX,KAC5BK,EAAMF,MAAMH,GAAOK,EAAM1B,OAAOqB,IAEhCM,OAAOE,KAAKH,EAAM1B,QAAQiC,OAASZ,UAC5BK,EAAM1B,OAIzB,GAAIN,EACA,GAAI,UAAWgC,EAAO,CAClB,IAAMQ,EAAeR,EAAMjB,MAAM0B,QAAQ,aAAc,IACvDT,EAAMjB,MAAQ,qBAAcyB,EAAaE,QAASA,YAGlDV,EAAMjB,MAAQ,aAQtB,OALIH,GAAe,IACVoB,EAAMF,MAAMQ,eAAe,YAC5BN,EAAMF,MAAMa,OAAS/B,IAGtBgC,IAAMC,cAAc,SAAUZ,OAAOa,OAAO,GAAId,KCrErDL,EAAM,CACVoB,kBAAmB,EACnBC,kBAAmB,EACnBC,kBAAmB,EACnBC,eAAgB,EAChBC,iBAAkB,EAClBC,gBAAiB,EACjBC,WAAY,GAGRC,EAAS,CACb,0BACA,0BACA,0BACA,uBACA,yBACA,wBACA,uBAGIC,EAAM,CACV,uBACA,uBACA,uBACA,sBACA,sBACA,qBACA,oBAGIC,EAAK,CACT,sBACA,sBACA,sBACA,mBACA,qBACA,oBACA,kBAIIC,EAA6B,qBAAXC,QAAqD,qBAApBA,OAAOD,SAA2BC,OAAOD,SAAW,GAEvGE,EACH,sBAAuBF,GAAYxB,OAAOE,KAAKR,IAC/C2B,EAAO,KAAMG,GAAYH,GACzBC,EAAI,KAAME,GAAYF,GACtBC,EAAG,KAAMC,GAAYD,GACtB,G,EAGa,CACbP,kBAAmB,SAAAW,GAAW,OAAAA,EAAQD,EAAOhC,EAAIsB,uBACjDY,0BAA2B,SAAAD,GAAW,OAAAA,EAAQD,EAAOhC,EAAIsB,qBACzD,qBAAuB,OAAOQ,EAASE,EAAOhC,EAAIuB,iBAAiBY,KAAKL,IACxE,4BAA8B,MAAO,IAAIE,EAAOhC,EAAI0B,aACpDU,iBAAkB,SAACC,EAAMC,EAASC,GAAY,SAASH,iBAAiBJ,EAAOhC,EAAIqC,IAAQC,EAASC,IACpGC,oBAAqB,SAACH,EAAMC,EAASC,GAAY,SAASC,oBAAoBR,EAAOhC,EAAIqC,IAAQC,EAASC,IAC1G,wBAA0B,OAAOE,QAAQX,EAASE,EAAOhC,EAAIoB,sBAC7D,sBAAsBsB,KACtB,wBAA0B,OAAOZ,EAASE,EAAOhC,EAAIqB,qBACrD,sBAAsBqB,KACtB,yBAA2B,OAAOZ,GAAS,KAAKE,EAAOhC,EAAIwB,mBAAoBmB,gBAC/E,uBAAuBL,GAAW,OAAOR,GAAS,KAAKE,EAAOhC,EAAIwB,mBAAoBmB,eAAiBL,GACvG,wBAA0B,OAAOR,GAAS,KAAKE,EAAOhC,EAAIyB,kBAAmBkB,gBAC7E,sBAAsBL,GAAW,OAAOR,GAAS,KAAKE,EAAOhC,EAAIyB,kBAAmBkB,eAAiBL,I,ICF1FM,EAAwC,SAAC,G,IACpDC,WACAC,aACAC,aACA1D,cAEM2D,EAAa,GAiBnB,OAhBI3D,GACF2D,EAAWC,KAAK5D,GAGlB2D,EAAWC,KAAK,cAEZJ,EAAOK,QACTF,EAAWC,KAAK,sBAGlBE,qBAAU,WACJL,GACFA,EAASD,EAAOK,OAAQL,KAEzB,CAACA,EAAOK,SAGTjC,yBACE5B,UAAW2D,EAAW5C,KAAK,KAC3BgD,IAAKP,EAAOQ,KACZlD,MAAO0C,EAAOK,OAAS,CAAE1E,OAAQ,OAAQC,MAAO,aAAW6E,GAE1DP,I,kCC/EDQ,EAAgB,85DA+FhBC,EAAe,SAACnD,GACpB,IAAMiC,E,iBDrFsBmB,oBAAkB,GAAvCP,OAAQQ,OACTL,EAAOM,iBAA8B,MAE3CR,qBAAU,WACR,IAAMS,EAAe,WACnBF,EAAUG,EAAQxC,oBAAsBgC,EAAKS,UAG/C,OADAD,EAAQzB,iBAAiB,mBAAoBwB,GACtC,kBAAMC,EAAQrB,oBAAoB,mBAAoBoB,MAC5D,IAEH,IAAMG,EAAQC,uBAAY,WACxB,OAAIH,EAAQxC,kBACHwC,EAAQtC,iBAAiB0C,MAAK,WACnC,OAAOJ,EAAQvC,kBAAkB+B,EAAKS,YAE/BT,EAAKS,QACPD,EAAQvC,kBAAkB+B,EAAKS,cADjC,IAGN,IAEGI,EAAOF,uBAAY,WACvB,OAAIH,EAAQxC,oBAAsBgC,EAAKS,QAC9BD,EAAQtC,iBAEV4C,QAAQC,YACd,IAEH,OAAOC,mBACL,iBAAO,CACLnB,SACAa,QACAG,OACAb,UAEF,CAACH,EAAQa,EAAOG,ICkDFI,GAChB,OACE,qCACE,yBAAQjF,UAAU,oBAAoBkF,QAASjC,EAAQyB,MAAM,UAC3D,yBACA,yBACA,yBACA,4BAEF,cAAC,EAAU,CAAC1E,UAAU,eAAewD,OAAQP,EAAQ,SAClDjC,EAAM0C,eAMf,SAASyB,EAAiBpG,GACxB,IAAIqG,EAAQrG,EAAIsG,MAAM,IAAK,GACvBC,EAAOF,EAAM,GAAGG,OAAO,GAAGF,MAAM,KAAK,GACrCG,EAAOC,EAAUL,EAAM,GAAIE,GAC/B,OAAOI,IAAIC,gBAAgBH,GAG7B,IAAMC,EAAY,SAACG,GAIjB,IAJsE,IAAvCC,EAAW,uDAAG,GAAIC,EAAS,uDAAG,IACvDC,EAAiBC,KAAKJ,GACtBK,EAAa,GAEVC,EAAS,EAAGA,EAASH,EAAeI,OAAQD,GAAUJ,EAAW,CAIxE,IAHA,IAAMM,EAAQL,EAAeK,MAAMF,EAAQA,EAASJ,GAE9CO,EAAc,IAAIC,MAAMF,EAAMD,QAC3B9E,EAAI,EAAGA,EAAI+E,EAAMD,OAAQ9E,IAChCgF,EAAYhF,GAAK+E,EAAMG,WAAWlF,GAGpC,IAAMmF,EAAY,IAAIC,WAAWJ,GACjCJ,EAAWrC,KAAK4C,GAGlB,IAAMhB,EAAO,IAAIkB,KAAKT,EAAY,CAAEjD,KAAM6C,IAC1C,OAAOL,GAGT,SAASmB,EAAmBC,GAC1B,IAAKA,EACH,OAAO,EAET,IAAK,IAAIvF,EAAI,EAAGA,EAAIuF,EAAGT,OAAQ9E,IAC7B,IAAKuF,EAAGvF,GAAGwF,KAAKC,WAAW,cACzB,OAAO,EAGX,OAAO,EAGT,SAASC,EAAcC,GACrB,OAAOA,EAAQF,WAAW,oBAG5B,SAASG,EAAkBD,GACzB,IAAIE,EAAkB,IAAIC,IAK1B,OAJAD,EAAgBE,IAAI,iBACpBF,EAAgBE,IAAI,iBACpBF,EAAgBE,IAAI,mBACpBF,EAAgBE,IAAI,kBACbF,EAAgBG,IAAIL,EAAQ3B,MAAM,IAAK,GAAG,IAGnD,SAASiC,EAAaN,GACpB,OAAOA,EAAQF,WAAW,mBAG5B,SAASS,EAAYC,GAWnB,IAVA,IAAIC,EAAQ,CACV,CAAEC,WAAY,KAAMC,YAAa,SACjC,CAAED,WAAY,KAAMC,YAAa,QACjC,CAAED,WAAY,KAAMC,YAAa,QACjC,CAAED,WAAY,KAAMC,YAAa,UACjC,CAAED,WAAY,KAAMC,YAAa,WAI/BC,EAASJ,EAAKK,WACTxG,EAAI,EAAGA,EAAIoG,EAAMtB,SAAU9E,EAAG,CACrC,IAAIyG,EAAOL,EAAMpG,GACjBuG,EAASA,EAAOG,WAAWD,EAAKJ,WAAYI,EAAKH,aAEnD,OAAOC,EAGT,SAASI,EAA4BhB,GACnC,IAAMiB,EAAQjB,EAAQkB,UAAU,EAAGlB,EAAQmB,QAAQ,MAAM9C,MAAM,KAAK,GACpE2B,EAAUA,EAAQkB,UAAUlB,EAAQmB,QAAQ,KAAO,GACnD,IAAI3C,EAAO,IAAIkB,KAAK,CAACM,GAAU,CAC7BhE,KAAM,eAEFjE,EAAM2G,IAAIC,gBAAgBH,GAuChC,MArCE,+LAMAtB,EAAgB,uYAahBnF,EACA,0CACAkJ,EAAK,yXAmBT,SAASG,EAAkBpB,GAEzB,IAAIqB,EADJrB,EAAUA,EAAQkB,UAAU,mBAAmB/B,QAE/C,IACEkC,EAAOC,KAAKC,MAAMvB,GAClB,MAAOwB,GACP,OAAO,KAET,IAAIhB,EACF,+fAOEtD,EAEJsD,GAAI,oIAMJA,GAAQ,yDACRA,GAAQ,cACR,IAAK,IAAInG,EAAI,EAAGA,EAAIgH,EAAKI,QAAQtC,OAAQ9E,IACvCmG,GAAQ,OAASD,EAAYc,EAAKI,QAAQpH,IAAM,QAElDmG,GAAQ,gBACRA,GAAQ,UACR,IAASnG,EAAI,EAAGA,EAAIgH,EAAKA,KAAKlC,OAAQ9E,IAAK,CACzCmG,GAAQ,OACR,IAAK,IAAIkB,EAAI,EAAGA,EAAIL,EAAKA,KAAKhH,GAAG8E,OAAQuC,IAAK,CAC5C,GACEL,EAAKA,KAAKhH,GAAGqH,IACbL,EAAKA,KAAKhH,GAAGqH,GAAGb,WAAWf,WAAW,eAGtCU,GACE,gOAFUrC,EAAiBkD,EAAKA,KAAKhH,GAAGqH,IASxC,iEACG,GACLL,EAAKA,KAAKhH,GAAGqH,IACbL,EAAKA,KAAKhH,GAAGqH,GAAGb,WAAWf,WAAW,cACtC,CACA,IAAItB,EAAO,IAAIkB,KAAK,CAACsB,EAA4BK,EAAKA,KAAKhH,GAAGqH,KAAM,CAClE1F,KAAM,cAGRwE,GACE,oBAFU9B,IAAIC,gBAAgBH,GAI9B,wHAEFgC,GACE,QACCa,EAAKA,KAAKhH,GAAGqH,GAAKnB,EAAYc,EAAKA,KAAKhH,GAAGqH,GAAGb,YAAc,IAC7D,QAGNL,GAAQ,QAaV,OAXAA,GAAQ,WACRA,GAAQ,UAUDmB,EATPnB,GAAI,mHAiBN,SAASmB,EAAiB3B,GACxBA,EAAUA,EAAQkB,UAAU,kBAAkB/B,QAC9C,IAAIX,EAAO,IAAIkB,KAAK,CAACM,GAAU,CAC7BhE,KAAM,cAEFjE,EAAM2G,IAAIC,gBAAgBH,GAChC,OACE,qBAAK1E,MAAO,CAAE3B,OAAQ,QAASF,SAAU,YAAa,SACpD,cAAC,EAAY,UACX,cAAC,EAAM,CACLF,IAAKA,EACLK,MAAM,OACND,OAAO,OACPmB,QAAQ,OACRN,UAAU,GACVd,QAAQ,QACRD,SAAS,WACTD,iBAAiB,EACjBM,OAAQ,CACNqC,OAAQ,6BACRiH,eAAgB,OAChBC,QAAS,cAQrB,SAASC,EACP9H,GACkD,IAAD,MAC3C+H,EAAWnH,IAAM0C,OAAkB,MAEnC0E,EAAe,CACnB,CACEC,QAAS,OACTtI,IAAK,OACLV,MAAO,OACPb,MAAO,KAET,CACE6J,QAAS,QACTtI,IAAK,QACLV,MAAO,QACPb,MAAO,KAET,CACE6J,QAAS,OACTtI,IAAK,OACLV,MAAO,OACPb,MAAO,EACP8J,SAAU,EAGVC,aAAc,gBAAGC,EAAQ,EAARA,SAAQ,OACvB,qBAAKpJ,UAAU,oBAAoBc,MAAO,CAAEzB,SAAU,QAAS,SAC7D,8BAAM+J,SAKd,OACE,cAACC,EAAA,EAAa,UACZ,qBACErJ,UAAU,kBACVc,MAAO,CAAE3B,OAAQ,OAAQE,SAAU,QAAS,SAE3CsH,EAAwB,OAAL3F,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqH,YAAI,WAAN,EAAL,EAAaiB,mBACzB,OAALtI,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqH,YAAI,WAAN,EAAL,EAAaiB,kBAAmB,IAAIC,UAAUC,KAAI,SAACC,GAAW,OAC7D,8BACE,oCACE,8BAAG,QAAMA,EAAOC,QACfzC,EAAkBwC,EAAO5C,OA9EXG,EA+EWyC,EAAO5C,KA7ExC8B,EADMX,EAA4BhB,KA+EvB,KACHD,EAAc0C,EAAO5C,MAClBuB,EAAkBqB,EAAO5C,MACzB,KACHS,EAAamC,EAAO5C,MACjB8B,EAAiBc,EAAO5C,MACxB,SAXE,mBAAqB4C,EAAOC,MA3ElD,IAA+B1C,KA2FrB,cAAC2C,EAAA,EAAQ,CACPZ,SAAUA,EACVa,UAAgB,OAAL5I,QAAK,IAALA,GAAW,QAAN,EAALA,EAAOqH,YAAI,WAAN,EAAL,EAAaiB,gBACxBN,aAAcA,EACda,UAAgB,OAAL7I,QAAK,IAALA,OAAK,EAALA,EAAO6I,UAClBC,eAAgB,CAAC,cAQ7BhB,EAAgBiB,YAAc,kBAEfnI,UAAMoI,KAA4BlB,GClblCA","file":"static/js/TextsVisualizer.js?version=e32723ce1f4f48ee9cda","sourcesContent":["import React from \"react\";\nimport objectAssign from \"object-assign\";\nconst Iframe = ({ url, allowFullScreen, position, display, height, width, overflow, styles, onLoad, onMouseOver, onMouseOut, scrolling, id, frameBorder, ariaHidden, sandbox, allow, className, title, ariaLabel, ariaLabelledby, name, target, loading, importance, referrerpolicy, allowpaymentrequest, src, key }) => {\n    const defaultProps = objectAssign({\n        src: src || url,\n        target: target || null,\n        style: {\n            position: position || null,\n            display: display || \"initial\",\n            overflow: overflow || null\n        },\n        scrolling: scrolling || null,\n        allowpaymentrequest: allowpaymentrequest || null,\n        importance: importance || null,\n        sandbox: (sandbox && [...sandbox].join(\" \")) || null,\n        loading: loading || null,\n        styles: styles || null,\n        name: name || null,\n        className: className || null,\n        allowFullScreen: \"allowFullScreen\" || null,\n        referrerpolicy: referrerpolicy || null,\n        title: title || null,\n        allow: allow || null,\n        id: id || null,\n        \"aria-labelledby\": ariaLabelledby || null,\n        \"aria-hidden\": ariaHidden || null,\n        \"aria-label\": ariaLabel || null,\n        width: width || null,\n        height: height || null,\n        onLoad: onLoad || null,\n        onMouseOver: onMouseOver || null,\n        onMouseOut: onMouseOut || null,\n        key: key || \"iframe\"\n    });\n    let props = Object.create(null);\n    for (let prop of Object.keys(defaultProps)) {\n        if (defaultProps[prop] != null) {\n            props[prop] = defaultProps[prop];\n        }\n    }\n    for (let i of Object.keys(props.style)) {\n        if (props.style[i] == null) {\n            delete props.style[i];\n        }\n    }\n    if (props.styles) {\n        for (let key of Object.keys(props.styles)) {\n            if (props.styles.hasOwnProperty(key)) {\n                props.style[key] = props.styles[key];\n            }\n            if (Object.keys(props.styles).pop() == key) {\n                delete props.styles;\n            }\n        }\n    }\n    if (allowFullScreen) {\n        if (\"allow\" in props) {\n            const currentAllow = props.allow.replace(\"fullscreen\", \"\");\n            props.allow = `fullscreen ${currentAllow.trim()}`.trim();\n        }\n        else {\n            props.allow = \"fullscreen\";\n        }\n    }\n    if (frameBorder >= 0) {\n        if (!props.style.hasOwnProperty(\"border\")) {\n            props.style.border = frameBorder;\n        }\n    }\n    return React.createElement(\"iframe\", Object.assign({}, props));\n};\nexport default Iframe;\n","const key = {\n  fullscreenEnabled: 0,\n  fullscreenElement: 1,\n  requestFullscreen: 2,\n  exitFullscreen: 3,\n  fullscreenchange: 4,\n  fullscreenerror: 5,\n  fullscreen: 6\n};\n\nconst webkit = [\n  'webkitFullscreenEnabled',\n  'webkitFullscreenElement',\n  'webkitRequestFullscreen',\n  'webkitExitFullscreen',\n  'webkitfullscreenchange',\n  'webkitfullscreenerror',\n  '-webkit-full-screen',\n];\n\nconst moz = [\n  'mozFullScreenEnabled',\n  'mozFullScreenElement',\n  'mozRequestFullScreen',\n  'mozCancelFullScreen',\n  'mozfullscreenchange',\n  'mozfullscreenerror',\n  '-moz-full-screen',\n];\n\nconst ms = [\n  'msFullscreenEnabled',\n  'msFullscreenElement',\n  'msRequestFullscreen',\n  'msExitFullscreen',\n  'MSFullscreenChange',\n  'MSFullscreenError',\n  '-ms-fullscreen',\n];\n\n// so it doesn't throw if no window or document\nconst document = typeof window !== 'undefined' && typeof window.document !== 'undefined' ? window.document : {};\n\nconst vendor = (\n  ('fullscreenEnabled' in document && Object.keys(key)) ||\n  (webkit[0] in document && webkit) ||\n  (moz[0] in document && moz) ||\n  (ms[0] in document && ms) ||\n  []\n);\n\nexport default {\n  requestFullscreen: element => element[vendor[key.requestFullscreen]](),\n  requestFullscreenFunction: element => element[vendor[key.requestFullscreen]],\n  get exitFullscreen() { return document[vendor[key.exitFullscreen]].bind(document); },\n  get fullscreenPseudoClass() { return `:${vendor[key.fullscreen]}`; },\n  addEventListener: (type, handler, options) => document.addEventListener(vendor[key[type]], handler, options),\n  removeEventListener: (type, handler, options) => document.removeEventListener(vendor[key[type]], handler, options),\n  get fullscreenEnabled() { return Boolean(document[vendor[key.fullscreenEnabled]]); },\n  set fullscreenEnabled(val) {},\n  get fullscreenElement() { return document[vendor[key.fullscreenElement]]; },\n  set fullscreenElement(val) {},\n  get onfullscreenchange() { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()]; },\n  set onfullscreenchange(handler) { return document[`on${vendor[key.fullscreenchange]}`.toLowerCase()] = handler; },\n  get onfullscreenerror() { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()]; },\n  set onfullscreenerror(handler) { return document[`on${vendor[key.fullscreenerror]}`.toLowerCase()] = handler; },\n};\n","import React, {\n  useCallback,\n  useState,\n  useRef,\n  useEffect,\n  useMemo,\n} from 'react';\nimport fscreen from 'fscreen';\n\nexport interface FullScreenHandle {\n  active: boolean;\n  enter: () => Promise<void>;\n  exit: () => Promise<void>;\n  node: React.MutableRefObject<HTMLDivElement | null>;\n}\n\nexport interface FullScreenProps {\n  handle: FullScreenHandle;\n  children: any;\n  onChange?: (state: boolean, handle: FullScreenHandle) => void;\n  className?: string;\n}\n\nexport function useFullScreenHandle(): FullScreenHandle {\n  const [active, setActive] = useState<boolean>(false);\n  const node = useRef<HTMLDivElement | null>(null);\n\n  useEffect(() => {\n    const handleChange = () => {\n      setActive(fscreen.fullscreenElement === node.current);\n    };\n    fscreen.addEventListener('fullscreenchange', handleChange);\n    return () => fscreen.removeEventListener('fullscreenchange', handleChange);\n  }, []);\n\n  const enter = useCallback(() => {\n    if (fscreen.fullscreenElement) {\n      return fscreen.exitFullscreen().then(() => {\n        return fscreen.requestFullscreen(node.current);\n      });\n    } else if (node.current) {\n      return fscreen.requestFullscreen(node.current);\n    }\n  }, []);\n\n  const exit = useCallback(() => {\n    if (fscreen.fullscreenElement === node.current) {\n      return fscreen.exitFullscreen();\n    }\n    return Promise.resolve();\n  }, []);\n\n  return useMemo(\n    () => ({\n      active,\n      enter,\n      exit,\n      node,\n    }),\n    [active, enter, exit],\n  );\n}\n\nexport const FullScreen: React.FC<FullScreenProps> = ({\n  handle,\n  onChange,\n  children,\n  className,\n}) => {\n  const classNames = [];\n  if (className) {\n    classNames.push(className);\n  }\n\n  classNames.push('fullscreen');\n\n  if (handle.active) {\n    classNames.push('fullscreen-enabled');\n  }\n\n  useEffect(() => {\n    if (onChange) {\n      onChange(handle.active, handle);\n    }\n  }, [handle.active]);\n\n  return (\n    <div\n      className={classNames.join(' ')}\n      ref={handle.node}\n      style={handle.active ? { height: '100%', width: '100%' } : undefined}\n    >\n      {children}\n    </div>\n  );\n};\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport { FullScreen, useFullScreenHandle } from 'react-full-screen';\n\nimport ErrorBoundary from 'components/ErrorBoundary/ErrorBoundary';\nimport DataList from 'components/kit/DataList';\n\nimport { ITableRef } from 'types/components/Table/Table';\n\nimport { ITextsVisualizerProps } from '../types';\n\nimport './TextsVisualizer.scss';\n\nconst fullScreenBtnCSS = `\n<style>\nbody {\n  background: white;\n}\n.fullscreen-button {\n  position: absolute;\n  z-index: 100;\n  top:  5px;\n  right:  5px;\n  background: rgba(0,0,0,0.05);\n  border:  0;\n  width:  40px;\n  height:  40px;\n  border-radius: 50%;\n  box-sizing: border-box;\n  transition:  transform .3s;\n  font-size: 0;\n  opacity: 1;\n  pointer-events: auto;\n  cursor:  pointer;\n}\n.fullscreen-button:hover {\n  transform: scale(1.125);\n}\n.fullscreen-button span {\n  background: white;\n  width:  4px;\n  height:  4px;\n  border-top:  2.5px solid #111; /* color */\n  border-left:  2.5px solid #111; /* color */\n  position: absolute;\n  outline: 1px solid transparent;\n  -webkit-backface-visibility: hidden;\n  transform: translateZ(0);\n  will-change: transform;\n  -webkit-perspective: 1000;\n  transition:  .3s;\n  transition-delay: .75s;\n}\n.fullscreen-button span:nth-child(1) {\n  top: 11px;\n  left: 11px;\n}\n.fullscreen-button span:nth-child(2) {\n  top: 11px;\n  left: 22px;\n  transform: rotate(90deg);\n}\n.fullscreen-button span:nth-child(3) {\n  top: 22px;\n  left: 11px;\n  transform: rotate(-90deg);\n}\n.fullscreen-button span:nth-child(4) {\n  top: 22px;\n  left: 22px;\n  transform: rotate(-180deg);\n}\n\n/* Fullscreen True\n------------------------------*/\n[fullscreen] .fullscreen-button span:nth-child(1) {\n  top: 22px;\n  left: 22px;\n}\n[fullscreen] .fullscreen-button span:nth-child(2) {\n  top: 22px;\n  left: 11px;\n}\n[fullscreen] .fullscreen-button span:nth-child(3) {\n  top: 11px;\n  left: 22px;\n}\n[fullscreen] .fullscreen-button span:nth-child(4) {\n  top: 11px;\n  left: 11px;\n}\n\n/* Dark Style\n------------------------------*/\n[light-mode=dark] {\n  background: #111;\n  color:  #fff;\n}\n[light-mode=dark] .fullscreen-button {\n  background: rgba(255,255,255,.05);\n}\n\n[light-mode=dark] .fullscreen-button span {\n  border-top:  2.5px solid #fff;\n  border-left:  2.5px solid #fff;\n}\n</style>\n`;\nconst MyFullScreen = (props: any) => {\n  const handler = useFullScreenHandle();\n  return (\n    <>\n      <button className='fullscreen-button' onClick={handler.enter}>\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </button>\n      <FullScreen className='myfullscreen' handle={handler}>\n        {props.children}\n      </FullScreen>\n    </>\n  );\n};\n\nfunction dataurlToBlobUrl(url: any) {\n  var parts = url.split(',', 2);\n  var mime = parts[0].substr(5).split(';')[0];\n  var blob = b64toBlob(parts[1], mime);\n  return URL.createObjectURL(blob);\n}\n\nconst b64toBlob = (b64Data: any, contentType = '', sliceSize = 512) => {\n  const byteCharacters = atob(b64Data);\n  const byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: contentType });\n  return blob;\n};\n\nfunction is_all_custom_data(rs: any): Boolean {\n  if (!rs) {\n    return false;\n  }\n  for (var i = 0; i < rs.length; i++) {\n    if (!rs[i].text.startsWith('data:text/')) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction is_table_data(content: string): Boolean {\n  return content.startsWith('data:text/table,');\n}\n\nfunction is_moleculer_data(content: string): Boolean {\n  let molecular_types = new Set<string>();\n  molecular_types.add('data:text/pdb');\n  molecular_types.add('data:text/sdf');\n  molecular_types.add('data:text/pdbqt');\n  molecular_types.add('data:text/mol2');\n  return molecular_types.has(content.split(',', 1)[0]);\n}\n\nfunction is_html_data(content: string): Boolean {\n  return content.startsWith('data:text/html,');\n}\n\nfunction html_escape(html: string) {\n  var rules = [\n    { expression: /&/g, replacement: '&amp;' }, // keep this rule at first position\n    { expression: /</g, replacement: '&lt;' },\n    { expression: />/g, replacement: '&gt;' },\n    { expression: /\"/g, replacement: '&quot;' },\n    { expression: /'/g, replacement: '&#039;' }, // or  &#39;  or  &#0039;\n    // &apos;  is not supported by IE8\n    // &apos;  is not defined in HTML 4\n  ];\n  var result = html.toString();\n  for (var i = 0; i < rules.length; ++i) {\n    var rule = rules[i];\n    result = result.replaceAll(rule.expression, rule.replacement);\n  }\n  return result;\n}\n\nfunction render_raw_moleculer_iframe(content: string) {\n  const dtype = content.substring(0, content.indexOf(',')).split('/')[1];\n  content = content.substring(content.indexOf(',') + 1);\n  var blob = new Blob([content], {\n    type: 'text/plain',\n  });\n  const url = URL.createObjectURL(blob);\n  const html: string =\n    `<!DOCTYPE html>\n  <html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n` +\n    fullScreenBtnCSS +\n    `\n  </head>\n  <body>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/ngl/2.0.2/ngl.js\"></script>\n    <script>\n      var stage;\n      function toggleFullscreen() {\n        stage.toggleFullscreen();\n      }\n      document.addEventListener(\"DOMContentLoaded\", function () {\n        stage = new NGL.Stage(\"viewport\", { backgroundColor: \"white\" } );\n        stage.loadFile(\"` +\n    url +\n    '\", {defaultRepresentation: true, ext: \"' +\n    dtype +\n    `\"});\n        stage.setSpin(true);\n      });\n    </script>\n    <button class=\"fullscreen-button\" onclick=\"toggleFullscreen()\">\n      <span></span>\n      <span></span>\n      <span></span>\n      <span></span>\n    </button>\n    <div style=\"width:100%; height:300px;\">\n      <div id=\"viewport\" style=\"width:100%; height:100%;\"></div>\n    </div>\n  </body>\n  </html>`;\n  return html;\n}\n\nfunction render_table_data(content: any) {\n  content = content.substring('data:text/table,'.length);\n  var data: any;\n  try {\n    data = JSON.parse(content);\n  } catch (e) {\n    return null;\n  }\n  var html: string =\n    `data:text/html,<html>\n  <head>\n  <script src=\"https://code.jquery.com/jquery-3.5.1.js\"></script>\n  <script src=\"https://cdn.datatables.net/1.13.1/js/jquery.dataTables.min.js\"></script>\n  <script src=\"https://cdn.datatables.net/1.13.1/js/dataTables.bootstrap5.min.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.2.0/css/bootstrap.min.css\">\n  <link rel=\"stylesheet\" href=\"https://cdn.datatables.net/1.13.1/css/dataTables.bootstrap5.min.css\">\n  ` + fullScreenBtnCSS;\n\n  html += `</head><script>\n  function go_fullscreen(elem){\n    elem.nextSibling.requestFullscreen();\n    return false;\n  }\n  </script>`;\n  html += '<table class=\"table table-striped\" style=\"width:100%\">';\n  html += '<thead><tr>';\n  for (var i = 0; i < data.columns.length; i++) {\n    html += '<th>' + html_escape(data.columns[i]) + '</th>';\n  }\n  html += '</tr></thead>';\n  html += '<tbody>';\n  for (var i = 0; i < data.data.length; i++) {\n    html += '<tr>';\n    for (var j = 0; j < data.data[i].length; j++) {\n      if (\n        data.data[i][j] &&\n        data.data[i][j].toString().startsWith('data:image/')\n      ) {\n        const url = dataurlToBlobUrl(data.data[i][j]);\n        html +=\n          `<td> <div style=\"position: relative;\"><button class=\"fullscreen-button\" onclick=\"go_fullscreen(this)\">\n        <span></span>\n        <span></span>\n        <span></span>\n        <span></span>\n      </button><img src=\"` +\n          url +\n          '\" loading=\"lazy\" height=\"200px\" width=\"200px\"></div></td>';\n      } else if (\n        data.data[i][j] &&\n        data.data[i][j].toString().startsWith('data:text/')\n      ) {\n        var blob = new Blob([render_raw_moleculer_iframe(data.data[i][j])], {\n          type: 'text/html',\n        });\n        const url = URL.createObjectURL(blob);\n        html +=\n          '<td><iframe src=\"' +\n          url +\n          '\" loading=\"lazy\" allow=\"fullscreen\" width=\"200px\" height=\"200px\" style=\"border: 0; color: white;\"></iframe></td>';\n      } else {\n        html +=\n          '<td>' +\n          (data.data[i][j] ? html_escape(data.data[i][j].toString()) : '') +\n          '</td>';\n      }\n    }\n    html += '</tr>';\n  }\n  html += '</tbody>';\n  html += '<table>';\n  html += `\n  <div>\n<script>\n$(document).ready(function () {\n    $('table').DataTable();\n});\n</script>\n</html>\n  `;\n  return render_html_data(html);\n}\n\nfunction render_moleculer_data(content: string) {\n  const html = render_raw_moleculer_iframe(content);\n  return render_html_data(html);\n}\n\nfunction render_html_data(content: string) {\n  content = content.substring('data:text/html,'.length);\n  var blob = new Blob([content], {\n    type: 'text/html',\n  });\n  const url = URL.createObjectURL(blob);\n  return (\n    <div style={{ height: '300px', position: 'relative' }}>\n      <MyFullScreen>\n        <Iframe\n          url={url}\n          width='100%'\n          height='100%'\n          loading='lazy'\n          className=''\n          display='block'\n          position='relative'\n          allowFullScreen={true}\n          styles={{\n            border: '1px solid rgb(233 232 231)',\n            backgroudColor: '#fff',\n            padding: '20px',\n          }}\n        />\n      </MyFullScreen>\n    </div>\n  );\n}\n\nfunction TextsVisualizer(\n  props: ITextsVisualizerProps | any,\n): React.FunctionComponentElement<React.ReactNode> {\n  const tableRef = React.useRef<ITableRef>(null);\n\n  const tableColumns = [\n    {\n      dataKey: 'step',\n      key: 'step',\n      title: 'Step',\n      width: 100,\n    },\n    {\n      dataKey: 'index',\n      key: 'index',\n      title: 'Index',\n      width: 100,\n    },\n    {\n      dataKey: 'text',\n      key: 'text',\n      title: 'Text',\n      width: 0,\n      flexGrow: 1,\n      // TODO: replace with a wrapper component for all types of texts visualization\n      // eslint-disable-next-line react/display-name\n      cellRenderer: ({ cellData }: any) => (\n        <div className='ScrollBar__hidden' style={{ overflow: 'auto' }}>\n          <pre>{cellData}</pre>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <ErrorBoundary>\n      <div\n        className='TextsVisualizer'\n        style={{ height: '100%', overflow: 'auto' }}\n      >\n        {is_all_custom_data(props?.data?.processedValues) ? (\n          (props?.data?.processedValues || []).reverse().map((object: any) => (\n            <div key={'custom-resource-' + object.step}>\n              <section>\n                <p>Step {object.step}</p>\n                {is_moleculer_data(object.text)\n                  ? render_moleculer_data(object.text)\n                  : null}\n                {is_table_data(object.text)\n                  ? render_table_data(object.text)\n                  : null}\n                {is_html_data(object.text)\n                  ? render_html_data(object.text)\n                  : null}\n              </section>\n            </div>\n          ))\n        ) : (\n          <DataList\n            tableRef={tableRef}\n            tableData={props?.data?.processedValues}\n            tableColumns={tableColumns}\n            isLoading={props?.isLoading}\n            searchableKeys={['text']}\n          />\n        )}\n      </div>\n    </ErrorBoundary>\n  );\n}\n\nTextsVisualizer.displayName = 'TextsVisualizer';\n\nexport default React.memo<ITextsVisualizerProps>(TextsVisualizer);\n","import TextsVisualizer from './TextsVisualizer';\n\nexport default TextsVisualizer;\n"],"sourceRoot":""}