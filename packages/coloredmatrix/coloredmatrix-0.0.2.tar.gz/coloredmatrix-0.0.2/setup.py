# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['coloredmatrix']

package_data = \
{'': ['*']}

setup_kwargs = {
    'name': 'coloredmatrix',
    'version': '0.0.2',
    'description': 'ANSI color formatting for output in terminal',
    'long_description': '# Colored Matrix\n![GitHub](https://img.shields.io/github/license/JewinV/colored-console)\n\nA Python library for changing the colors in the terminal using ANSI escape codes.\n\n## Installation\nTo install Colored Matrix, use **`pip`**:\n```bash\npip install coloredmatrix\n```\n\n## Usage\nTo use Colored Matrix, import the Stylize class and the Color constants, and call the desired methods on a Stylize object:\n```py\nfrom coloredmatrix import Stylize, Color\n\n# Set the background color to green\nprint(Stylize("hello").bg_color(Color.Green))\n\n# Set the background color to red\nprint(Stylize("hello").bg_color(Color.Red))\n\n# Set the background color to green and the foreground color to red\nprint(Stylize("hello").bg_color(Color.Green).fg_color(Color.Red))\n\n# Set the text to bold and underlined\nprint(Stylize("hello").bold().underline())\n\n```\nYou can also pass an RGB color tuple to the bg_color and fg_color methods:\n```py\nfrom coloredmatrix import Stylize\n\n# Set the background color to red using an RGB color tuple\nprint(Stylize("hello").bg_color((255, 0, 0)))\n\n# Set the background color to green using an RGB color tuple\nprint(Stylize("hello").bg_color((0, 255, 0)))\n\n# Set the background color to red and the foreground color to green using RGB color tuples\nprint(Stylize("hello").bg_color((255, 0, 0)).fg_color((0, 255, 0)))\n```\n\n## Text Styling\n\nThe `Stylize` class provides the following methods for styling text:\n\n- `bold`: Makes the text bold\n- `italic`: Makes the text italic\n- `underline`: Underlines the text\n- `blink`: Makes the text blink\n- `strike`: Strikes through the text\n\nYou can chain these methods to apply multiple styles to the same text. For example:\n\n```python\nfrom coloredmatrix import Stylize\n\n# Set the text to bold, italic, and underlined\nprint(Stylize("hello").bold().italic().underline())\n\n# Set the text to blink and struck through\nprint(Stylize("hello").blink().strike())\n```\n\n## Supported Colors\nYou can also use RGB color tuples to specify any other color.\n<br>The `Color` constants define the following colors:\n| Color Name          | Color Name          | Color Name          | Color Name          | Color Name          |\n| ------------------- | ------------------- | ------------------- | ------------------- | ------------------- |\n| MediumVioletRed     | DeepPink            | PaleVioletRed       | HotPink             | LightPink           |\n| Pink                | DarkRed             | Red                 | Firebrick           | Crimson             |\n| IndianRed           | LightCoral          | Salmon              | DarkSalmon          | LightSalmon         |\n| OrangeRed           | Tomato              | DarkOrange          | Coral               | Orange              |\n| DarkKhaki           | Gold                | Khaki               | PeachPuff           | Yellow              |\n| PaleGoldenrod       | Moccasin            | PapayaWhip          | LightGoldenrodYellow| LemonChiffon        |\n| LightYellow         | Maroon              | Brown               | SaddleBrown         | Sienna              |\n| Chocolate           | DarkGoldenrod       | Peru                | RosyBrown           | Goldenrod           |\n| SandyBrown          | Tan                 | Burlywood           | Wheat               | NavajoWhite         |\n| Bisque              | BlanchedAlmond      | Cornsilk            | Indigo              | Purple              |\n| DarkMagenta         | DarkViolet          | DarkSlateBlue       | BlueViolet          | DarkOrchid          |\n| Fuchsia             | Magenta             | SlateBlue           | MediumSlateBlue     | MediumOrchid        |\n| MediumPurple        | Orchid              | Violet              | Plum                | Thistle             |\n| Lavender            | MidnightBlue        | Navy                | DarkBlue            | MediumBlue          |\n| Blue                | RoyalBlue           | SteelBlue           | DodgerBlue          | DeepSkyBlue         |\n| CornflowerBlue      | SkyBlue             | LightSkyBlue        | LightSteelBlue      | LightBlue           |\n| PowderBlue          | Teal                | DarkCyan            | LightSeaGreen       | CadetBlue           |\n| DarkTurquoise       | MediumTurquoise     | Turquoise           | Aqua                | Cyan                |\n| Aquamarine          | PaleTurquoise       | LightCyan           | DarkGreen           | Green               |\n| DarkOliveGreen      | ForestGreen         | SeaGreen            | Olive               | OliveDrab           |\n| MediumSeaGreen      | LimeGreen           | Lime                | SpringGreen         | MediumSpringGreen   |\n| DarkSeaGreen        | MediumAquamarine    | YellowGreen         | LawnGreen           | Chartreuse          |\n| LightGreen          | GreenYellow         | PaleGreen           | MistyRose           | AntiqueWhite        |\n| Linen               | Beige               | WhiteSmoke          | LavenderBlush       | OldLace             |\n| AliceBlue           | Seashell            | GhostWhite          | Honeydew            | FloralWhite         |\n| Azure               | MintCream           | Snow                | Ivory               | White               |\n| Black               | DarkSlateGray       | DimGray             | SlateGray           | Gray                |\n| LightSlateGray      | DarkGray            | Silver              | LightGray           | Gainsboro           |\n\n\n## License\nLicense\nColored Matrix is released under the MIT License. See the **LICENSE** file for more information.\n',
    'author': 'Jewin Varghese',
    'author_email': 'jewinvarghese@protonmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/JewinV/coloredmatrix',
    'packages': packages,
    'package_data': package_data,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
