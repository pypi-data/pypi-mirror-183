Metadata-Version: 1.2
Name: audonnx
Version: 0.6.3
Summary: Deploy models in ONNX format
Home-page: https://github.com/audeering/audonnx/
Author: Johannes Wagner, Hagen Wierstorf
Author-email: jwagner@audeering.com, hwierstorf@audeering.com
License: MIT
Project-URL: Documentation, https://audeering.github.io/audonnx/
Description: =======
        audonnx
        =======
        
        |tests| |coverage| |docs| |python-versions| |license|
        
        **audonnx** deploys machine learning models stored in ONNX_ format.
        
        Machine learning models can be trained
        in a variety of frameworks,
        e.g. scikit-learn_, TensorFlow_, Torch_.
        To be independent of the training framework
        and its version models can be exported in ONNX_ format,
        which enables you to deploy and combine them easily.
        
        **audonnx** allows you to name inputs and outputs
        of your model,
        and automatically loads the correct feature extraction
        from a YAML file stored with your model.
        
        Have a look at the installation_ and usage_ instructions.
        
        .. _ONNX: https://onnx.ai/
        .. _scikit-learn: https://scikit-learn.org
        .. _TensorFlow: https://www.tensorflow.org
        .. _Torch: https://pytorch.org/
        .. _installation: https://audeering.github.io/audonnx/install.html
        .. _usage: https://audeering.github.io/audonnx/usage.html
        
        
        .. badges images and links:
        .. |tests| image:: https://github.com/audeering/audonnx/workflows/Test/badge.svg
            :target: https://github.com/audeering/audonnx/actions?query=workflow%3ATest
            :alt: Test status
        .. |coverage| image:: https://codecov.io/gh/audeering/audonnx/branch/master/graph/badge.svg?token=UGxnVQiKGK
            :target: https://codecov.io/gh/audeering/audonnx/
            :alt: code coverage
        .. |docs| image:: https://img.shields.io/pypi/v/audonnx?label=docs
            :target: https://audeering.github.io/audonnx/
            :alt: audonnx's documentation
        .. |license| image:: https://img.shields.io/badge/license-MIT-green.svg
            :target: https://github.com/audeering/audonnx/blob/master/LICENSE
            :alt: audonnx's MIT license
        .. |python-versions| image:: https://img.shields.io/pypi/pyversions/audonnx.svg
            :target: https://pypi.org/project/audonnx/
            :alt: audonnx's supported Python versions
        
        Changelog
        =========
        
        All notable changes to this project will be documented in this file.
        
        The format is based on `Keep a Changelog`_,
        and this project adheres to `Semantic Versioning`_.
        
        
        Version 0.6.3 (2023-01-03)
        --------------------------
        
        * Added: support for Python 3.10
        * Changed: split API documentation into sub-pages
          for each function
        
        
        Version 0.6.2 (2022-07-14)
        --------------------------
        
        * Changed: require ``audobject>=0.7.2``
        
        
        Version 0.6.1 (2022-06-27)
        --------------------------
        
        * Fixed: added missing ``onnx`` dependency to ``setup.cfg``
        
        
        Version 0.6.0 (2022-06-23)
        --------------------------
        
        * Added: ``audonnx.Function``
        * Added: ``audonnx.Model.labels()``
        * Added: arguments
          ``concat``,
          ``outputs``,
          ``squeeze``
          to ``audonnx.Model.__call__()``
        * Added: tests on Windows
        * Added: ``audonnx.testing`` module
        * Changed: optionally init ``audonnx.Model`` from proto object instead of ONNX file
        * Changed: dynamic axis can be specified as ``None`` in ONNX graph
        * Changed: support output nodes where last dimension is dynamic
        * Deprecated: argument ``output_names`` of ``audonnx.Model.__call__()``
        
        
        Version 0.5.2 (2022-04-01)
        --------------------------
        
        * Fixed: always replace dynamic axis names with ``-1``
          in input and output shapes of model nodes
        
        
        Version 0.5.1 (2022-03-29)
        --------------------------
        
        * Added: argument ``auto_install`` to ``audonnx.load()``
        
        
        Version 0.5.0 (2022-02-09)
        --------------------------
        
        * Added: argument ``device``
        * Changed: use CPU by default
        * Changed: require ``onnxruntime>=1.8.0``
        * Removed:
          ``audonnx.Model.forward()``
          ``audonnx.Model.labels``,
          ``audonnx.Model.predict()``,
          ``audonnx.Model.transform``
        
        
        Version 0.4.3 (2022-01-10)
        --------------------------
        
        * Fixed: publication of docs failed
        
        
        Version 0.4.2 (2022-01-10)
        --------------------------
        
        * Fixed: publication of docs failed
        
        
        Version 0.4.1 (2022-01-10)
        --------------------------
        
        * Fixed: author email address in Python package metadata
        
        
        Version 0.4.0 (2022-01-10)
        --------------------------
        
        * Added: first public release
        * Changed: switch to MIT license
        * Changed: move repo to Github
        * Fixed: remove ``audsp`` from docstring example
          as we no longer depend on it
        
        
        Version 0.3.3 (2021-12-30)
        --------------------------
        
        * Changed: use Python 3.8 as default
        
        
        Version 0.3.2 (2021-11-01)
        --------------------------
        
        * Changed: use ``audobject`` >=0.6.1
        
        
        Version 0.3.1 (2021-10-05)
        --------------------------
        
        * Fixed: ``audonnx.load()`` try to load model from ONNX if YAML does not exist
        
        
        Version 0.3.0 (2021-10-01)
        --------------------------
        
        * Changed: audobject >=0.5.0
        * Changed: force ``.yaml`` extension when model is saved
        * Fixed: if possible load model from ``.yaml`` in ``audonnx.load()``
        
        
        Version 0.2.2 (2021-09-23)
        --------------------------
        
        * Fixed: link to ONNX runtime CUDA mapping table
        
        
        Version 0.2.1 (2021-09-15)
        --------------------------
        
        * Fixed: loading of old models that contain a ``model.yaml`` file
        
        
        Version 0.2.0 (2021-07-20)
        --------------------------
        
        * Added:
          ``audonnx.InputNode``,
          ``audonnx.Model.__call__()``,
          ``audonnx.Model.inputs``,
          ``audonnx.Model.outputs``,
          ``audonnx.OutputNode``
        * Changed: reshape input to expected shape
        * Changed: do not depend on existing models in tests and documentation
        * Changed: support multiple input nodes
        * Changed: make ``audonnx.Model`` serializable
        * Deprecated:
          ``audonnx.Model.forward()``
          ``audonnx.Model.labels``,
          ``audonnx.Model.predict()``,
          ``audonnx.Model.transform``
        * Removed:
          ``audonnx.Model.input_node``,
          ``audonnx.Model.input_shape``,
          ``audonnx.Model.input_type``,
          ``audonnx.Model.output_nodes``,
          ``audonnx.Model.output_shape``,
          ``audonnx.Model.output_type``,
        
        
        Version 0.1.1 (2021-03-31)
        --------------------------
        
        * Changed: update documentation how to select specific GPU device
        
        
        Version 0.1.0 (2021-03-25)
        --------------------------
        
        * Added: initial release
        
        
        .. _Keep a Changelog:
            https://keepachangelog.com/en/1.0.0/
        .. _Semantic Versioning:
            https://semver.org/spec/v2.0.0.html
        
Keywords: mlops,machine learning,ONNX
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering
