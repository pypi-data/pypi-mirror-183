# coding: utf-8

"""
    FrontRunner API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import frontrunner_python_sdk
from frontrunner_python_sdk.models.task import Task  # noqa: E501
from frontrunner_python_sdk.rest import ApiException

class TestTask(unittest.TestCase):
    """Task unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Task
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = frontrunner_python_sdk.models.task.Task()  # noqa: E501
        if include_optional :
            return Task(
                id = 56, 
                author = 56, 
                title = '0', 
                description = '0', 
                date_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                date_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                date_due = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                completed = True, 
                assigned_to = [
                    frontrunner_python_sdk.models.tenant_user_part.TenantUserPart(
                        id = 56, 
                        display_name = '0', )
                    ], 
                linked_contacts = [
                    frontrunner_python_sdk.models.person_part.PersonPart(
                        id = 56, 
                        first_name = '0', 
                        last_name = '0', 
                        primary_addr = '0', )
                    ], 
                overdue = True
            )
        else :
            return Task(
                id = 56,
                author = 56,
                title = '0',
                date_added = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                date_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                overdue = True,
        )

    def testTask(self):
        """Test Task"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
