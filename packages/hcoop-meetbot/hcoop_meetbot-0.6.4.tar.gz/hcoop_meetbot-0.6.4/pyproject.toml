[tool.poetry]
name = "hcoop-meetbot"
version = "0.6.4" # published version is managed using Git tags (see below)
description = "Plugin for Limnoria to help run IRC meetings"
authors = ["Kenneth J. Pronovici <pronovic@ieee.org>"]
license = "Apache-2.0"
readme = "PyPI.md"
homepage = "https://pypi.org/project/hcoop-meetbot/"
include = [
   { path = 'Changelog', format = 'sdist' },
   { path = 'NOTICE', format = 'sdist' },
   { path = 'LICENSE', format = 'sdist' },
   { path = 'CREDITS', format = 'sdist' },
   { path = 'README.md', format = 'sdist' },
   { path = 'docs', format = 'sdist' },
   { path = 'tests', format = 'sdist' },
]
exclude = [ "HcoopMeetbot/test.py" ] # annoyingly, bot tests must live in the source tree
packages = [ { include = "HcoopMeetbot", from = "src" },
             { include = "hcoopmeetbotlogic", from = "src" } ]
classifiers=[
   "Programming Language :: Python :: 3",
   "License :: OSI Approved :: Apache Software License",
   "Operating System :: OS Independent",
   "Environment :: Console",
   "Intended Audience :: System Administrators",
   "Natural Language :: English",
   "Topic :: Utilities",
   "Topic :: Communications :: Chat :: Internet Relay Chat"
]

# Published version is managed using Git tags
# We get either the tag (like "0.24.1") or a snapshot-type version (like "0.24.1+3.e8319c4")
# If the plugin is not installed, then the version is always "0.0.0", taken from above
[tool.poetry-dynamic-versioning]
enable = false
pattern = '^[vV](?P<base>\d+\.\d+\.\d+)'  # this extracts the version from our vX.Y.Z tag format
format-jinja = "{% if distance == 0 and not dirty %}{{ base }}{% else %}{{ base }}+{{ distance }}.{{ commit }}{% endif %}"

[tool.poetry.scripts]
meetbot = "hcoopmeetbotlogic.cli:meetbot"

[tool.poetry.plugins."limnoria.plugins"]
"HcoopMeetbot" = "HcoopMeetbot:plugin"

[tool.poetry.dependencies]
python = ">=3.7.2,<4"
limnoria = "^2021.01.15"
attrs = "^21.2.0"
pytz = "^2021.3"
genshi = "^0.7.5"
cattrs = "^22.1.0"
click = "^8.1.3"
importlib-metadata = "^4.11.4"
sphinx = { version="^4.5.0", optional=true }
sphinx-autoapi = { version="^1.8.4", optional=true }
toml = { version="^0.10.2", optional=true }

[tool.poetry.extras]
docs = [ "sphinx", "sphinx-autoapi", "toml" ]

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
pytest-testdox = "^3.0.1"
coverage = "^6.3.2"
pylint = "^2.15.0"
pre-commit = "^2.18.1"
black = "^22.3.0"
mypy = "^0.950"
isort = "^5.10.1"
coveralls = "^3.3.1"
types-pytz = "^2021.3.7"
colorama = "^0.4.5"

[tool.black]
line-length = 132
target-version = ['py37', 'py38', 'py39', 'py310' ]
include = '(src\/scripts\/.*$|\.pyi?$)'
exclude = '''
/(
    \.git
  | __pycache__
  | \.tox
  | \.venv
  | \.poetry
  | build
  | dist
  | docs
  | notes
)/
'''

[tool.isort]
profile = "black"
line_length = 132
skip_glob = [ "docs", "notes" ]

[tool.pytest.ini_options]
filterwarnings = [
   'ignore:.*Flags not at the start of the expression.'  # Genshi does some deprecated things that don't matter to us
]

[build-system]
requires = ["poetry>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
