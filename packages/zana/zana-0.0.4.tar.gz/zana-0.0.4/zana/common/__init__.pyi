from collections import abc as abc
from typing import Any, TypeVar

_R = TypeVar("_R")
_T = TypeVar("_T")
_R_Co = TypeVar("_R_Co", covariant=True)

class class_property:
    __fget__: Any = ...
    __doc__: Any = ...
    __name__: Any = ...
    __module__: Any = ...
    def __init__(self, getter: abc.Callable[..., _R_Co]) -> None: ...
    def __get__(self, obj: _T, typ: type = ...) -> _R_Co: ...

def try_import(modulename: str, qualname: str = ..., default: Any = ...) -> Any: ...
