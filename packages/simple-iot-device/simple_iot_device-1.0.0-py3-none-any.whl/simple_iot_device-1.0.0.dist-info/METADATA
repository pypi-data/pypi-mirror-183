Metadata-Version: 2.1
Name: simple-iot-device
Version: 1.0.0
Summary: Simple IOT device simulator
Author-email: alv2017 <alv2017@protonmail.com>
License: MIT License (MIT)
        
        Copyright © 2022 alv2017
        
        Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
        documentation files (the "Software"), to deal in the Software without restriction, including without limitation
        the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software,
        and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all copies or substantial
        portions of the Software.
        
        THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
        WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
        OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT
        OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
        
Project-URL: Homepage, https://github.com/alv2017/simple-iot-device/
Keywords: iot,measurements,simulator
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Provides-Extra: dev
Requires-Dist: black ; extra == 'dev'
Requires-Dist: flake8 ; extra == 'dev'
Requires-Dist: isort ; extra == 'dev'
Requires-Dist: pytest ; extra == 'dev'

# Simple IOT Device

IOT device simulator.

The simulated device takes a number of measurements at some fixed point of time.

The measurements data returned as Python dictionary.

## IOT Device Measurements

- temperature, in °C;
- pressure, in kPa;
- relative humidity, in %;

## Basic Usage

```Python 3
    from simple_iot_device import SimpleIOTDevice
    
    # create Simple IOT Device
    device = SimpleIOTDevice(name="SDM-120230")
    
    # make measurement
    measurement = device.make_measurement()
    
    # print measurement result
    print(measurement)
```




