Metadata-Version: 2.1
Name: leetcodeDriverPY
Version: 0.0.3
Summary: A simple library to help people run Leetcode testcases without the Leetcode online IDE.
Home-page: https://github.com/Duve3/leetcodeDriverPY
Author: Duve3
Author-email: 
License: MIT
Keywords: leetcode
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Education
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Description-Content-Type: text/markdown
License-File: LICENSE.txt

# leetcodeDriverPY
A simple driver to allow you to use testcases in your own code :)

If you would like to use this in your project, its a simple as
just doing ```pip install leetcodeDriverPY```

Then once you have done that inside of your python file you will
want to do something like this:

###### top of the file:
```py
from leetcodeDriverPY import driver
```
###### inbetween these two segments of code should be your solution class with the solution function inside.
```py
sol = Solution()  # this should be your solution class
testcases = {  # create by doing: 'testcase': answer
    'answer': 'correct_solution',
}
driver(sol, testcases)
# ^ sol should be your Solution class
# testcases should be the testcases that you want to use to test your program.
```
###### If you class has more than one function inside you may run into issues, for that reason I added a "optionalFunc" parameter.
###### This would be how you use it:
```py
# this code is just the code from above but changed to use optionalFunc
sol = Solution()  # this should be your solution class
testcases = {  # create by doing: 'testcase': answer
    'answer': 'correct_solution',
}
driver(sol, testcases, optionalFunc=sol.IntToRoman)
# ^ optionalFunc should be your function REFERENCE! (ex: sol.IntToRoman)
# You shouldn't actually call the function.
```

Change Log
==========

0.0.1 (12/30/2022)
-------------------
- First Release

0.0.2 (12/30/2022)
-------------------
- I forgot to actually make it work

0.0.3 (12/31/2022)
-------------------
- I actually did stuff???
- Removed legacy code.
- Added verification to ensure that the correct parameters are filled.
- Separated the big __init__ file into some smaller files.
- Changed the error text from FunctionNotFound.
- Added "optionalFunc" parameter, incase you needed to give a direct reference to your function.
- Updated the README.md to show how to use the optionalFunc parameter.
- Added a print statement to inform you of what function is being used.
- Added a NotEnoughTestcases Error.
- Added a check to confirm that len(testcases) > 1 if it fails then it raises NotEnoughTestcases.

