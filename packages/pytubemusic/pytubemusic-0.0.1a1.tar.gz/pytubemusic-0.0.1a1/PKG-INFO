Metadata-Version: 2.1
Name: pytubemusic
Version: 0.0.1a1
Summary: A cli that may or may not download albums from a certain website
License: MIT License
        
        Copyright (c) 2023 James Finnie-Ansley
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Classifier: Development Status :: 1 - Planning
Classifier: Topic :: Utilities
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE

# PyTubeMusic

A cli that may or may not download albums from a certain website.

> PyTubeMusic is in alpha. Features are limited and significant API changes are
> expected

## Install

```
pip install pytubemusic
```

Requires [ffmpeg](https://ffmpeg.org/) to be installed on your machine.

## Usage

Album/Track data must be provided in toml form. e.g.:

```toml
# album_data.toml
url = "..."  # URL here

[metadata]
name = "Sonatas for Two Pianos"
album = "Sonatas for Two Pianos"
artist = "Claude Bolling"
genre = "Classical"
year = 1989
tracks = [
    { time = "00:00", name = "Sonata No.1 C Minor" },
    { time = "24:00", name = "Sonata No.2 G-Sharp Minor" },
]
```

The `metadata.tracks` field specifies the name of each track and when each track
starts.

The cli can then be used to download the whole video as a single audio file, or
as individual tracks:
- `pytubemusic album album_data.toml` will download each track as a separate audio
file.  
- `pytubemusic track album_data.toml` will download the video as a single
audio file.
