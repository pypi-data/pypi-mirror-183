valid = [
  { atom = "_/_", eapis = "..", category = "_", package = "_" },
  { atom = "_/_-", eapis = "..", category = "_", package = "_-" },
  { atom = "_.+-/_+-", eapis = "..", category = "_.+-", package = "_+-" },
  { atom = "_--/_--", eapis = "..", category = "_--", package = "_--" },
  { atom = "a/b", eapis = "..", category = "a", package = "b" },
  { atom = "a/b-", eapis = "..", category = "a", package = "b-" },
  { atom = "a/b-r100", eapis = "..", category = "a", package = "b-r100" },
  { atom = "<a/b-r0-1-r2", eapis = "..", category = "a", package = "b-r0", version = "<1-r2", revision = "2" },
  { atom = "<=a/b-1", eapis = "..", category = "a", package = "b", version = "<=1", revision = "0" },
  { atom = "=a/b-1-r1", eapis = "..", category = "a", package = "b", version = "=1-r1", revision = "1"},
  { atom = "=a/b-3*", eapis = "..", category = "a", package = "b", version = "=3*", revision = "0" },
  { atom = "=a/b-3-r1*", eapis = "..", category = "a", package = "b", version = "=3-r1*", revision = "1" },
  { atom = "~a/b-0", eapis = "..", category = "a", package = "b", version = "~0", revision = "0" },
  { atom = ">=a/b-2", eapis = "..", category = "a", package = "b", version = ">=2", revision = "0" },
  { atom = ">a/b-3-r0", eapis = "..", category = "a", package = "b", version = ">3-r0", revision = "0" },
  { atom = ">a/b-3-c-4-r3", eapis = "..", category = "a", package = "b-3-c", version = ">4-r3", revision = "3" },
  ## EAPI specific validity
  # slot deps in EAPI >= 1
  { atom = "a/b:0", eapis = "1..", category = "a", package = "b", slot = "0" },
  # blockers in EAPI >= 2
  { atom = "!a/b", eapis = "2..", category = "a", package = "b", blocker = "!" },
  { atom = "!!a/b", eapis = "2..", category = "a", package = "b", blocker = "!!" },
  # use deps in EAPI >= 2
  { atom = "a/b[use]", eapis = "2..", category = "a", package = "b", use = ["use"]},
  { atom = "a/b[a,b=,!c=,d?,!e?,-f]", eapis = "2..", category = "a", package = "b", use = ["a", "b=", "!c=", "d?", "!e?", "-f"]},
  # use dep defaults in EAPI >= 4
  { atom = "a/b[use(+)]", eapis = "4..", category = "a", package = "b", use = ["use(+)"]},
  { atom = "a/b[use(-)]", eapis = "4..", category = "a", package = "b", use = ["use(-)"]},
  { atom = "a/b[a(-),b(+)=,!c(-)=,d(+)?,!e(-)?,-f(+)]", eapis = "4..", category = "a", package = "b", use = ["a(-)", "b(+)=", "!c(-)=", "d(+)?", "!e(-)?", "-f(+)"]},
  # subslot deps in EAPI >= 5
  { atom = "a/b:0/1", eapis = "5..", category = "a", package = "b", slot = "0", subslot = "1" },
  # slot operators in EAPI >= 5
  { atom = "a/b:*", eapis = "5..", category = "a", package = "b", slot_op = "*" },
  { atom = "a/b:=", eapis = "5..", category = "a", package = "b", slot_op = "=" },
  { atom = "a/b:0=", eapis = "5..", category = "a", package = "b", slot = "0", slot_op = "=" },
  # all official fields
  { atom = "!!=cat/pkg-1-r2:3/4=[a,b,c]", eapis = "5..", category = "cat", package = "pkg", blocker = "!!", version = "=1-r2", revision = "2", slot = "3", subslot = "4", slot_op = "=", use = ["a", "b", "c"]},
  # repo deps in unofficial EAPIs
  { atom="cat/pkg::repo", eapis="U..", category="cat", package = "pkg", repo = "repo"},
]

# invalid atoms
invalid = [
  "",
  "a",
  "/b",
  "a/+b",
  ".a/.b",
  # invalid version suffixes
  "=a/b-1_a",
  "=a/b-1_a1",
  # invalid slot deps
  "a/b:",
  "a/b:+",
  "a/b:+0",
  "a/b:.a",
  "a/b:-b",
  "a/b:a@b",
  # invalid blockers
  "!!!a/b",
  "!a/b-0",
  "!!a/b-0-r1",
  # invalid use deps
  "a/b[]",
  "a/b[-]",
  "a/b[-a?]",
  "a/b[!a]",
  # invalid use dep defaults
  "a/b[(-)]",
  "a/b[(+)]",
  "a/b[a()]",
  "a/b[a(?)]",
  "a/b[a(b)]",
  "a/b[a(-+)]",
  "a/b[a(++)]",
  "a/b[a((+))]",
  "a/b[a(-)b]",
  # invalid subslot deps
  "a/b:/",
  "a/b:/0",
  "a/b:0/",
  "a/b:0/+1",
  "a/b:0//1",
  "a/b:0/1/2",
  # invalid slot ops
  "a/b:*0",
  "a/b:=0",
  "a/b:*=",
  "a/b:==",
  # package names can't end in a hyphen followed by anything matching a version
  "a/b-0",
  "<a/b-1-1",
  "=a/b-1-c-2-3",
  ">a/b-1-r2-3-r4",
  # version operator with missing version
  "~a/b",
  "~a/b-r1",
  ">a/b",
  ">=a/b-r1",
  # '~' operator can't be used with a revision
  "~a/b-1-r1",
  # '*' suffix can only be used for versioned atoms with the '=' operator
  ">=a/b-0*",
  "~a/b-0*",
  "a/b-0*",
  "a/b*",
  # '*' suffix can only be used with valid version strings
  "=a/b-0.*",
  "=a/b-0-r*",
  # invalid repo deps
  "a/b::",
  "a/b::-repo",
  "a/b::repo-1",
  "a/b::repo@path",
]

# atom comparison
# format: expression that evaluates to true
compares = [
  # duplicate use deps
  "a/b[u] == a/b[u,u]",
  # differently ordered use deps
  "a/b[a,b] == a/b[b,a]",
]

# atom sorting
# format: [unsorted, sorted]
sorting = [
  # categories
  [["c/pkg", "b/pkg", "a/pkg"], ["a/pkg", "b/pkg", "c/pkg"]],
  # packages
  [["cat/c", "cat/b", "cat/a"], ["cat/a", "cat/b", "cat/c"]],
  # blocks
  [["!a/b", "!!a/b", "a/b"], ["a/b", "!!a/b", "!a/b"]],
  # version ops
  [
      [">a/b-1", ">=a/b-1", "~a/b-1", "=a/b-1*", "=a/b-1", "<=a/b-1", "<a/b-1"],
      ["<a/b-1", "<=a/b-1", "=a/b-1", "=a/b-1*", "~a/b-1", ">=a/b-1", ">a/b-1"]
  ],
  # slots
  [["a/b:2", "a/b:1", "a/b:0"], ["a/b:0", "a/b:1", "a/b:2"]],
  # subslots
  [["a/b:0/2", "a/b:0/1", "a/b:0/0"], ["a/b:0/0", "a/b:0/1", "a/b:0/2"]],
  # slot operators
  [["a/b:0=", "a/b:0", "a/b:*", "a/b:=", "a/b"], ["a/b", "a/b:=", "a/b:*", "a/b:0", "a/b:0="]],
  # use deps
  [["a/b[c]", "a/b[b]", "a/b[a]"], ["a/b[a]", "a/b[b]", "a/b[c]"]],
  # equal versions shouldn't be sorted
  [["=a/b-0", "=a/b-00", "=a/b-0-r0"], ["=a/b-0", "=a/b-00", "=a/b-0-r0"]],
  [["=a/b-1.0.2", "=a/b-1.0.2-r0", "=a/b-1.000.2"], ["=a/b-1.0.2", "=a/b-1.0.2-r0", "=a/b-1.000.2"]],
  # simple versions
  [["=a/b-2", "=a/b-1", "=a/b-0"], ["=a/b-0", "=a/b-1", "=a/b-2"]],
  [["=a/b-1.100", "=a/b-1.10", "=a/b-1.1"], ["=a/b-1.1", "=a/b-1.10", "=a/b-1.100"]],
  # letter suffixes
  [["=a/b-1z", "=a/b-1y", "=a/b-1b", "=a/b-1a"], ["=a/b-1a", "=a/b-1b", "=a/b-1y", "=a/b-1z"]],
  # release suffixes
  [
      ["=a/b-1_p", "=a/b-1_rc", "=a/b-1_pre", "=a/b-1_beta", "=a/b-1_alpha"],
      ["=a/b-1_alpha", "=a/b-1_beta", "=a/b-1_pre", "=a/b-1_rc", "=a/b-1_p"]
  ],
  [["=a/b-1_p2", "=a/b-1_p1", "=a/b-1_p0"], ["=a/b-1_p0", "=a/b-1_p1", "=a/b-1_p2"]],
  # revisions
  [["=a/b-1-r2", "=a/b-1-r1", "=a/b-1-r0"], ["=a/b-1-r0", "=a/b-1-r1", "=a/b-1-r2"]],
]
