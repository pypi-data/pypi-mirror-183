0010        NAM  DSAVE 
0020        DEF  RUNTIM
0030        DEF  ASCIIS
0040        DEF  PARSE 
0050        DEF  ERMSG 
0060        DEF  INIT  
0070 RUNTIM BSZ  2
0080        DEF  DSAVE.
0090        DEF  DGET. 
0100        DEF  SCRTB.
0110        DEF  .   
0120 PARSE  BSZ  2
0130        DEF  DSAVEP
0140        DEF  DGETP 
0150        DEF  SCRATP
0160        BYT  377,377
0170 ASCIIS ASP  "SAVE"           !  instead of 'DSAVE' and 'DGET'
0180        ASP  "GET"
0190        ASP  "SCRATCHBIN"
0200        ASP  ""             ! control H, control P
0210 ERMSG  BYT  377
0220 DGETP  PUBD R43,+R6
0230        JSB  =STREX+
0240        JEZ  ERROR!
0250        JMP  PRSDON
0260 DSAVEP PUBD R43,+R6
0270        JSB  =STREX+
0280        JEZ  ERROR!
0290        CMB  R14,=54
0300        JNZ  PRSDON
0310        JSB  =SEQ#  
0320        JEZ  ERROR!
0330        JSB  =PUSH32
0340        CMB  R14,=54
0350        JNZ  PRSDON
0360        JSB  =SEQ#  
0370        JEZ  ERROR!
0380        JSB  =PUSH32
0390 PRSDON POBD R47,-R6
0400 PRSDN1 LDB  R45,=371
0410        PUMD R45,+R12
0420        JSB  =SCAN  
0430 INIT   RTN  
0440 ERROR! POBD R43,-R6
0450        JSB  =ERROR+
0460        BYT  130
0470 SCRATP LDB  R47,R43
0480        JMP  PRSDN1
0490        BYT  0,56
0500 .    BIN  
0510        LDM  R44,=8D,0
0520        DEF  DATE  
0530        ADMD R46,=BINTAB
0540        PUMD R44,+R12
0550        RTN  
0560 DATE   ASC  "09/09/81"
0570        BYT  241
0580 SCRTB. STBD R#,=GINTDS
0590        BIN  
0600        LDMD R24,=BINTAB
0610        DCM  R24
0620        LDMD R26,=LWAMEM
0630        STM  R26,R22
0640        SBM  R22,R24
0650        LDB  R20,=4
0660        LDM  R32,=LAVAIL
0670 SCRTB1 LDMD R36,R32
0680        ADM  R36,R22
0690        PUMD R36,+R32
0700        DCB  R20
0710        JNZ  SCRTB1
0720        LDMD R36,R32
0730        CMMD R36,=LWAMEM
0740        JZR  SCRTB2
0750        ADM  R36,R22
0760        STMD R36,R32
0770 SCRTB2 CLM  R#
0780        STMD R#,=BINTAB
0790        LDM  R#,R12
0800        LDM  R41,=316
0810        DEF  MOVDN 
0820        STBD R#,=GINTEN
0830        RTN  
0840        STMD R41,R36
0850        DCM  R36
0860        LDM  R4,R36
0870 ! ************************
0880 SAVING ASC  "SAVE IN PROGRESS"
0890        BYT  141
0900 DSAVE. BIN  
0910        JSB  =CLEAR.
0920        LDM  R26,=SAVING
0930        ADMD R26,=BINTAB
0940        LDM  R36,=20,0
0950        JSB  =OUTSTR
0960        LDMD R0,=BINTAB
0970        LDMD R71,=IOTRFC      ! save old hook
0980        STMD R71,X0,MYTRFC
0990        LDMD R70,=SCTEMP      !  save old select hook
1000        STMD R70,X0,MYSC  
1010        CLB  R74
1020        STBD R74,X0,DFLAG     !  flag 0=tape; 1=disc
1030        LDM  R74,=231,231,0,0 !  SAVE "fname" [ , line# [ , line# ] ]
1040        STM  R74,R24
1050        LDM  R20,R12
1060        SBM  R20,=4,0
1070        CMMD R20,=TOS   
1080        JZR  DSAVE1
1090        JSB  =ONEI  
1100        LDM  R26,R45
1110        LDM  R20,R12
1120        SBM  R20,=4,0
1130        CMMD R20,=TOS   
1140        JZR  DSAVE1
1150        JSB  =ONEI  
1160        STM  R26,R24
1170        LDM  R26,R45
1180 DSAVE1 LDM  R74,R24
1190        STMD R74,=LLDCOM
1200        POMD R44,-R12         !  filename manipulation
1210        PUMD R44,+R12
1220        PUMD R44,+R6
1230        LDMD R0,=BINTAB
1240        JSB  X0,MSROM?        !  errors?
1250        CMB  R17,=300
1260        JNC  DSAVED
1270        POMD R44,-R6
1280        RTN  
1290 DSAVED JEN  DSAVET           !  tape?
1300        LDMD R0,=BINTAB
1310        LDMD R14,=MSBASE
1320        CLB  R77
1330        ICB  R77
1340        STBD R77,X0,DFLAG 
1350        JSB  X0,DSAVC1        !  check for security
1360        JSB  =ROMJSB          !  filename already exists?
1370        DEF  DIRSCN
1380        VAL  MSROM#
1390        JEN  DSAVD2           !  jif no
1400        JSB  =ROMJSB          !  check filetype
1410        DEF  GETTYP
1420        VAL  MSROM#
1430        CMB  R30,=20
1440        JZR  DSAVD1
1450        POMD R44,-R6          !  error if bad filetype
1460        JSB  =TAPEXT
1470        JSB  =ERROR+
1480        BYT  68D
1490        RTN  
1500 DSAVD1 JSB  =ROMJSB          !  get # of records if filename exists
1510        DEF  TYPOK2
1520        VAL  MSROM#
1530        JMP  DSAVD3
1540 DSAVET JMP  SAVET1
1550 DSAVD2 LDMD R0,=BINTAB
1560        JSB  X0,CALCSZ        !  calculate how big file needs to be
1570        POMD R44,-R6          !  copy filename
1580        PUMD R44,+R6
1590        PUMD R44,+R12
1600        LDMD R0,=BINTAB
1610        JSB  X0,CRFIL         !  push size,256
1620        JSB  =ROMJSB          !  create data file
1630        DEF  MSCRE.
1640        VAL  MSROM#
1650        JMP  ASINIT
1660 DSAVD3 POMD R44,-R6
1670        PUMD R44,+R6
1680        PUMD R44,+R12
1690        JSB  =ROMJSB
1700        DEF  MSPUR.
1710        VAL  MSROM#
1720        JMP  DSAVD2
1730 ASINIT LDMD R0,=BINTAB
1740        JSB  X0,ASNPRT
1750        LDMD R0,=BINTAB
1760        JSB  X0,PRNTIT        !  do the save
1770        JSB  =ROMJSB
1780        DEF  PREOL.
1790        VAL  MSROM#
1800        JSB  =ROMJSB          !  ASSIGN #1 TO *
1810        DEF  ASSIG.
1820        VAL  MSROM#
1830        JMP  CONFI1
1840 TAPERR POMD R44,-R6
1850        RTN  
1860 SAVET1 LDMD R0,=BINTAB
1870        JSB  X0,DSAVC1
1880        BIN  
1890        LDM  R0,R6
1900        ICM  R0
1910        ICM  R0
1920        STMD R0,=SAVER6
1930        JSB  =GETNAM
1940        JSB  =TAPINT
1950        CMB  R17,=300
1960        JCY  TAPERR
1970        JSB  =WPR?  
1980        CMB  R17,=300
1990        JCY  TAPERR
2000        JSB  =DSCAN 
2010        LDMD R0,=BINTAB
2020        JEZ  GOTNAM
2030 SAVET2 LDMD R0,=BINTAB
2040        JSB  X0,CALCSZ
2050        POMD R44,-R6
2060        PUMD R44,+R6
2070        PUMD R44,+R12
2080        LDMD R0,=BINTAB
2090        JSB  X0,CRFIL 
2100        JSB  =CREAT.
2110        JSB  =DSCAN 
2120        STMD R36,=AVAILP
2130        LDMD R36,X36,D.#R/F
2140        STMD R36,=R/FILE
2150        JMP  TASIGN
2160 CONFI1 JMP  COMFIN
2170 GOTNAM POMD R44,-R6
2180        PUMD R44,+R6
2190        PUMD R44,+R12
2200        JSB  =PURGE.
2210        JMP  SAVET2
2220 TASIGN POMD R44,-R6
2230        STMD R6,=SAVER6
2240        CLM  R40
2250        LDB  R47,=20
2260        PUMD R40,+R12
2270        LDM  R46,=6,0
2280        PUMD R46,+R12
2290        LDM  R46,=SAVNAM
2300        PUMD R46,+R12
2310        JSB  =ASIGN.
2320        CLM  R40
2330        LDB  R47,=20
2340        PUMD R40,+R12
2350        JSB  =PRNT#.
2360        LDMD R0,=BINTAB
2370        JSB  X0,PRNTIT
2380        JSB  =PRLINE
2390        JSB  =ASIGN.
2400 COMFIN LDMD R0,=BINTAB       !  restore hook and sctemp
2410        LDMD R71,X0,MYTRFC
2420        STMD R71,=IOTRFC
2430        LDMD R70,X0,MYSC  
2440        STMD R70,=SCTEMP
2450        JSB  X0,OUTMES
2460        RTN  
2470 DSAVC1 LDB  R0,=1
2480        JSB  =SECUR?          !  secured?
2490        JEZ  DSAVC2
2500        POMD R42,-R6
2510 DSAVC2 RTN  
2520 CALCSZ CLM  R40              !  how big is file?
2530        STMD R40,=SCTEMP
2540        STMD R46,=NXTDAT
2550        LDM  R46,=COUNTS
2560        BIN  
2570        ADMD R46,=BINTAB
2580        STM  R46,R45
2590        LDB  R47,=236
2600        LDB  R44,=316
2610        STMD R44,=IOTRFC
2620        PUMD R16,+R6
2630        LDB  R16,=2
2640        LDMD R0,=BINTAB
2650        JSB  X0,ASROM?        ! in assembler mode?
2660        JEN  BASSIZ           ! jif basic mode
2670        JSB  =ROMJSB          ! do assembler version
2680        DEF  ALSSET
2690        VAL  ASROM#
2700        JMP  ASFIN 
2710 BASSIZ JSB  =LSSET 
2720 ASFIN  POMD R16,-R6
2730        CLB  R34
2740        LDMD R32,=NXTDAT
2750        JZR  CALCS1
2760        ADM  R32,R33
2770        ADM  R32,R33
2780        ADM  R32,R33
2790        ADM  R32,=3,0
2800        JSB  =GETCN+
2810 CALCS1 RTN  
2820 COUNTS BIN                   !  hook
2830        ADM  R36,=4,0
2840        LDMD R46,=NXTDAT
2850        JNZ  COUNT1
2860        LDMD R44,=LLDCOM
2870        STMD R44,=LSTDAT
2880        CLM  R46
2890 COUNT1 ADM  R#,R36
2900        STMD R#,=NXTDAT
2910        RTN  
2920 CRFIL  LDM  R36,R32          !  X,256
2930        JSB  =CONBIN
2940        PUMD R40,+R12
2950        CLM  R50
2960        LDB  R54,=377
2970        LDM  R55,=56C,2C,0
2980        PUMD R50,+R12
2990        RTN  
3000 PRNTIT LDMD R44,=LSTDAT
3010        STMD R44,=LLDCOM
3020        LDM  R36,=SAVREC
3030        BIN  
3040        ADMD R36,=BINTAB
3050        STM  R36,R45
3060        LDB  R47,=236
3070        LDB  R44,=316
3080        STMD R44,=IOTRFC
3090        PUMD R16,+R6
3100        LDB  R16,=2
3110        LDMD R0,=BINTAB
3120        JSB  X0,ASROM?        ! in assembler mode?
3130        JEN  BASPRT           ! jif basic mode
3140        JSB  =ROMJSB          ! do assembler version
3150        DEF  ALSSET
3160        VAL  ASROM#
3170        JMP  PRFIN 
3180 BASPRT JSB  =LSSET 
3190 PRFIN  CLM  R36
3200        LDMD R0,=BINTAB       !  print a null $ at end
3210        JSB  X0,SAVREC
3220        POMD R16,-R6
3230 CLOSE  CLM  R40
3240        LDB  R47,=20
3250        PUMD R40,+R12
3260        LDM  R46,=1,0
3270        PUMD R46,+R12
3280        LDM  R46,=STAR  
3290        PUMD R46,+R12
3300        RTN  
3310 SAVREC STM  R36,R44          !  hook
3320        STM  R26,R46
3330        LDMD R0,=BINTAB
3340        LDBD R0,X0,DFLAG 
3350        JZR  SAVTAP
3360        PUMD R44,+R12
3370        JSB  =ROMJSB          !  PRINT #1;A$
3380        DEF  PRSTR.
3390        VAL  MSROM#
3400        RTN  
3410 SAVTAP JSB  =PRNT#$
3420        RTN  
3430 GETING ASC  "GET IN PROGRESS"
3440        BYT  141
3450 DGET.  BIN                   !  GET "fname"
3460        LDMD R14,=BINTAB
3470        JSB  X14,ASROM?
3480        JEZ  INASM 
3490        POMD R44,-R12
3500        PUMD R44,+R6
3510        PUBD R16,+R6
3520        CLB  R16
3530        JSB  =FXLEN           !  deallocate basic program before assigning buffer
3540        POBD R16,-R6
3550        POMD R44,-R6
3560        PUMD R44,+R12
3570 INASM  JSB  =CLEAR.
3580        LDM  R26,=GETING      !  "GET IN PROGRESS"
3590        ADMD R26,=BINTAB
3600        LDM  R36,=17,0
3610        JSB  =OUTSTR
3620        LDMD R0,=BINTAB
3630        CLB  R44
3640        STBD R44,X0,DFLAG 
3650        POMD R44,-R12
3660        PUMD R44,+R12
3670        PUMD R44,+R6
3680        JSB  X0,MSROM?
3690        JSB  X0,ERROR?
3700        JEN  DGETT            !  E=0 disc; E#0 tape
3710        CLB  R44              !  do disc
3720        ICB  R44
3730        STBD R44,X0,DFLAG 
3740        POMD R44,-R12
3750        JSB  X0,ASNPRT        !  ASSIGN #1 TO "fname"
3760 DGETD1 LDMD R0,=CALVRB       ! release temp mem before getting next $
3770        STMD R0,=LAVAIL
3771        LDMD R0,=FWCURR
3772        CLM  R20
3773        STMD R20,X0,P.RMEM
3780        LDMD R0,=BINTAB
3790        JSB  X0,GETLIN
3800        LDBD R77,=ERRORS
3810        JNZ  GETDON
3820        LDMD R0,=BINTAB
3830        JSB  X0,READIT
3840        LDB  R16,=1
3850 DGET0  JMP  DGETD1
3860 GETDON JSB  X0,CLOSIT        !  finish
3870        LDB  R40,=107
3880        CMBD R40,=ERNUM#
3890        JZR  EOFERR
3900        LDB  R40,=110
3910        CMBD R40,=ERNUM#
3920        JNZ  BADERR
3930 EOFERR CLM  R40
3940        STMD R40,=ERLIN#
3950        ANM  R17,=77
3960 BADERR JSB  =SET240
3970        LDMD R12,=NXTMEM
3980        STMD R12,=STSIZE
3990        STMD R12,=TOS   
4000        JSB  =TAPEXT
4010        CLB  R16
4020 OUTMES LDM  R26,=MESAGE      ! "DONE"
4030        ADMD R26,=BINTAB
4040        LDM  R36,=4,0
4050        JSB  =OUTSTR
4060        RTN  
4070 MESAGE ASC  "DONE"
4080 DGETT  POMD R44,-R12
4090        STMD R12,=TOS   
4100        CLM  R50
4110        LDB  R57,=20
4120        PUMD R50,+R12
4130        POMD R44,-R6
4140        PUMD R44,+R12
4150        JSB  =ASIGN.
4160        LDMD R0,=BINTAB
4170        JSB  X0,ERROR?
4180        CLM  R40
4190        LDB  R47,=20
4200        PUMD R40,+R12
4210        JSB  =PRNT#.
4220        JMP  DGET0 
4230 CLOSIT JSB  X0,CLOSE 
4240        LDBD R20,X0,DFLAG 
4250        JZR  TAPCLO
4260        JSB  =ROMJSB
4270        DEF  ASSIG.
4280        VAL  MSROM#
4290        RTN  
4300 TAPCLO JSB  =ASIGN.
4310        RTN  
4320 ERROR? CMB  R17,=300
4330        JNC  ERRRTN
4340        POMD R20,-R6
4350 ERRRTN RTN  
4360 MSROM? CLE                   !  check for msrom and decode msus
4370        ICE                   !  E=0 disc; E#0 tape
4380        LDM  R20,=ROMTAB
4390 MSROM1 POMD R24,+R20
4400        CMB  R24,=377
4410        JZR  MSRTN 
4420        CMB  R24,=320
4430        JNZ  MSROM1
4440        CLE  
4450        JSB  =ROMJSB
4460        DEF  MSIN  
4470        VAL  MSROM#
4480        LDM  R30,R6
4490        ADM  R30,=7,0
4500        STMD R30,=SAVER6
4510        JSB  =ROMJSB
4520        DEF  TAPDS-
4530        VAL  MSROM#
4540        JEZ  MSRTN 
4550        POMD R56,-R6
4560        POMD R44,-R6
4570        POMD R44,-R12
4580        PUMD R44,+R12
4590        PUMD R44,+R6
4600        PUMD R56,+R6
4610 MSRTN  RTN  
4620 !  at exit, if E#0 then in basi
4630 !           if E=0 then in assemble
4640 ASROM? CLE  
4650        ICE  
4660        LDM  R20,=ROMTAB
4670 ASROM1 POMD R24,+R20
4680        CMB  R24,=377
4690        JZR  ASRTN 
4700        CMB  R24,=ASROM#
4710        JNZ  ASROM1
4720        LDMD R24,=ASMBAS
4730        LDBD R24,X24,A.FLAG
4740        JZR  ASRTN 
4750        CLE  
4760 ASRTN  RTN  
4770 ASNPRT STMD R12,=TOS         !  ASSIGN #1 TO "fname"
4780        CLM  R50
4790        LDB  R57,=20
4800        PUMD R50,+R12
4810        POMD R76,-R6
4820        POMD R44,-R6
4830        PUMD R44,+R12
4840        STMD R6,=SAVER6
4850        PUMD R76,+R6
4860        JSB  =ROMJSB
4870        DEF  ASSIG.
4880        VAL  MSROM#
4890        CLM  R40
4900        LDB  R47,=20
4910        PUMD R40,+R12
4920        JSB  =ROMJSB
4930        DEF  PRINT.
4940        VAL  MSROM#
4950        RTN  
4960 GETLIN LDMD R26,=LAVAIL      !  simulate string variable
4970        SBM  R26,R12          !  check for < 256 bytes left
4980        CMM  R26,=0,1
4990        JNC  GETEX 
5000        LDM  R26,=BUFFER
5010        BIN  
5020        ADM  R26,R0
5030        PUMD R26,+R12
5040        LDM  R24,=212,1
5050        PUMD R24,+R26
5060        CLB  R24
5070        PUMD R24,+R12
5080        PUMD R24,+R26
5090        PUMD R24,+R26
5100        CLM  R24
5110        PUMD R24,+R26
5120        PUMD R26,+R12
5130        STMD R26,X0,BUFADR
5140        LDBD R26,X0,DFLAG 
5150        JZR  TAPRED
5160        JSB  =ROMJSB          !  READ #1; buffer
5170        DEF  RDSTR.
5180        VAL  MSROM#
5190        RTN  
5200 TAPRED JSB  =READ#$
5210        RTN  
5220 GETEX  JSB  =ERROR           !  memory overflow
5230        BYT  19D
5240        RTN  
5250 READIT LDMD R0,=BINTAB       !  null string => done
5260        LDMD R26,X0,BUFADR
5270        BIN  
5280        POMD R24,-R26
5290        JZR  LINERR
5300        STMD R24,X0,BUFLEN
5310        PUMD R24,+R26
5320        LDM  R30,=INPBUF      !  copy line to input buffer
5330        LDB  R32,=BLANK 
5340        PUBD R32,+R30
5350 READ1  POBD R32,+R26
5360        PUBD R32,+R30
5370        DCM  R24
5380        JNZ  READ1 
5390        LDB  R24,=CR    
5400        PUBD R24,+R30         !  add a CR
5410        CLB  R24
5420        PUBD R24,+R6          !  error counter
5430 PRSIT1 LDMD R0,=BINTAB       !  valid line #?
5440        JSB  X0,ASROM?
5450        JEN  PRSIT+
5460        LDM  R10,=INPBUF
5470        JSB  X0,OURPAR
5480        JMP  APFIN 
5490 PRSIT+ LDM  R10,=INPBUF
5500        STMD R10,=SAVR10
5510        JSB  =GCHAR 
5520        JSB  =INTEGR
5530        BIN  
5540        JEN  GOTLN#
5550 BADLIN LDMD R0,=BINTAB
5560        JSB  X0,PRNTLN
5562        LDMD R12,=NXTMEM
5570        STMD R12,=TOS   
5580 LINDON BIN  
5590        DCM  R6
5600 LINDN- RTN  
5610 LINERR JSB  =ERROR 
5620        BYT  107
5630        RTN  
5635 PRSIT2 JMP  PRSIT1
5640 GOTLN# CMB  R20,=CR    
5650        JZR  BADLIN
5660        CLB  R16              !  go parse the line
5670        JSB  =P.PARS
5680 APFIN  CLB  R16
5690        STBD R16,=RSELEC
5700        ICB  R16
5710        TSB  R17
5720        JPS  LINDON           !  jif no errors
5730        POBD R36,-R6
5740        ICB  R36
5750        PUBD R36,+R6
5760        JEV  LINDON
5770        ANM  R17,=77          !  change line to comment
5780        CLM  R40
5790        STMD R40,=ERLIN#
5800        LDM  R10,=INPBUF
5810        LDM  R36,R10
5820        ICM  R36
5830 MOVE-1 POBD R20,+R36
5840        PUBD R20,+R10
5850        CMB  R20,=BLANK 
5860        JZR  MOVE-1
5870        JSB  =DIGIT 
5880        JEN  MOVE-1
5890        LDB  R20,=BANG  
5900        PUBD R20,-R10
5910        LDMD R0,=BINTAB
5920        JSB  X0,PRNTLN
5930        JMP  PRSIT2
5940 PRNTLN JSB  =PRINTP
5950        LDMD R36,X0,BUFLEN
5960        ICM  R36
5970        LDM  R26,=INPBUF
5980        JSB  =DRV12.
5990        RTN  
6000 OURPAR JSB  =DECUR2
6010        JSB  =HMCURS
6020        JSB  =DNCURS
6030        PUMD R20,+R6
6040        LDMD R20,X0,BUFLEN
6050        CMM  R20,=32D,0
6060        JNC  GO-DO 
6070        JSB  =DNCURS
6080        CMM  R20,=64D,0
6090        JNC  GO-DO 
6100        JSB  =DNCURS
6110 GO-DO  JSB  =CURS  
6120        JSB  =ROMJSB
6130        DEF  PARSR3
6140        VAL  ASROM#
6150        RTN  
6160 DFLAG  BSZ  1
6170 CURSIZ BSZ  2
6180 MYTRFC BSZ  7
6190 MYSC   BSZ  10
6200 BUFFER BSZ  300
6210 BUFADR BSZ  2
6220 BUFLEN BSZ  2
6230 CURS   DAD  35055
6240 DECUR2 DAD  35547
6250 DNCURS DAD  35370
6260 OUTSTR DAD  35052
6270 STREX+ DAD  13623
6280 PRLINE DAD  70402
6290 PREOL. DAD  70073
6300 PRINT. DAD  66312
6310 SEQ#   DAD  17473
6320 PUSH32 DAD  14277
6330 ERROR+ DAD  6611
6340 BINTAB DAD  101233
6341 P.RMEM EQU  17
6342 FWCURR DAD  100004
6350 HMCURS DAD  35527
6360 PRINTP DAD  70067
6370 CREAT. DAD  26561
6380 STAR   DAD  24470
6390 LLDCOM DAD  100025
6400 PRNT#$ DAD  30577
6410 ASIGN. DAD  27056
6420 SAVER6 DAD  101174
6430 GETNAM DAD  26511
6440 TAPINT DAD  24466
6450 WPR?   DAD  20325
6460 DSCAN  DAD  22516
6470 AVAILP DAD  100160
6480 D.#R/F EQU  10
6490 R/FILE DAD  101040
6500 SCTEMP DAD  101110
6510 ONEI   DAD  56154
6520 TOS    DAD  101132
6530 NXTDAT DAD  101010
6540 IOTRFC DAD  102400
6550 SECUR? DAD  37602
6560 LSSET  DAD  5224
6570 TAPEXT DAD  22000
6580 CONBIN DAD  3572
6590 SAVNAM DAD  101120
6600 LSTDAT DAD  101012
6610 GINTDS DAD  177401
6620 GINTEN DAD  177400
6630 ROMJSB DAD  4776
6640 LWAMEM DAD  100022
6650 LAVAIL DAD  100010
6660 CALVRB DAD  100012
6670 CLEAR. DAD  35021
6680 DALLOC DAD  42414
6690 FXLEN  DAD  36707
6700 ERROR  DAD  6615
6710 MOVDN  DAD  37324
6720 MSBASE DAD  102540
6730 R60K   DAD  60000
6740 RSELEC DAD  177430
6750 SCAN   DAD  11262
6760 NXTMEM DAD  100006
6770 STSIZE DAD  101130
6780 SET240 DAD  11243
6790 ERNUM# DAD  100064
6800 ERLIN# DAD  100062
6810 STBEEP DAD  7017
6820 ROMTAB DAD  101235
6830 MSIN   DAD  70253
6840 MSROM# EQU  320
6850 TAPDS- DAD  70740
6860 DIRSCN DAD  63143
6870 GETTYP DAD  61716
6880 TYPOK2 DAD  64157
6890 MSCRE. DAD  65256
6900 LDRECS DAD  63574
6910 MSPUR. DAD  64461
6920 ASSIG. DAD  65571
6930 PRST+  DAD  66762
6940 PRSTR. DAD  66753
6950 PURGE. DAD  26013
6960 PRNT#. DAD  30055
6970 GETCN+ DAD  23416
6980 RSMEM- DAD  37453
6990 RDSTR. DAD  67446
7000 READ#$ DAD  31335
7010 INPBUF DAD  100310
7020 BLANK  EQU  40
7030 CR     EQU  15
7040 RELMEM DAD  37534
7050 SAVR10 DAD  101227
7060 GCHAR  DAD  11755
7070 INTEGR DAD  11447
7080 DRV12. DAD  5462
7090 P.PARS DAD  10646
7100 DIGIT  DAD  12027
7110 BANG   EQU  41
7120 ERRORS DAD  100070
7130 ASROM# EQU  50
7140 ALSSET DAD  66347
7150 A.FLAG EQU  170
7160 ASMBAS DAD  102552
7170 PARSR3 DAD  63677
7180 MOVUP  DAD  37365
7190        FIN  
