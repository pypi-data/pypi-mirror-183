0010 !  FORMAT OF COMMAND IS
0020 !  SOFTKEY <NUMEXP>,<NUMEXP>
0030 !                 <STREXP
0040 !  THE FIRST NUMEXP SELECT
0050 !  THE KEY, AND THE SECON
0060 !  SELECTS WHETHER THE TEXT I
0070 !  FOLLOWED BY AN ENDLINE (0
0080 !  OR NOT (NOT=0).  THE STRIN
0090 !  IS THE TEXT ON THE KEY
0100        NAM  SOFTKY
0110        DEF  RUNTIM
0120        DEF  ASCIIS
0130        DEF  PARSE 
0140        DEF  ERMSG 
0150        DEF  INIT  
0160 PARSE  OCT  0,0
0170        DEF  SOFTK,
0180 RUNTIM OCT  0,0
0190        DEF  SOFTK.
0200        OCT  377,377
0210 SOFTK, PUBD R43,+R6
0220        JSB  =NUMVA+
0230        JSB  =GETCMA
0240        JSB  =NUMVAL
0250        JSB  =GETCMA
0260        JSB  =STREXP
0270        POBD R47,-R6
0280        LDB  R45,=371
0290        PUMD R45,+R12
0300        RTN  
0310 ASCIIS ASP  "SOFTKEY"
0320        OCT  377
0330 ERMSG  OCT  200,200,200,200,200,200,200,200,200
0340        ASP  "SOFTKEY NUMBER OUT OF RANGE "
0350        ASP  "SOFTKEY STRING TOO LONG "
0360        OCT  377
0370 INIT   LDBD R0,=ROMFL 
0380        CMB  R0,=1
0390        JZR  INITAL
0400        CMB  R0,=5
0410        JZR  RTNRTN
0420        CMB  R0,=2
0430        JZR  RTNRTN
0440        CMB  R0,=3
0450        JZR  INITAL
0460        RTN  
0470 INITAL LDM  R34,=KEYHAT
0480        ADMD R34,=BINTAB
0490        LDB  R74,=316
0500        STM  R34,R75
0510        LDB  R77,=236
0520        STMD R74,=CHIDLE
0530        RTN  
0540 RTNRTN LDB  R34,=236
0550        STBD R34,=CHIDLE
0560        RTN  
0570 !  GET BINARY KEY# OFF STAC
0580 ! CHECK FOR CORRECT RANGE,   RETURN ABSOLUTE ADDRESS OF KEY  STORAGE IN R46,R4
0590 KEY#   JSB  =ONEB  
0600        CMM  R46,=1,0         ! IS KEY#<1?
0610        JNC  ERROR1           ! JIF YES
0620        CMM  R46,=11,0        !  IS KEY#>=9?
0630        JCY  ERROR1           ! JIF YES
0640        LLM  R46              ! DOUBLE FOR TABLE
0650        ADMD R46,=BINTAB      ! MAKE KEY# ABSOLUTE
0660        LDMD R46,X46,KEYTBL   ! LOAD ADDRESS OF KEY STORAGE
0670        ADMD R46,=BINTAB      ! MAKE IT ABSOLUTE
0680        RTN  
0690 ERROR1 JSB  =ERROR+          ! KEY NUMBER OUT OF RANGE
0700        OCT  366
0710 ERROR2 JSB  =ERROR+          ! STRING TOO LONG
0720        OCT  365
0730        OCT  241              ! BASIC COMMAND ATTRIBUTE
0740 SOFTK. BIN  
0750        POMD R32,-R12         ! GET STRING ADDRESS
0760        POMD R30,-R12         ! GET STRING LENGTH
0770        CMM  R30,=1,0         ! IS IT A NULL OR 0-LENGTH STRING?
0780        JCY  CHNGKY           ! JIF NO
0790        POMD R40,-R12         ! TRASH IMMEDIATE EXECUTION PARAMETER
0800        LDM  R36,=KEY#        ! GET ADDRESS OF SUBROUTINE
0810        ADMD R36,=BINTAB      ! MAKE IT ABSOLUTE
0820        JSB  X36,ZERO         ! JUMP TO IT
0830        CLB  R45              ! CLEAR LENGTH OF KEY STRING=>NOTHING THERE
0840        STBD R45,R46
0850        RTN                   ! DONE
0860 CHNGKY CMM  R30,=140,0       ! IS LENGTH>=96?
0870        JCY  ERROR2           ! JIF YES
0880        JSB  =ONEB            ! GET BINARY IMMEDIATE KEY-EXECUTION VALUE FROM STACK
0890        LDM  R26,R46          ! SAVE IN R26
0900        LDM  R36,=KEY#        ! GET ADDRESS OF SUBROUTINE
0910        ADMD R36,=BINTAB      ! MAKE IT ABSOLUTE
0920        JSB  X36,ZERO         ! JUMP TO IT
0930        CMM  R26,=0,0         ! SHOULD IT BE IMMED. EXEC.?
0940        JNZ  AROUND           ! JIF NO
0950        LDB  R31,=200         ! SET PARITY BIT
0960        ORB  R30,R31          !  SET PARITY BIT=>IMMED. EXEC.
0970 AROUND PUBD R30,+R46         ! SAVE LENGTH AND POINT TO START OF STRING STORAGE
0980        ANM  R30,=177,0       ! CLEAR OFF IMMED. EXEC. BIT, IF ANY
0990 LOOP   POBD R26,+R32         ! GET BYTE OF STRING
1000        PUBD R26,+R46         ! SAVE IT
1010        DCB  R30              ! DONE YET?
1020        JNZ  LOOP             ! JIF NO
1030 KEYRTN RTN                   ! DONE
1040 KEYHAT BIN  
1050        CLM  R26
1060        LDBD R26,=KEYHIT      ! LOAD KEY CODE
1070        CMB  R26,=200         ! IS IT < 200?
1080        JNC  KEYRTN           ! JIF YES
1090        CMB  R26,=210         ! IS IT >=210?
1100        JCY  KEYRTN           ! JIF YES
1110        SBM  R26,=177,0       !  GET TO KEY#
1120        LLM  R26              ! DOUBLE # FOR TABLE
1130        ADMD R26,=BINTAB      ! MAKE IT ABSOLUTE
1140        LDMD R26,X26,KEYTBL   ! GET ADDRESS OF KEY STORAGE
1150        ADMD R26,=BINTAB      ! MAKE IT ABSOLUTE
1160        POBD R36,+R26         ! GET LENGTH
1170        CMB  R36,=0           ! IS IT EMPTY?
1180        JNZ  NEXT             ! JIF NO
1190        RTN                   ! LET SYSTEM HANDLE IT
1200 NEXT   STB  R36,R77          ! SAVE FOR LATER
1210        ANM  R36,=177,0       ! MASK OFF IMMED. EXEC. BIT
1220        JSB  =HLFLIN          ! OUTPUT KEY STRING
1230        JSB  =CURS            ! SPIT OUT CURSOR
1240        TSB  R77              ! IS IMMED. EXEC BIT SET?
1250        JNG  OUTCR            ! JIF YES
1260        CLE                   ! DONE WITH KEY
1270        JSB  =EOJ2            !  CLEAN UP
1280        POMD R74,-R6          !  TRASH 2 RETURNS
1290        RTN  
1300 OUTCR  LDB  R26,=232         !  LOAD ENDLINE
1310        STBD R26,=KEYHIT      ! PUT ENDLINE IN KEYHIT
1320        RTN                   ! LET SYSTEM HANDLE IT
1330 KEYTBL OCT  0,0
1340        DEF  K1    
1350        DEF  K2    
1360        DEF  K3    
1370        DEF  K4    
1380        DEF  K5    
1390        DEF  K6    
1400        DEF  K7    
1410        DEF  K8    
1420 K1     OCT  2
1430        ASC  "K1"
1440        BSZ  140
1450 K2     OCT  2
1460        ASC  "K2"
1470        BSZ  140
1480 K3     OCT  2
1490        ASC  "K3"
1500        BSZ  140
1510 K4     OCT  2
1520        ASC  "K4"
1530        BSZ  140
1540 K5     OCT  2
1550        ASC  "K5"
1560        BSZ  140
1570 K6     OCT  2
1580        ASC  "K6"
1590        BSZ  140
1600 K7     OCT  2
1610        ASC  "K7"
1620        BSZ  140
1630 K8     OCT  2
1640        ASC  "K8"
1650        BSZ  140
1660 CURS   DAD  35055
1670 CHIDLE DAD  102416
1680 KEYHIT DAD  100671
1690 BINTAB DAD  101233
1700 HLFLIN DAD  35121
1710 EOJ2   DAD  34772
1720 ROMFL  DAD  101231
1730 OUTCHR DAD  35114
1740 NUMVA+ DAD  12407
1750 GETCMA DAD  13414
1760 NUMVAL DAD  12412
1770 STREXP DAD  13626
1780 ONEB   DAD  56113
1790 ERROR+ DAD  6611
1800 ZERO   EQU  0
1810        FIN  
