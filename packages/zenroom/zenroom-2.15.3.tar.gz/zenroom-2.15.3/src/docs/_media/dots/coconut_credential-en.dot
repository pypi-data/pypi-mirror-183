digraph zencode_coconut_credential {
	graph [ dpi=300, bgcolor=white ];
	node [shape=box, rank=max, fontname=Montserrat, fontsize=11, bgcolor=white,
		  overlap=false, pack=true, style=filled color="#00b1b0" fontcolor=white];
	edge [fontname=Montserrat, fontsize=9, arrowsize=0.3]

	Request_Alice [label=
				   <Scenario '<font color="#fff16e"><b>request</b></font>':<br/>
				   Given that I am known as '<font color="#fff16e"><b>Alice</b></font>'<br/>
				   and I have my credential request keypair<br/>
				   When I declare that I am '<font color="#fff16e"><b>lost in Wonderland</b></font>'<br/>
				   and I request a credential blind signature<br/>
				   Then print all data>]
	
	Issue_MadHatter [label=
					 <Given that I am known as '<font color="#fff16e"><b>MadHatter</b></font>'<br/>
					 and I have my credential issuer keypair<br/>
					 When I am requested to sign a credential<br/>
					 and I verify the credential to be true<br/>
					 and I sign the credential '<font color="#fff16e"><b>MadHatter</b></font>'<br/>
					 Then print data '<font color="#fff16e"><b>MadHatter</b></font>'>]

	Aggregate_Alice [label=
					 <Given that I am known as <font color="#fff16e"><b>Alice</b></font><br/>
					 and I have my credential request keypair<br/>
					 When I receive a credential signature '<font color="#fff16e"><b>MadHatter</b></font>'<br/>
					 and I aggregate all signatures into my credential<br/>
					 Then print all data>]

	Challenge_Bob [label=
				   <Given that I use the verification key by '<font color="#fff16e"><b>MadHatter</b></font>'<br/>
				   and that '<font color="#fff16e"><b>Alice</b></font>' declares to be '<font color="#fff16e"><b>lost in Wonderland</b></font>'<br/>
				   When I aggregate all the verification keys<br/>
				   and the declaration is proven by credentials<br/>
				   Then print data '<font color="#fff16e"><b>proof</b></font>'>]

	Verify_Blind [label=
				  <Given that I use the verification key by '<font color="#fff16e"><b>MadHatter</b></font>'<br/>
				  and that I have a valid credential proof<br/>
				  When I aggregate all the verification keys<br/>
				  and the credential proof is verified correctly<br/>
				  Then print string '<font color="#fff16e"><b>OK</b></font>'>]
	
	Request_Alice -> Issue_MadHatter [label=<
									  Request a credential blind signature<br/>
									  { schema: 'coconut_req_blindsign',<br/>
										cm : ECP, public: ECP,<br/>
										c : { a : ECP, b : ECP },<br/>
										pi_s : { rk: INT, rm: INT,<br/>
											rr: INT, c: INT } }>]

	Issue_MadHatter -> Aggregate_Alice [label=<Receive the signature,<br/>
										aggregate and publish the credential<br/>
										{ schema: 'coconut_sigmatilde',<br/>
											h: ECP, a_tilde: ECP, b_tilde: ECP }>]
	
	Aggregate_Alice -> Challenge_Bob [label=<Generate a blind proof of the credentials<br/>
									  { schema: 'coconut_aggsigma',<br/>
										  h: ECP, s: ECP }>]

	Challenge_Bob -> Verify_Blind [label=<Verify a blind proof of the credentials<br/>
								   { schema: 'coconut_theta',<br/>
									   nu: ECP, kappa: ECP2,<br/>
									   sigma_prime: { h_prime: ECP, s_prime: ECP },<br/>
									   pi_v: { c: INT, rm: ECP, rr: ECP } }>]

}

