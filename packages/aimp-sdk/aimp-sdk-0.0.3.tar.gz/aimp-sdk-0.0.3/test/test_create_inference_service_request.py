# coding: utf-8

"""
    Onepanel

    Onepanel API  # noqa: E501

    The version of the OpenAPI document: 1.0.2
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import onepanel.core.api
from onepanel.core.api.models.create_inference_service_request import CreateInferenceServiceRequest  # noqa: E501
from onepanel.core.api.rest import ApiException

class TestCreateInferenceServiceRequest(unittest.TestCase):
    """CreateInferenceServiceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CreateInferenceServiceRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = onepanel.core.api.models.create_inference_service_request.CreateInferenceServiceRequest()  # noqa: E501
        if include_optional :
            return CreateInferenceServiceRequest(
                namespace = '0', 
                name = '0', 
                default_transformer_image = '0', 
                predictor = onepanel.core.api.models.inference_service_predictor.InferenceServicePredictor(
                    name = '0', 
                    runtime_version = '0', 
                    storage_uri = '0', 
                    node_selector = '0', 
                    min_cpu = '0', 
                    min_memory = '0', 
                    max_cpu = '0', 
                    max_memory = '0', ), 
                transformer = onepanel.core.api.models.inference_service_transformer.InferenceServiceTransformer(
                    containers = [
                        onepanel.core.api.models.container.Container(
                            image = '0', 
                            name = '0', 
                            env = [
                                onepanel.core.api.models.env.Env(
                                    name = '0', 
                                    value = '0', )
                                ], )
                        ], 
                    min_cpu = '0', 
                    min_memory = '0', 
                    max_cpu = '0', 
                    max_memory = '0', )
            )
        else :
            return CreateInferenceServiceRequest(
        )

    def testCreateInferenceServiceRequest(self):
        """Test CreateInferenceServiceRequest"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
