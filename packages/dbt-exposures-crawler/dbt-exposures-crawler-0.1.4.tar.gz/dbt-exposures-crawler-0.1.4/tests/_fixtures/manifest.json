{
    "metadata": {
        "dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v1.json",
        "dbt_version": "0.19.1",
        "generated_at": "2021-06-12T12:00:33.957001Z",
        "invocation_id": "a7a1694f-ce15-459b-a398-f70088d6ef00",
        "env": {},
        "project_id": "06e5b98c2db46f8a72cc4f66410e9b3b",
        "user_id": "9668a411-28cf-4433-9291-d803dda7cfce",
        "send_anonymous_usage_stats": true,
        "adapter_type": "snowflake"
    },
    "nodes": {
        "model.jaffle_shop.customers": {
            "raw_sql": "with customers as (\n\n    select * from {{ ref('stg_customers') }}\n\n),\n\norders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\npayments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final",
            "compiled": true,
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "model.jaffle_shop.stg_customers",
                    "model.jaffle_shop.stg_orders",
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "customers"
            ],
            "unique_id": "model.jaffle_shop.customers",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "customers.sql",
            "original_file_path": "models/customers.sql",
            "name": "customers",
            "alias": "customers",
            "checksum": {
                "name": "sha256",
                "checksum": "7f193a2c3af2faa53e0bb7b75d2663f39db8c6b3913e9cafd245dc62f98a8d09"
            },
            "tags": [],
            "refs": [
                [
                    "stg_customers"
                ],
                [
                    "stg_orders"
                ],
                [
                    "stg_payments"
                ]
            ],
            "sources": [],
            "description": "This table has basic information about a customer, as well as some derived facts based on a customer's orders",
            "columns": {
                "customer_id": {
                    "name": "customer_id",
                    "description": "This is a unique identifier for a customer",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "first_name": {
                    "name": "first_name",
                    "description": "Customer's first name. PII.",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "last_name": {
                    "name": "last_name",
                    "description": "Customer's last name. PII.",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "first_order": {
                    "name": "first_order",
                    "description": "Date (UTC) of a customer's first order",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "most_recent_order": {
                    "name": "most_recent_order",
                    "description": "Date (UTC) of a customer's most recent order",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "number_of_orders": {
                    "name": "number_of_orders",
                    "description": "Count of the number of orders a customer has placed",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "total_order_amount": {
                    "name": "total_order_amount",
                    "description": "Total value (AUD) of a customer's orders",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "models/schema.yml",
            "build_path": "target/compiled/jaffle_shop/models/customers.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table"
            },
            "compiled_sql": "with customers as (\n\n    select * from sample_db.public.stg_customers\n\n),\n\norders as (\n\n    select * from sample_db.public.stg_orders\n\n),\n\npayments as (\n\n    select * from sample_db.public.stg_payments\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by 1\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders using (order_id)\n\n    group by 1\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders using (customer_id)\n\n    left join customer_payments using (customer_id)\n\n)\n\nselect * from final",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "sample_db.public.customers",
            "materialized_name": "sample_db.public.customers"
        },
        "model.jaffle_shop.orders": {
            "raw_sql": "{% set payment_methods = ['credit_card', 'coupon', 'bank_transfer', 'gift_card'] %}\n\nwith orders as (\n\n    select * from {{ ref('stg_orders') }}\n\n),\n\npayments as (\n\n    select * from {{ ref('stg_payments') }}\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        {% for payment_method in payment_methods -%}\n        sum(case when payment_method = '{{ payment_method }}' then amount else 0 end) as {{ payment_method }}_amount,\n        {% endfor -%}\n\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        {% for payment_method in payment_methods -%}\n\n        order_payments.{{ payment_method }}_amount,\n\n        {% endfor -%}\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final",
            "compiled": true,
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "model.jaffle_shop.stg_orders",
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "orders"
            ],
            "unique_id": "model.jaffle_shop.orders",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "orders.sql",
            "original_file_path": "models/orders.sql",
            "name": "orders",
            "alias": "orders",
            "checksum": {
                "name": "sha256",
                "checksum": "ec3e8884f18110dd6d9b1ababdd85a6c04bf665ee0f57cade273e442f90e9994"
            },
            "tags": [],
            "refs": [
                [
                    "stg_orders"
                ],
                [
                    "stg_payments"
                ]
            ],
            "sources": [],
            "description": "This table has basic information about orders, as well as some derived facts based on payments",
            "columns": {
                "order_id": {
                    "name": "order_id",
                    "description": "This is a unique identifier for an order",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "customer_id": {
                    "name": "customer_id",
                    "description": "Foreign key to the customers table",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "order_date": {
                    "name": "order_date",
                    "description": "Date (UTC) that the order was placed",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "status": {
                    "name": "status",
                    "description": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "amount": {
                    "name": "amount",
                    "description": "Total amount (AUD) of the order",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "credit_card_amount": {
                    "name": "credit_card_amount",
                    "description": "Amount of the order (AUD) paid for by credit card",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "coupon_amount": {
                    "name": "coupon_amount",
                    "description": "Amount of the order (AUD) paid for by coupon",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "bank_transfer_amount": {
                    "name": "bank_transfer_amount",
                    "description": "Amount of the order (AUD) paid for by bank transfer",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "gift_card_amount": {
                    "name": "gift_card_amount",
                    "description": "Amount of the order (AUD) paid for by gift card",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "models/schema.yml",
            "build_path": "target/compiled/jaffle_shop/models/orders.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table"
            },
            "compiled_sql": "\n\nwith orders as (\n\n    select * from sample_db.public.stg_orders\n\n),\n\npayments as (\n\n    select * from sample_db.public.stg_payments\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by 1\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n    left join order_payments using (order_id)\n\n)\n\nselect * from final",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "sample_db.public.orders",
            "materialized_name": "sample_db.public.orders"
        },
        "model.jaffle_shop.stg_customers": {
            "raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_customers') }}\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed",
            "compiled": true,
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "seed.jaffle_shop.raw_customers"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "view",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "staging",
                "stg_customers"
            ],
            "unique_id": "model.jaffle_shop.stg_customers",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "staging/stg_customers.sql",
            "original_file_path": "models/staging/stg_customers.sql",
            "name": "stg_customers",
            "alias": "stg_customers",
            "checksum": {
                "name": "sha256",
                "checksum": "6f18a29204dad1de6dbb0c288144c4990742e0a1e065c3b2a67b5f98334c22ba"
            },
            "tags": [],
            "refs": [
                [
                    "raw_customers"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {
                "customer_id": {
                    "name": "customer_id",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "models/staging/schema.yml",
            "build_path": "target/compiled/jaffle_shop/models/staging/stg_customers.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "view"
            },
            "compiled_sql": "with source as (\n    select * from model.public.raw_customers\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "sample_db.public.stg_customers",
            "materialized_name": "sample_db.public.stg_customers"
        },
        "model.jaffle_shop.stg_payments": {
            "raw_sql": "with source as (\n    \n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_payments') }}\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed",
            "compiled": true,
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "seed.jaffle_shop.raw_payments"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "view",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "staging",
                "stg_payments"
            ],
            "unique_id": "model.jaffle_shop.stg_payments",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "staging/stg_payments.sql",
            "original_file_path": "models/staging/stg_payments.sql",
            "name": "stg_payments",
            "alias": "stg_payments",
            "checksum": {
                "name": "sha256",
                "checksum": "113502ed19f04efb2af0629ff139f57f7463347b6d5218f3b80a8d128cc96852"
            },
            "tags": [],
            "refs": [
                [
                    "raw_payments"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {
                "payment_id": {
                    "name": "payment_id",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "payment_method": {
                    "name": "payment_method",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "models/staging/schema.yml",
            "build_path": "target/compiled/jaffle_shop/models/staging/stg_payments.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "view"
            },
            "compiled_sql": "with source as (\n    select * from model.public.raw_payments\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        --`amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "sample_db.public.stg_payments",
            "materialized_name": "sample_db.public.stg_payments"
        },
        "model.jaffle_shop.stg_orders": {
            "raw_sql": "with source as (\n\n    {#-\n    Normally we would select from the table here, but we are using seeds to load\n    our data in this project\n    #}\n    select * from {{ ref('raw_orders') }}\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed",
            "compiled": true,
            "resource_type": "model",
            "depends_on": {
                "macros": [],
                "nodes": [
                    "seed.jaffle_shop.raw_orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "view",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "staging",
                "stg_orders"
            ],
            "unique_id": "model.jaffle_shop.stg_orders",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "staging/stg_orders.sql",
            "original_file_path": "models/staging/stg_orders.sql",
            "name": "stg_orders",
            "alias": "stg_orders",
            "checksum": {
                "name": "sha256",
                "checksum": "afffa9cbc57e5fd2cf5898ebf571d444a62c9d6d7929d8133d30567fb9a2ce97"
            },
            "tags": [],
            "refs": [
                [
                    "raw_orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {
                "order_id": {
                    "name": "order_id",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                },
                "status": {
                    "name": "status",
                    "description": "",
                    "meta": {},
                    "data_type": null,
                    "quote": null,
                    "tags": []
                }
            },
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": "models/staging/schema.yml",
            "build_path": "target/compiled/jaffle_shop/models/staging/stg_orders.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "view"
            },
            "compiled_sql": "with source as (\n    select * from model.public.raw_orders\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "sample_db.public.stg_orders",
            "materialized_name": "sample_db.public.stg_orders"
        },
        "seed.jaffle_shop.raw_customers": {
            "raw_sql": "",
            "compiled": true,
            "resource_type": "seed",
            "depends_on": {
                "macros": [],
                "nodes": []
            },
            "config": {
                "enabled": true,
                "materialized": "seed",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "quote_columns": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "model",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "raw_customers"
            ],
            "unique_id": "seed.jaffle_shop.raw_customers",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "raw_customers.csv",
            "original_file_path": "data/raw_customers.csv",
            "name": "raw_customers",
            "alias": "raw_customers",
            "checksum": {
                "name": "sha256",
                "checksum": "24579b4b26098d43265376f3c50be8b10faf8e8fd95f5508074f10f76a12671d"
            },
            "tags": [],
            "refs": [],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {},
            "compiled_sql": "",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "model.public.raw_customers",
            "materialized_name": "model.public.raw_customers"
        },
        "seed.jaffle_shop.raw_orders": {
            "raw_sql": "",
            "compiled": true,
            "resource_type": "seed",
            "depends_on": {
                "macros": [],
                "nodes": []
            },
            "config": {
                "enabled": true,
                "materialized": "seed",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "quote_columns": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "model",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "raw_orders"
            ],
            "unique_id": "seed.jaffle_shop.raw_orders",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "raw_orders.csv",
            "original_file_path": "data/raw_orders.csv",
            "name": "raw_orders",
            "alias": "raw_orders",
            "checksum": {
                "name": "sha256",
                "checksum": "ee6c68d1639ec2b23a4495ec12475e09b8ed4b61e23ab0411ea7ec76648356f7"
            },
            "tags": [],
            "refs": [],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {},
            "compiled_sql": "",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "model.public.raw_orders",
            "materialized_name": "model.public.raw_orders"
        },
        "seed.jaffle_shop.raw_payments": {
            "raw_sql": "",
            "compiled": true,
            "resource_type": "seed",
            "depends_on": {
                "macros": [],
                "nodes": []
            },
            "config": {
                "enabled": true,
                "materialized": "seed",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": null,
                "tags": [],
                "full_refresh": null,
                "quote_columns": null,
                "post-hook": [],
                "pre-hook": []
            },
            "database": "model",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "raw_payments"
            ],
            "unique_id": "seed.jaffle_shop.raw_payments",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "raw_payments.csv",
            "original_file_path": "data/raw_payments.csv",
            "name": "raw_payments",
            "alias": "raw_payments",
            "checksum": {
                "name": "sha256",
                "checksum": "03fd407f3135f84456431a923f22fc185a2154079e210c20b690e3ab11687d11"
            },
            "tags": [],
            "refs": [],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": null,
            "deferred": false,
            "unrendered_config": {},
            "compiled_sql": "",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": "model.public.raw_payments",
            "materialized_name": "model.public.raw_payments"
        },
        "test.jaffle_shop.unique_customers_customer_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "customer_id",
                    "model": "{{ ref('customers') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique"
                ],
                "nodes": [
                    "model.jaffle_shop.customers"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "unique_customers_customer_id"
            ],
            "unique_id": "test.jaffle_shop.unique_customers_customer_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/unique_customers_customer_id.sql",
            "original_file_path": "models/schema.yml",
            "name": "unique_customers_customer_id",
            "alias": "unique_customers_customer_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "customers"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_customers_customer_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from sample_db.public.customers\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "customer_id",
            "materialized_name": "sample_db.public.unique_customers_customer_id"
        },
        "test.jaffle_shop.not_null_customers_customer_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "customer_id",
                    "model": "{{ ref('customers') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.customers"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_customers_customer_id"
            ],
            "unique_id": "test.jaffle_shop.not_null_customers_customer_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_customers_customer_id.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_customers_customer_id",
            "alias": "not_null_customers_customer_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "customers"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_customers_customer_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.customers\nwhere customer_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "customer_id",
            "materialized_name": "sample_db.public.not_null_customers_customer_id"
        },
        "test.jaffle_shop.unique_orders_order_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "order_id",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "unique_orders_order_id"
            ],
            "unique_id": "test.jaffle_shop.unique_orders_order_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/unique_orders_order_id.sql",
            "original_file_path": "models/schema.yml",
            "name": "unique_orders_order_id",
            "alias": "unique_orders_order_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/unique_orders_order_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from sample_db.public.orders\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "order_id",
            "materialized_name": "sample_db.public.unique_orders_order_id"
        },
        "test.jaffle_shop.not_null_orders_order_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "order_id",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_order_id"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_order_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_order_id.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_order_id",
            "alias": "not_null_orders_order_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_order_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere order_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "order_id",
            "materialized_name": "sample_db.public.not_null_orders_order_id"
        },
        "test.jaffle_shop.not_null_orders_customer_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "customer_id",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_customer_id"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_customer_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_customer_id.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_customer_id",
            "alias": "not_null_orders_customer_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_customer_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere customer_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "customer_id",
            "materialized_name": "sample_db.public.not_null_orders_customer_id"
        },
        "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_relationships(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "relationships",
                "kwargs": {
                    "to": "ref('customers')",
                    "field": "customer_id",
                    "column_name": "customer_id",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_relationships"
                ],
                "nodes": [
                    "model.jaffle_shop.customers",
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "relationships_orders_customer_id__customer_id__ref_customers_"
            ],
            "unique_id": "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/relationships_orders_60f78bf0ddd08829598a2076a90fd183.sql",
            "original_file_path": "models/schema.yml",
            "name": "relationships_orders_customer_id__customer_id__ref_customers_",
            "alias": "relationships_orders_customer_id__customer_id__ref_customers_",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "customers"
                ],
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/relationships_orders_60f78bf0ddd08829598a2076a90fd183.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\n\nselect count(*) as validation_errors\nfrom (\n    select customer_id as id from sample_db.public.orders\n) as child\nleft join (\n    select customer_id as id from sample_db.public.customers\n) as parent on parent.id = child.id\nwhere child.id is not null\n  and parent.id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "customer_id",
            "materialized_name": "sample_db.public.relationships_orders_customer_id__customer_id__ref_customers_"
        },
        "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "accepted_values",
                "kwargs": {
                    "values": [
                        "placed",
                        "shipped",
                        "completed",
                        "return_pending",
                        "returned"
                    ],
                    "column_name": "status",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_accepted_values"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "accepted_values_orders_status__placed__shipped__completed__return_pending__returned"
            ],
            "unique_id": "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/accepted_values_orders_758238c28b8980ea7fe9d60a8d851ea8.sql",
            "original_file_path": "models/schema.yml",
            "name": "accepted_values_orders_status__placed__shipped__completed__return_pending__returned",
            "alias": "accepted_values_orders_status__placed__shipped__completed__return_pending__returned",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/accepted_values_orders_758238c28b8980ea7fe9d60a8d851ea8.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from sample_db.public.orders\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "status",
            "materialized_name": "sample_db.public.accepted_values_orders_status__placed__shipped__completed__return_pending__returned"
        },
        "test.jaffle_shop.not_null_orders_amount": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "amount",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_amount"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_amount",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_amount.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_amount",
            "alias": "not_null_orders_amount",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_amount.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere amount is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "amount",
            "materialized_name": "sample_db.public.not_null_orders_amount"
        },
        "test.jaffle_shop.not_null_orders_credit_card_amount": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "credit_card_amount",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_credit_card_amount"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_credit_card_amount",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_credit_card_amount.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_credit_card_amount",
            "alias": "not_null_orders_credit_card_amount",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_credit_card_amount.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere credit_card_amount is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "credit_card_amount",
            "materialized_name": "sample_db.public.not_null_orders_credit_card_amount"
        },
        "test.jaffle_shop.not_null_orders_coupon_amount": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "coupon_amount",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_coupon_amount"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_coupon_amount",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_coupon_amount.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_coupon_amount",
            "alias": "not_null_orders_coupon_amount",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_coupon_amount.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere coupon_amount is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "coupon_amount",
            "materialized_name": "sample_db.public.not_null_orders_coupon_amount"
        },
        "test.jaffle_shop.not_null_orders_bank_transfer_amount": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "bank_transfer_amount",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_bank_transfer_amount"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_bank_transfer_amount",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_bank_transfer_amount.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_bank_transfer_amount",
            "alias": "not_null_orders_bank_transfer_amount",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_bank_transfer_amount.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere bank_transfer_amount is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "bank_transfer_amount",
            "materialized_name": "sample_db.public.not_null_orders_bank_transfer_amount"
        },
        "test.jaffle_shop.not_null_orders_gift_card_amount": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "gift_card_amount",
                    "model": "{{ ref('orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_orders_gift_card_amount"
            ],
            "unique_id": "test.jaffle_shop.not_null_orders_gift_card_amount",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_orders_gift_card_amount.sql",
            "original_file_path": "models/schema.yml",
            "name": "not_null_orders_gift_card_amount",
            "alias": "not_null_orders_gift_card_amount",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/schema.yml/schema_test/not_null_orders_gift_card_amount.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.orders\nwhere gift_card_amount is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "gift_card_amount",
            "materialized_name": "sample_db.public.not_null_orders_gift_card_amount"
        },
        "test.jaffle_shop.unique_stg_customers_customer_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "customer_id",
                    "model": "{{ ref('stg_customers') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_customers"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "unique_stg_customers_customer_id"
            ],
            "unique_id": "test.jaffle_shop.unique_stg_customers_customer_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/unique_stg_customers_customer_id.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "unique_stg_customers_customer_id",
            "alias": "unique_stg_customers_customer_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_customers"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_customers_customer_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        customer_id\n\n    from sample_db.public.stg_customers\n    where customer_id is not null\n    group by customer_id\n    having count(*) > 1\n\n) validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "customer_id",
            "materialized_name": "sample_db.public.unique_stg_customers_customer_id"
        },
        "test.jaffle_shop.not_null_stg_customers_customer_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "customer_id",
                    "model": "{{ ref('stg_customers') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_customers"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_stg_customers_customer_id"
            ],
            "unique_id": "test.jaffle_shop.not_null_stg_customers_customer_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_stg_customers_customer_id.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "not_null_stg_customers_customer_id",
            "alias": "not_null_stg_customers_customer_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_customers"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_customers_customer_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.stg_customers\nwhere customer_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "customer_id",
            "materialized_name": "sample_db.public.not_null_stg_customers_customer_id"
        },
        "test.jaffle_shop.unique_stg_orders_order_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "order_id",
                    "model": "{{ ref('stg_orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "unique_stg_orders_order_id"
            ],
            "unique_id": "test.jaffle_shop.unique_stg_orders_order_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/unique_stg_orders_order_id.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "unique_stg_orders_order_id",
            "alias": "unique_stg_orders_order_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_orders_order_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        order_id\n\n    from sample_db.public.stg_orders\n    where order_id is not null\n    group by order_id\n    having count(*) > 1\n\n) validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "order_id",
            "materialized_name": "sample_db.public.unique_stg_orders_order_id"
        },
        "test.jaffle_shop.not_null_stg_orders_order_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "order_id",
                    "model": "{{ ref('stg_orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_stg_orders_order_id"
            ],
            "unique_id": "test.jaffle_shop.not_null_stg_orders_order_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_stg_orders_order_id.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "not_null_stg_orders_order_id",
            "alias": "not_null_stg_orders_order_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_orders_order_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.stg_orders\nwhere order_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "order_id",
            "materialized_name": "sample_db.public.not_null_stg_orders_order_id"
        },
        "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "accepted_values",
                "kwargs": {
                    "values": [
                        "placed",
                        "shipped",
                        "completed",
                        "return_pending",
                        "returned"
                    ],
                    "column_name": "status",
                    "model": "{{ ref('stg_orders') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_accepted_values"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_orders"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"
            ],
            "unique_id": "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned",
            "alias": "accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_orders"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/accepted_values_stg_orders_758238c28b8980ea7fe9d60a8d851ea8.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        status as value_field\n\n    from sample_db.public.stg_orders\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'placed','shipped','completed','return_pending','returned'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "status",
            "materialized_name": "sample_db.public.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned"
        },
        "test.jaffle_shop.unique_stg_payments_payment_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_unique(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "unique",
                "kwargs": {
                    "column_name": "payment_id",
                    "model": "{{ ref('stg_payments') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_unique"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "unique_stg_payments_payment_id"
            ],
            "unique_id": "test.jaffle_shop.unique_stg_payments_payment_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/unique_stg_payments_payment_id.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "unique_stg_payments_payment_id",
            "alias": "unique_stg_payments_payment_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_payments"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/unique_stg_payments_payment_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom (\n\n    select\n        payment_id\n\n    from sample_db.public.stg_payments\n    where payment_id is not null\n    group by payment_id\n    having count(*) > 1\n\n) validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "payment_id",
            "materialized_name": "sample_db.public.unique_stg_payments_payment_id"
        },
        "test.jaffle_shop.not_null_stg_payments_payment_id": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_not_null(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "not_null",
                "kwargs": {
                    "column_name": "payment_id",
                    "model": "{{ ref('stg_payments') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_not_null"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "not_null_stg_payments_payment_id"
            ],
            "unique_id": "test.jaffle_shop.not_null_stg_payments_payment_id",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/not_null_stg_payments_payment_id.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "not_null_stg_payments_payment_id",
            "alias": "not_null_stg_payments_payment_id",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_payments"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/not_null_stg_payments_payment_id.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\nselect count(*) as validation_errors\nfrom sample_db.public.stg_payments\nwhere payment_id is null\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "payment_id",
            "materialized_name": "sample_db.public.not_null_stg_payments_payment_id"
        },
        "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card": {
            "raw_sql": "{{ config(severity='ERROR') }}{{ test_accepted_values(**_dbt_schema_test_kwargs) }}",
            "test_metadata": {
                "name": "accepted_values",
                "kwargs": {
                    "values": [
                        "credit_card",
                        "coupon",
                        "bank_transfer",
                        "gift_card"
                    ],
                    "column_name": "payment_method",
                    "model": "{{ ref('stg_payments') }}"
                },
                "namespace": null
            },
            "compiled": true,
            "resource_type": "test",
            "depends_on": {
                "macros": [
                    "macro.dbt.test_accepted_values"
                ],
                "nodes": [
                    "model.jaffle_shop.stg_payments"
                ]
            },
            "config": {
                "enabled": true,
                "materialized": "table",
                "persist_docs": {},
                "vars": {},
                "quoting": {},
                "column_types": {},
                "alias": null,
                "schema": null,
                "database": "sample_db",
                "tags": [],
                "full_refresh": null,
                "severity": "ERROR",
                "post-hook": [],
                "pre-hook": []
            },
            "database": "sample_db",
            "schema": "public",
            "fqn": [
                "jaffle_shop",
                "schema_test",
                "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card"
            ],
            "unique_id": "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql",
            "original_file_path": "models/staging/schema.yml",
            "name": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card",
            "alias": "accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card",
            "checksum": {
                "name": "none",
                "checksum": ""
            },
            "tags": [
                "schema"
            ],
            "refs": [
                [
                    "stg_payments"
                ]
            ],
            "sources": [],
            "description": "",
            "columns": {},
            "meta": {},
            "docs": {
                "show": true
            },
            "patch_path": null,
            "build_path": "target/compiled/jaffle_shop/models/staging/schema.yml/schema_test/accepted_values_stg_payments_944011baab727320a6b119d4d81589ae.sql",
            "deferred": false,
            "unrendered_config": {
                "database": "sample_db",
                "materialized": "table",
                "severity": "ERROR"
            },
            "compiled_sql": "\n    \n    \n\n\n\n\nwith all_values as (\n\n    select distinct\n        payment_method as value_field\n\n    from sample_db.public.stg_payments\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field not in (\n        'credit_card','coupon','bank_transfer','gift_card'\n    )\n)\n\nselect count(*) as validation_errors\nfrom validation_errors\n\n\n",
            "extra_ctes_injected": true,
            "extra_ctes": [],
            "relation_name": null,
            "column_name": "payment_method",
            "materialized_name": "sample_db.public.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card"
        }
    },
    "sources": {},
    "docs": {
        "jaffle_shop.__overview__": {
            "unique_id": "jaffle_shop.__overview__",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "overview.md",
            "original_file_path": "models/overview.md",
            "name": "__overview__",
            "block_contents": "## Data Documentation for Jaffle Shop\n\n`jaffle_shop` is a fictional ecommerce store.\n\nThis [dbt](https://www.getdbt.com/) project is for testing out code.\n\nThe source code can be found [here](https://github.com/clrcrl/jaffle_shop)."
        },
        "jaffle_shop.orders_status": {
            "unique_id": "jaffle_shop.orders_status",
            "package_name": "jaffle_shop",
            "root_path": "/private/tmp/jaffle_shop",
            "path": "docs.md",
            "original_file_path": "models/docs.md",
            "name": "orders_status",
            "block_contents": "Orders can be one of the following statuses:\n\n| status         | description                                                                                                            |\n|----------------|------------------------------------------------------------------------------------------------------------------------|\n| placed         | The order has been placed but has not yet left the warehouse                                                           |\n| shipped        | The order has ben shipped to the customer and is currently in transit                                                  |\n| completed      | The order has been received by the customer                                                                            |\n| return_pending | The customer has indicated that they would like to return the order, but it has not yet been received at the warehouse |\n| returned       | The order has been returned by the customer and received at the warehouse                                              |"
        },
        "dbt.__overview__": {
            "unique_id": "dbt.__overview__",
            "package_name": "dbt",
            "root_path": "/Users/brito/.local/share/virtualenvs/jaffle_shop-o2nlWG-5/lib/python3.7/site-packages/dbt/include/global_project",
            "path": "overview.md",
            "original_file_path": "docs/overview.md",
            "name": "__overview__",
            "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."
        }
    },
    "exposures": {},
    "selectors": {},
    "disabled": [],
    "parent_map": {
        "model.jaffle_shop.customers": [
            "model.jaffle_shop.stg_customers",
            "model.jaffle_shop.stg_orders",
            "model.jaffle_shop.stg_payments"
        ],
        "model.jaffle_shop.orders": [
            "model.jaffle_shop.stg_orders",
            "model.jaffle_shop.stg_payments"
        ],
        "model.jaffle_shop.stg_customers": [
            "seed.jaffle_shop.raw_customers"
        ],
        "model.jaffle_shop.stg_payments": [
            "seed.jaffle_shop.raw_payments"
        ],
        "model.jaffle_shop.stg_orders": [
            "seed.jaffle_shop.raw_orders"
        ],
        "seed.jaffle_shop.raw_customers": [],
        "seed.jaffle_shop.raw_orders": [],
        "seed.jaffle_shop.raw_payments": [],
        "test.jaffle_shop.unique_customers_customer_id": [
            "model.jaffle_shop.customers"
        ],
        "test.jaffle_shop.not_null_customers_customer_id": [
            "model.jaffle_shop.customers"
        ],
        "test.jaffle_shop.unique_orders_order_id": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_order_id": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_customer_id": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_": [
            "model.jaffle_shop.customers",
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_amount": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_credit_card_amount": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_coupon_amount": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_bank_transfer_amount": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.not_null_orders_gift_card_amount": [
            "model.jaffle_shop.orders"
        ],
        "test.jaffle_shop.unique_stg_customers_customer_id": [
            "model.jaffle_shop.stg_customers"
        ],
        "test.jaffle_shop.not_null_stg_customers_customer_id": [
            "model.jaffle_shop.stg_customers"
        ],
        "test.jaffle_shop.unique_stg_orders_order_id": [
            "model.jaffle_shop.stg_orders"
        ],
        "test.jaffle_shop.not_null_stg_orders_order_id": [
            "model.jaffle_shop.stg_orders"
        ],
        "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned": [
            "model.jaffle_shop.stg_orders"
        ],
        "test.jaffle_shop.unique_stg_payments_payment_id": [
            "model.jaffle_shop.stg_payments"
        ],
        "test.jaffle_shop.not_null_stg_payments_payment_id": [
            "model.jaffle_shop.stg_payments"
        ],
        "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card": [
            "model.jaffle_shop.stg_payments"
        ]
    },
    "child_map": {
        "model.jaffle_shop.customers": [
            "test.jaffle_shop.not_null_customers_customer_id",
            "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_",
            "test.jaffle_shop.unique_customers_customer_id"
        ],
        "model.jaffle_shop.orders": [
            "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned",
            "test.jaffle_shop.not_null_orders_amount",
            "test.jaffle_shop.not_null_orders_bank_transfer_amount",
            "test.jaffle_shop.not_null_orders_coupon_amount",
            "test.jaffle_shop.not_null_orders_credit_card_amount",
            "test.jaffle_shop.not_null_orders_customer_id",
            "test.jaffle_shop.not_null_orders_gift_card_amount",
            "test.jaffle_shop.not_null_orders_order_id",
            "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_",
            "test.jaffle_shop.unique_orders_order_id"
        ],
        "model.jaffle_shop.stg_customers": [
            "model.jaffle_shop.customers",
            "test.jaffle_shop.not_null_stg_customers_customer_id",
            "test.jaffle_shop.unique_stg_customers_customer_id"
        ],
        "model.jaffle_shop.stg_payments": [
            "model.jaffle_shop.customers",
            "model.jaffle_shop.orders",
            "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card",
            "test.jaffle_shop.not_null_stg_payments_payment_id",
            "test.jaffle_shop.unique_stg_payments_payment_id"
        ],
        "model.jaffle_shop.stg_orders": [
            "model.jaffle_shop.customers",
            "model.jaffle_shop.orders",
            "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned",
            "test.jaffle_shop.not_null_stg_orders_order_id",
            "test.jaffle_shop.unique_stg_orders_order_id"
        ],
        "seed.jaffle_shop.raw_customers": [
            "model.jaffle_shop.stg_customers"
        ],
        "seed.jaffle_shop.raw_orders": [
            "model.jaffle_shop.stg_orders"
        ],
        "seed.jaffle_shop.raw_payments": [
            "model.jaffle_shop.stg_payments"
        ],
        "test.jaffle_shop.unique_customers_customer_id": [],
        "test.jaffle_shop.not_null_customers_customer_id": [],
        "test.jaffle_shop.unique_orders_order_id": [],
        "test.jaffle_shop.not_null_orders_order_id": [],
        "test.jaffle_shop.not_null_orders_customer_id": [],
        "test.jaffle_shop.relationships_orders_customer_id__customer_id__ref_customers_": [],
        "test.jaffle_shop.accepted_values_orders_status__placed__shipped__completed__return_pending__returned": [],
        "test.jaffle_shop.not_null_orders_amount": [],
        "test.jaffle_shop.not_null_orders_credit_card_amount": [],
        "test.jaffle_shop.not_null_orders_coupon_amount": [],
        "test.jaffle_shop.not_null_orders_bank_transfer_amount": [],
        "test.jaffle_shop.not_null_orders_gift_card_amount": [],
        "test.jaffle_shop.unique_stg_customers_customer_id": [],
        "test.jaffle_shop.not_null_stg_customers_customer_id": [],
        "test.jaffle_shop.unique_stg_orders_order_id": [],
        "test.jaffle_shop.not_null_stg_orders_order_id": [],
        "test.jaffle_shop.accepted_values_stg_orders_status__placed__shipped__completed__return_pending__returned": [],
        "test.jaffle_shop.unique_stg_payments_payment_id": [],
        "test.jaffle_shop.not_null_stg_payments_payment_id": [],
        "test.jaffle_shop.accepted_values_stg_payments_payment_method__credit_card__coupon__bank_transfer__gift_card": []
    }
}