[build-system]
    requires = [
        "setuptools>=61.0.0",
        "wheel"
    ]
    build-backend = "setuptools.build_meta"

[project]
    name = "invokeai"
    description = "An implementation of Stable Diffusion which provides various new features and options to aid the image generation process"
    requires-python = ">=3.9, <3.11"
    readme = {file = "README.md", content-type = "text/markdown", charset = "UTF-8"}
    keywords = [
        "stable-diffusion",
        "AI"
    ]
    dynamic = ["version"]
    license = {file = "LICENSE"}
    authors = [
        {name = "The InvokeAI Project",email = "lincoln.stein@gmail.com"}
    ]
    classifiers = [
        "Development Status :: 4 - Beta",
        "Environment :: GPU",
        "Environment :: GPU :: NVIDIA CUDA",
        "Environment :: MacOS X",
        "Intended Audience :: End Users/Desktop",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Operating System :: POSIX :: Linux",
        "Operating System :: MacOS",
        "Operating System :: Microsoft :: Windows",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3 :: Only",
        "Topic :: Artistic Software",
        "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
        "Topic :: Internet :: WWW/HTTP :: WSGI :: Server",
        "Topic :: Multimedia :: Graphics",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
        "Topic :: Scientific/Engineering :: Image Processing",
    ]

    dependencies = [
        "accelerate",
        "albumentations",
        "diffusers[torch]==0.10.*",
        "einops",
        "eventlet",
        "facexlib",
        "flask==2.1.3",
        "flask_cors==3.0.10",
        "flask_socketio==5.3.0",
        "flaskwebgui==1.0.3",
        "getpass_asterisk",
        "gfpgan",
        "imageio-ffmpeg",
        "kornia",
        "numpy==1.23.*",
        "omegaconf",
        "opencv-python",
        "picklescan",
        "pillow",
        "pudb",
        "pyreadline3",
        "pytorch-lightning<1.8.0",
        "realesrgan",
        "requests==2.25.1",
        "scikit-image>=0.19",
        "send2trash",
        "streamlit",
        "taming-transformers-rom1504",
        "test-tube>=0.7.5",
        "torch",
        "torch-fidelity",
        "torchvision",
        "torchmetrics",
        "transformers==4.25.1",
        "k-diffusion",
        "pypatchmatch ",
    ]

[project.optional-dependencies]
    "dev" = [
        "black",
        "pylint",
        "twine",
        "pip-tools"
    ]

[project.scripts]
    invokeai = "scripts.invoke:main"
    configure_invokeai = "scripts.configure_invokeai:main"
    create_root = "scripts.create_root:main"

[project.urls]
    "Documentation" = "https://invoke-ai.github.io/InvokeAI/"
    "Source" = "https://github.com/invoke-ai/InvokeAI/"
    "Bug Reports" = "https://github.com/invoke-ai/InvokeAI/issues"
    "Discord" = "https://discord.gg/ZmtBAhwWhy"

[tool.setuptools.dynamic]
    version = {attr = "ldm.invoke.__version__"}

[tool.setuptools.package-data]
    "vendored.clip.clip" = ["*.txt.gz"]
    "docs.assets" = [
        "invoke_ai_banner.png",
        "invoke-web-server-1.png"
    ]
    "configs" = ["*"]
    "frontend.dist" = ["*"]

[tool.setuptools.packages.find]
    "where" = ["."]
    "include" = [
        "backend*",
        "configs*",
        "frontend.dist*",
        "ldm*",
        "scripts*",
        "vendored*"
        ]

[tool.pylint]
    max-line-length = 88
    disable = [
        "C0103", # (invalid-name)
        "C0114", # (missing-module-docstring)
        "C0115", # (missing-class-docstring)
        "C0116", # (missing-function-docstring)
        "R0903", # (too-few-public-methods)
        "R0913", # (too-many-arguments)
        "W0105", # (pointless-string-statement)
    ]
