{%- if filetype_loop == 0 %}Interface,Description,Admin State,Enabled,Operational Status,Line Protocol,Link State,MAC Address,Phsyical Address,IP Address,Port Speed,Duplex,Bandwidth,Delay,Media Type,Ether Type,Medium,MTU,Port Mode,Type,Port Channel Interface,Port Channel Member,Last Link Flap,Interface Reset,Dedicated Interface,Efficient Ethernet,Encapsulation,Flow Control Send,Flow Control Receive,Auto MDIX,Reliability,Switchport Monitor,Beacon,Auto State,RX Load,TX Load,Input Bad Etype Drop,Input Broadcast,Input CRC Errors,Input Discard,Input Errors,Input Down Drop,Input Ignored,Input MAC Pause Frames,Input Multicast,Input No Buffer,Input Octets,Input Overrun,Input Oversize Frame,Input Total,Input Runts,Input Short Frame,Input Underrun,Input Unicast,Input Unknown,Input Watchdog,Input With Dribble,Output Babble,Output Broadcast,Output Collision,Output Deferred,Output Discard,Output Errors,Output Jumbo,Output Late Collision,Output Lost Carrier,Output MAC Pause Frames,Output Multicast,Output No Carrier,Output Octets,Output Total,Output Unicast,Last Counter Clear,Input rate,Input Rate Packets,Output Rate,Output Rate Packets,Load Interval,RX,TX{% for interface in to_parse_interface %}
{{ interface }},{% if to_parse_interface[interface].description is defined %}{{ to_parse_interface[interface].description }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].admin_state is defined %}{{ to_parse_interface[interface].admin_state }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].enabled is defined %}{{ to_parse_interface[interface].enabled }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].oper_status is defined %}{{ to_parse_interface[interface].oper_status }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].line_protocol is defined %}{{ to_parse_interface[interface].line_protocol }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].link_state is defined %}{{ to_parse_interface[interface].link_state }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].mac_address is defined %}{{ to_parse_interface[interface].mac_address }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].phys_address is defined %}{{ to_parse_interface[interface].phys_address }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].ipv4 is defined %}{% for ip in to_parse_interface[interface].ipv4 %}{{ ip }}{% endfor%}{% else %}N/A{% endif %},{% if to_parse_interface[interface].port_speed is defined %}{{ to_parse_interface[interface].port_speed }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].duplex_mode is defined %}{{ to_parse_interface[interface].duplex_mode }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].bandwidth is defined %}{{ to_parse_interface[interface].bandwidth }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].delay is defined %}{{ to_parse_interface[interface].delay }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].media_type is defined %}{{ to_parse_interface[interface].media_type }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].ethertype is defined %}{{ to_parse_interface[interface].ethertype }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].medium is defined %}{{ to_parse_interface[interface].medium }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].mtu is defined %}{{ to_parse_interface[interface].mtu }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].port_mode is defined %}{{ to_parse_interface[interface].port_mode }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].types is defined %}{{ to_parse_interface[interface].types }}{% else %}N/A{% endif %},{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_int }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{{ interface }}{% else %}N/A{% endif %}{% endif %},{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_member }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{% for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}{{ member }}{% endfor %}{% else %}N/A{% endif %}{% endif %},{% if to_parse_interface[interface].last_link_flapped is defined %}{{ to_parse_interface[interface].last_link_flapped }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].interface_reset is defined %}{{ to_parse_interface[interface].interface_reset }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].dedicated_interface is defined %}{{ to_parse_interface[interface].dedicated_interface }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].efficient_ethernet is defined %}{{ to_parse_interface[interface].efficient_ethernet }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].encapsulations is defined %}{{ to_parse_interface[interface].encapsulations.encapsulation }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].flow_control is defined %}{{ to_parse_interface[interface].flow_control.send }},{{ to_parse_interface[interface].flow_control.receive }}{% else %}N/A,N/A{% endif %},{% if to_parse_interface[interface].auto_mdix is defined %}{{ to_parse_interface[interface].auto_mdix }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].reliability is defined %}{{ to_parse_interface[interface].reliability }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].switchport_monitor is defined %}{{ to_parse_interface[interface].switchport_monitor }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].beacon is defined %}{{ to_parse_interface[interface].beacon }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].autostate is defined %}{{ to_parse_interface[interface].autostate }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].rxload is defined %}{{ to_parse_interface[interface].rxload }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].txload is defined %}{{ to_parse_interface[interface].txload }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters is defined %}{% if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}{{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_crc_errors is defined %}{{ to_parse_interface[interface].counters.in_crc_errors }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_discard is defined %}{{ to_parse_interface[interface].counters.in_discard }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_errors is defined %}{{ to_parse_interface[interface].counters.in_errors }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_if_down_drop is defined %}{{ to_parse_interface[interface].counters.in_if_down_drop }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_ignored is defined %}{{ to_parse_interface[interface].counters.in_ignored }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_multicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_no_buffer is defined %}{{ to_parse_interface[interface].counters.in_no_buffer }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_octets is defined %}{{ to_parse_interface[interface].counters.in_octets }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_overrun is defined %}{{ to_parse_interface[interface].counters.in_overrun }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_oversize_frame is defined %}{{ to_parse_interface[interface].counters.in_oversize_frame }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_pkts is defined %}{{ to_parse_interface[interface].counters.in_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_runts is defined %}{{ to_parse_interface[interface].counters.in_runts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_short_frame is defined %}{{ to_parse_interface[interface].counters.in_short_frame }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_underrun is defined %}{{ to_parse_interface[interface].counters.in_underrun }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_unicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_unknown_protos is defined %}{{ to_parse_interface[interface].counters.in_unknown_protos }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_watchdog is defined %}{{ to_parse_interface[interface].counters.in_watchdog }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.in_with_dribble is defined %}{{ to_parse_interface[interface].counters.in_with_dribble }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_babble is defined %}{{ to_parse_interface[interface].counters.out_babble }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_collision is defined %}{{ to_parse_interface[interface].counters.out_collision }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_deferred is defined %}{{ to_parse_interface[interface].counters.out_deferred }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_discard is defined %}{{ to_parse_interface[interface].counters.out_discard }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_errors is defined %}{{ to_parse_interface[interface].counters.out_errors }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_jumbo_packets is defined %}{{ to_parse_interface[interface].counters.out_jumbo_packets }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_late_collision is defined %}{{ to_parse_interface[interface].counters.out_late_collision }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_lost_carrier is defined %}{{ to_parse_interface[interface].counters.out_lost_carrier }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_multicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_no_carrier is defined %}{{ to_parse_interface[interface].counters.out_no_carrier }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_octets is defined %}{{ to_parse_interface[interface].counters.out_octets }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_pkts is defined %}{{ to_parse_interface[interface].counters.out_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.out_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_unicast_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.last_clear is defined %}{{ to_parse_interface[interface].counters.last_clear }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate is defined %}{% if to_parse_interface[interface].counters.rate.in_rate is defined %}{{ to_parse_interface[interface].counters.rate.in_rate }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.out_rate is defined %}{{ to_parse_interface[interface].counters.rate.out_rate }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.rate.load_interval is defined %}{{ to_parse_interface[interface].counters.rate.load_interval }}{% else %}N/A{% endif %}{% else %}N/A,N/A,N/A,N/A,N/A{% endif %},{% if to_parse_interface[interface].counters.rx is defined %}{{ to_parse_interface[interface].counters.rx }}{% else %}N/A{% endif %},{% if to_parse_interface[interface].counters.tx is defined %}{{ to_parse_interface[interface].counters.tx }}{% else %}N/A{% endif %}{% else %}N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A,N/A{% endif %}{% endfor %}
{% else %}{% if filetype_loop == 1 %}
# Show Interface
| Interface | Description | Admin State | Enabled | Operational Status | Line Protocol | Link State | MAC Address | Phsyical Address | IP Address | Port Speed | Duplex | Bandwidth | Delay | Media Type | Ether Type | Medium | MTU | Port Mode | Type | Port Channel Interface | Port Channel Member | Last Link Flap | Interface Reset | Dedicated Interface | Efficient Ethernet | Encapsulation | Flow Control Send | Flow Control Receive | Auto MDIX | Reliability | Switchport Monitor | Beacon | Auto State | RX Load | TX Load | Input Bad Etype Drop | Input Broadcast | Input CRC Errors | Input Discard | Input Errors | Input Down Drop | Input Ignored | Input MAC Pause Frames | Input Multicast | Input No Buffer | Input Octets | Input Overrun | Input Oversize Frame | Input Total | Input Runts | Input Short Frame | Input Underrun | Input Unicast | Input Unknown | Input Watchdog | Input With Dribble | Output Babble | Output Broadcast | Output Collision | Output Deferred | Output Discard | Output Errors | Output Jumbo | Output Late Collision | Output Lost Carrier | Output MAC Pause Frames | Output Multicast | Output No Carrier | Output Octets | Output Total | Output Unicast | Last Counter Clear | Input rate | Input Rate Packets | Output Rate | Output Rate Packets | Load Interval | RX | TX |
| --------- | ----------- | ----------- | ------- | ------------------ | ------------- | ---------- | ----------- | ---------------- | ---------- | ---------- | ------ | --------- | ----- | ---------- | ---------- | ------ | --- | --------- | ---- | ---------------------- | ------------------- | -------------- | --------------- | ------------------- | ------------------ | ------------- | ----------------- | -------------------- | --------- | ----------- | ------------------ | ------ | ---------- | ------- | ------- | -------------------- | --------------- | ---------------- | ------------- | ------------ | --------------- | ------------- | ---------------------- | --------------- | --------------- | ------------ | ------------- | -------------------- | ----------- | ----------- | ----------------- | -------------- | ------------- | ------------- | -------------- | ------------------ | ------------- | ---------------- | ---------------- | --------------- | -------------- | ------------- | ------------ | --------------------- | ------------------- | ----------------------- | ---------------- | ----------------- | ------------- | ------------ | -------------- | ------------------ | ---------- | ------------------ | ----------- | ------------------- | ------------- | -- | -- |{% for interface in to_parse_interface %}
| {{ interface }} | {% if to_parse_interface[interface].description is defined %}{{ to_parse_interface[interface].description }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].admin_state is defined %}{{ to_parse_interface[interface].admin_state }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].enabled is defined %}{{ to_parse_interface[interface].enabled }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].oper_status is defined %}{{ to_parse_interface[interface].oper_status }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].line_protocol is defined %}{{ to_parse_interface[interface].line_protocol }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].link_state is defined %}{{ to_parse_interface[interface].link_state }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].mac_address is defined %}{{ to_parse_interface[interface].mac_address }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].phys_address is defined %}{{ to_parse_interface[interface].phys_address }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].ipv4 is defined %}{% for ip in to_parse_interface[interface].ipv4 %}{{ ip }}{% endfor%}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].port_speed is defined %}{{ to_parse_interface[interface].port_speed }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].duplex_mode is defined %}{{ to_parse_interface[interface].duplex_mode }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].bandwidth is defined %}{{ to_parse_interface[interface].bandwidth }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].delay is defined %}{{ to_parse_interface[interface].delay }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].media_type is defined %}{{ to_parse_interface[interface].media_type }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].ethertype is defined %}{{ to_parse_interface[interface].ethertype }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].medium is defined %}{{ to_parse_interface[interface].medium }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].mtu is defined %}{{ to_parse_interface[interface].mtu }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].port_mode is defined %}{{ to_parse_interface[interface].port_mode }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].types is defined %}{{ to_parse_interface[interface].types }}{% else %}N/A{% endif %} | {% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_int }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{{ interface }}{% else %}N/A{% endif %}{% endif %} | {% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_member }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{% for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}{{ member }}{% endfor %}{% else %}N/A{% endif %}{% endif %} | {% if to_parse_interface[interface].last_link_flapped is defined %}{{ to_parse_interface[interface].last_link_flapped }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].interface_reset is defined %}{{ to_parse_interface[interface].interface_reset }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].dedicated_interface is defined %}{{ to_parse_interface[interface].dedicated_interface }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].efficient_ethernet is defined %}{{ to_parse_interface[interface].efficient_ethernet }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].encapsulations is defined %}{{ to_parse_interface[interface].encapsulations.encapsulation }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].flow_control is defined %}{{ to_parse_interface[interface].flow_control.send }} | {{ to_parse_interface[interface].flow_control.receive }}{% else %}N/A | N/A{% endif %} | {% if to_parse_interface[interface].auto_mdix is defined %}{{ to_parse_interface[interface].auto_mdix }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].reliability is defined %}{{ to_parse_interface[interface].reliability }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].switchport_monitor is defined %}{{ to_parse_interface[interface].switchport_monitor }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].beacon is defined %}{{ to_parse_interface[interface].beacon }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].autostate is defined %}{{ to_parse_interface[interface].autostate }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].rxload is defined %}{{ to_parse_interface[interface].rxload }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].txload is defined %}{{ to_parse_interface[interface].txload }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters is defined %}{% if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}{{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_crc_errors is defined %}{{ to_parse_interface[interface].counters.in_crc_errors }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_discard is defined %}{{ to_parse_interface[interface].counters.in_discard }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_errors is defined %}{{ to_parse_interface[interface].counters.in_errors }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_if_down_drop is defined %}{{ to_parse_interface[interface].counters.in_if_down_drop }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_ignored is defined %}{{ to_parse_interface[interface].counters.in_ignored }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_multicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_no_buffer is defined %}{{ to_parse_interface[interface].counters.in_no_buffer }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_octets is defined %}{{ to_parse_interface[interface].counters.in_octets }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_overrun is defined %}{{ to_parse_interface[interface].counters.in_overrun }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_oversize_frame is defined %}{{ to_parse_interface[interface].counters.in_oversize_frame }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_pkts is defined %}{{ to_parse_interface[interface].counters.in_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_runts is defined %}{{ to_parse_interface[interface].counters.in_runts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_short_frame is defined %}{{ to_parse_interface[interface].counters.in_short_frame }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_underrun is defined %}{{ to_parse_interface[interface].counters.in_underrun }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_unicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_unknown_protos is defined %}{{ to_parse_interface[interface].counters.in_unknown_protos }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_watchdog is defined %}{{ to_parse_interface[interface].counters.in_watchdog }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.in_with_dribble is defined %}{{ to_parse_interface[interface].counters.in_with_dribble }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_babble is defined %}{{ to_parse_interface[interface].counters.out_babble }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_collision is defined %}{{ to_parse_interface[interface].counters.out_collision }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_deferred is defined %}{{ to_parse_interface[interface].counters.out_deferred }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_discard is defined %}{{ to_parse_interface[interface].counters.out_discard }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_errors is defined %}{{ to_parse_interface[interface].counters.out_errors }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_jumbo_packets is defined %}{{ to_parse_interface[interface].counters.out_jumbo_packets }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_late_collision is defined %}{{ to_parse_interface[interface].counters.out_late_collision }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_lost_carrier is defined %}{{ to_parse_interface[interface].counters.out_lost_carrier }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_multicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_no_carrier is defined %}{{ to_parse_interface[interface].counters.out_no_carrier }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_octets is defined %}{{ to_parse_interface[interface].counters.out_octets }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_pkts is defined %}{{ to_parse_interface[interface].counters.out_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.out_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_unicast_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.last_clear is defined %}{{ to_parse_interface[interface].counters.last_clear }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate is defined %}{% if to_parse_interface[interface].counters.rate.in_rate is defined %}{{ to_parse_interface[interface].counters.rate.in_rate }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.out_rate is defined %}{{ to_parse_interface[interface].counters.rate.out_rate }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.rate.load_interval is defined %}{{ to_parse_interface[interface].counters.rate.load_interval }}{% else %}N/A{% endif %}{% else %}N/A | N/A | N/A | N/A | N/A{% endif %} | {% if to_parse_interface[interface].counters.rx is defined %}{{ to_parse_interface[interface].counters.rx }}{% else %}N/A{% endif %} | {% if to_parse_interface[interface].counters.tx is defined %}{{ to_parse_interface[interface].counters.tx }}{% else %}N/A{% endif %}{% else %}N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A | N/A {% endif %}|{% endfor %}
{% else %}{% if filetype_loop == 2 %}
<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/colreorder/1.5.4/js/dataTables.colReorder.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/keytable/2.6.4/js/dataTables.keyTable.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.9/js/dataTables.fixedHeader.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.9/css/fixedHeader.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/keytable/2.6.4/css/keyTable.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
<h1>Show Interface</h1>
<table id = "interface">
  <tr>
   <th>Interface</th>
   <th>Description</th>
   <th>Admin State</th>
   <th>Enabled</th>
   <th>Operational Status</th>
   <th>Line Protocol</th>
   <th>Link State</th>
   <th>MAC Address</th>
   <th>Phsyical Address</th>
   <th>IP Address</th>
   <th>Port Speed</th>
   <th>Duplex</th>
   <th>Bandwidth</th>
   <th>Delay</th>
   <th>Media Type</th>
   <th>Ether Type</th>
   <th>Medium</th>
   <th>MTU</th>
   <th>Port Mode</th>
   <th>Type</th>
   <th>Port Channel Interface</th>
   <th>Port Channel Member</th>
   <th>Last Link Flap</th>
   <th>Interface Reset</th>
   <th>Dedicated Interface</th>
   <th>Efficient Ethernet</th>
   <th>Encapsulation</th>
   <th>Flow Control Send</th>
   <th>Flow Control Receive</th>
   <th>Auto MDIX</th>
   <th>Reliability</th>
   <th>Switchport Monitor</th>
   <th>Beacon</th>
   <th>Auto State</th>
   <th>RX Load</th>
   <th>TX Load</th>
   <th>Input Bad Etype Drop</th>
   <th>Input Broadcast</th>
   <th>Input CRC Errors</th>
   <th>Input Discard</th>
   <th>Input Errors</th>
   <th>Input Down Drop</th>
   <th>Input Ignored</th>
   <th>Input MAC Pause Frames</th>
   <th>Input Multicast</th>
   <th>Input No Buffer</th>
   <th>Input Octets</th>
   <th>Input Overrun</th>
   <th>Input Oversize Frame</th>
   <th>Input Total</th>
   <th>Input Runts</th>
   <th>Input Short Frame</th>
   <th>Input Underrun</th>
   <th>Input Unicast</th>
   <th>Input Unknown</th>
   <th>Input Watchdog</th>
   <th>Input With Dribble</th>
   <th>Output Babble</th>
   <th>Output Broadcast</th>
   <th>Output Collision</th>
   <th>Output Deferred</th>
   <th>Output Discard</th>
   <th>Output Errors</th>
   <th>Output Jumbo</th>
   <th>Output Late Collision</th>
   <th>Output Lost Carrier</th>
   <th>Output MAC Pause Frames</th>
   <th>Output Multicast</th>
   <th>Output No Carrier</th>
   <th>Output Octets</th>
   <th>Output Total</th>
   <th>Output Unicast</th>
   <th>Last Counter Clear</th>
   <th>Input rate</th>
   <th>Input Rate Packets</th>
   <th>Output Rate</th>
   <th>Output Rate Packets</th>
   <th>Load Interval</th>
   <th>RX</th>
   <th>TX</th>
  </tr>   
{%- for interface in to_parse_interface %}
  <tr>
    <td>{{ interface }}</td>
    <td>{% if to_parse_interface[interface].description is defined %}{{ to_parse_interface[interface].description }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].admin_state is defined %}{{ to_parse_interface[interface].admin_state }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].enabled is defined %}{{ to_parse_interface[interface].enabled }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].oper_status is defined %}{{ to_parse_interface[interface].oper_status }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].line_protocol is defined %}{{ to_parse_interface[interface].line_protocol }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].link_state is defined %}{{ to_parse_interface[interface].link_state }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].mac_address is defined %}{{ to_parse_interface[interface].mac_address }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].phys_address is defined %}{{ to_parse_interface[interface].phys_address }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].ipv4 is defined %}{% for ip in to_parse_interface[interface].ipv4 %}{{ ip }}{% endfor%}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].port_speed is defined %}{{ to_parse_interface[interface].port_speed }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].duplex_mode is defined %}{{ to_parse_interface[interface].duplex_mode }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].bandwidth is defined %}{{ to_parse_interface[interface].bandwidth }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].delay is defined %}{{ to_parse_interface[interface].delay }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].media_type is defined %}{{ to_parse_interface[interface].media_type }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].ethertype is defined %}{{ to_parse_interface[interface].ethertype }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].medium is defined %}{{ to_parse_interface[interface].medium }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].mtu is defined %}{{ to_parse_interface[interface].mtu }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].port_mode is defined %}{{ to_parse_interface[interface].port_mode }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].types is defined %}{{ to_parse_interface[interface].types }}{% else %}N/A{% endif %}</td>
    <td>{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_int }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{{ interface }}{% else %}N/A{% endif %}{% endif %}</td>
    <td>{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}{{ to_parse_interface[interface].port_channel.port_channel_member }}{% else %}{% if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}{% for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}{{ member }}{% endfor %}{% else %}N/A{% endif %}{% endif %}</td>
    <td>{% if to_parse_interface[interface].last_link_flapped is defined %}{{ to_parse_interface[interface].last_link_flapped }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].interface_reset is defined %}{{ to_parse_interface[interface].interface_reset }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].dedicated_interface is defined %}{{ to_parse_interface[interface].dedicated_interface }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].efficient_ethernet is defined %}{{ to_parse_interface[interface].efficient_ethernet }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].encapsulations is defined %}{{ to_parse_interface[interface].encapsulations.encapsulation }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].flow_control is defined %}{{ to_parse_interface[interface].flow_control.send }}</td><td>{{ to_parse_interface[interface].flow_control.receive }}{% else %}N/A</td>
    <td>N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].auto_mdix is defined %}{{ to_parse_interface[interface].auto_mdix }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].reliability is defined %}{{ to_parse_interface[interface].reliability }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].switchport_monitor is defined %}{{ to_parse_interface[interface].switchport_monitor }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].beacon is defined %}{{ to_parse_interface[interface].beacon }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].autostate is defined %}{{ to_parse_interface[interface].autostate }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].rxload is defined %}{{ to_parse_interface[interface].rxload }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].txload is defined %}{{ to_parse_interface[interface].txload }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters is defined %}{% if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}{{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_crc_errors is defined %}{{ to_parse_interface[interface].counters.in_crc_errors }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_discard is defined %}{{ to_parse_interface[interface].counters.in_discard }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_errors is defined %}{{ to_parse_interface[interface].counters.in_errors }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_if_down_drop is defined %}{{ to_parse_interface[interface].counters.in_if_down_drop }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_ignored is defined %}{{ to_parse_interface[interface].counters.in_ignored }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_multicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_no_buffer is defined %}{{ to_parse_interface[interface].counters.in_no_buffer }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_octets is defined %}{{ to_parse_interface[interface].counters.in_octets }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_overrun is defined %}{{ to_parse_interface[interface].counters.in_overrun }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_oversize_frame is defined %}{{ to_parse_interface[interface].counters.in_oversize_frame }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_pkts is defined %}{{ to_parse_interface[interface].counters.in_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_runts is defined %}{{ to_parse_interface[interface].counters.in_runts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_short_frame is defined %}{{ to_parse_interface[interface].counters.in_short_frame }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_underrun is defined %}{{ to_parse_interface[interface].counters.in_underrun }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.in_unicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_unknown_protos is defined %}{{ to_parse_interface[interface].counters.in_unknown_protos }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_watchdog is defined %}{{ to_parse_interface[interface].counters.in_watchdog }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.in_with_dribble is defined %}{{ to_parse_interface[interface].counters.in_with_dribble }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_babble is defined %}{{ to_parse_interface[interface].counters.out_babble }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}{{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_collision is defined %}{{ to_parse_interface[interface].counters.out_collision }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_deferred is defined %}{{ to_parse_interface[interface].counters.out_deferred }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_discard is defined %}{{ to_parse_interface[interface].counters.out_discard }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_errors is defined %}{{ to_parse_interface[interface].counters.out_errors }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_jumbo_packets is defined %}{{ to_parse_interface[interface].counters.out_jumbo_packets }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_late_collision is defined %}{{ to_parse_interface[interface].counters.out_late_collision }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_lost_carrier is defined %}{{ to_parse_interface[interface].counters.out_lost_carrier }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}{{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_multicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_multicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_no_carrier is defined %}{{ to_parse_interface[interface].counters.out_no_carrier }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_octets is defined %}{{ to_parse_interface[interface].counters.out_octets }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_pkts is defined %}{{ to_parse_interface[interface].counters.out_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.out_unicast_pkts is defined %}{{ to_parse_interface[interface].counters.out_unicast_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.last_clear is defined %}{{ to_parse_interface[interface].counters.last_clear }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate is defined %}{% if to_parse_interface[interface].counters.rate.in_rate is defined %}{{ to_parse_interface[interface].counters.rate.in_rate }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.out_rate is defined %}{{ to_parse_interface[interface].counters.rate.out_rate }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}{{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rate.load_interval is defined %}{{ to_parse_interface[interface].counters.rate.load_interval }}{% else %}N/A{% endif %}{% else %}N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.rx is defined %}{{ to_parse_interface[interface].counters.rx }}{% else %}N/A{% endif %}</td>
    <td>{% if to_parse_interface[interface].counters.tx is defined %}{{ to_parse_interface[interface].counters.tx }}{% else %}N/A{% endif %}{% else %}N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>
    <td>N/A</td>{% endif %}
  </tr>
{%- endfor %}
</table>
<script type = "text/javascript">
  $(document).ready(function(){
    $('#interface thead tr')
    .clone(true)
    .addClass('filters')
    .appendTo('#interface thead');

    var table = $('#interface').DataTable({
        keys: true,
        dom: 'Bfrtip',
        lengthMenu: [
            [ 10, 25, 50, -1 ],
            [ '10 rows', '25 rows', '50 rows', 'Show all' ]
        ],
        buttons: [
        'pageLength','colvis','copy', 'csv', 'excel', 'pdf', 'print'
        ],
        colReorder: true,
        select: true,            
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
        var api = this.api();

        // For each column
        api
            .columns()
            .eq(0)
            .each(function (colIdx) {
                // Set the header cell to contain the input element
                var cell = $('.filters th').eq(
                    $(api.column(colIdx).header()).index()
                );
                var title = $(cell).text();
                $(cell).html('<input type="text" placeholder="' + title + '" />');

                // On every keypress in this input
                $(
                    'input',
                    $('.filters th').eq($(api.column(colIdx).header()).index())
                )
                    .off('keyup change')
                    .on('keyup change', function (e) {
                        e.stopPropagation();

                        // Get the search value
                        $(this).attr('title', $(this).val());
                        var regexr = '({search})'; //$(this).parents('th').find('select').val();

                        var cursorPosition = this.selectionStart;
                        // Search the column for that value
                        api
                            .column(colIdx)
                            .search(
                                this.value != ''
                                    ? regexr.replace('{search}', '(((' + this.value + ')))')
                                    : '',
                                this.value != '',
                                this.value == ''
                            )
                            .draw();

                        $(this)
                            .focus()[0]
                            .setSelectionRange(cursorPosition, cursorPosition);
                    });
            });
    },
});
});        
</script>
</body></html>
{%- else %}
# Show Interface
{%- for interface in to_parse_interface %}
## {{ interface }}
{%- if to_parse_interface[interface].description is defined %}
### Description: {{ to_parse_interface[interface].description }}{% endif %}
{%- if to_parse_interface[interface].admin_state is defined %}
### Admin State: {{ to_parse_interface[interface].admin_state }}{% endif %}
{%- if to_parse_interface[interface].enabled is defined %}
### Enabled: {{ to_parse_interface[interface].enabled }}{% endif %}
{%- if to_parse_interface[interface].oper_status is defined %}
### Operational Status: {{ to_parse_interface[interface].oper_status }}{% endif %}
{%- if to_parse_interface[interface].line_protocol is defined %}
### Line Protocol: {{ to_parse_interface[interface].line_protocol }}{% endif %}
{%- if to_parse_interface[interface].link_state is defined %}
### Link State: {{ to_parse_interface[interface].link_state }}{% endif %}
{%- if to_parse_interface[interface].mac_address is defined %}
### MAC Address: {{ to_parse_interface[interface].mac_address }}{% endif %}
{%- if to_parse_interface[interface].phys_address is defined %}
### Physical Address: {{ to_parse_interface[interface].phys_address }}{% endif %}
{%- if to_parse_interface[interface].ipv4 is defined %}
### IP Addresses
{%- for ip in to_parse_interface[interface].ipv4 %}
#### {{ ip }}
{%- endfor%}{% endif %}
{%- if to_parse_interface[interface].port_speed is defined %}
### Port Speed: {{ to_parse_interface[interface].port_speed }}{% endif %}
{%- if to_parse_interface[interface].duplex_mode is defined %}
### Duplex Mode: {{ to_parse_interface[interface].duplex_mode }}{% endif %}
{%- if to_parse_interface[interface].bandwidth is defined %}
### Bandwidth: {{ to_parse_interface[interface].bandwidth }}{% endif %}
{%- if to_parse_interface[interface].delay is defined %}
### Delay: {{ to_parse_interface[interface].delay }}{% endif %}
{%- if to_parse_interface[interface].media_type is defined %}
### Media Type: {{ to_parse_interface[interface].media_type }}{% endif %}
{%- if to_parse_interface[interface].ethertype is defined %}
### Ethertype: {{ to_parse_interface[interface].ethertype }}{% endif %}
{%- if to_parse_interface[interface].medium is defined %}
### Medium: {{ to_parse_interface[interface].medium }}{% endif %}
{%- if to_parse_interface[interface].mtu is defined %}
### MTU: {{ to_parse_interface[interface].mtu }}{% endif %}
{%- if to_parse_interface[interface].port_mode is defined %}
### Port Mode: {{ to_parse_interface[interface].port_mode }}{% endif %}
{%- if to_parse_interface[interface].types is defined %}
### Types: {{ to_parse_interface[interface].types }}{% endif %}
{%- if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_int) is defined %}
### Port Channel Interface: {{ to_parse_interface[interface].port_channel.port_channel_int }}
{%- else %}
{%-     if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}
### Port Channel Interface: {{ interface }}{% endif %}{% endif %}
{%- if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member) is defined %}
### Port Channel Member: {{ to_parse_interface[interface].port_channel.port_channel_member }}
{%- else %}
{%-     if (to_parse_interface[interface].port_channel) and (to_parse_interface[interface].port_channel.port_channel_member_intfs) is defined %}
### Port Channel Member: 
{%- for member in to_parse_interface[interface].port_channel.port_channel_member_intfs %}
#### {{ member }}
{%- endfor %}{% endif %}{% endif %}
{%- if to_parse_interface[interface].last_link_flapped is defined %}
### Last Link Flap: {{ to_parse_interface[interface].last_link_flapped }}{% endif %}
{%- if to_parse_interface[interface].interface_reset is defined %}
### Interface Reset: {{ to_parse_interface[interface].interface_reset }}{% endif %}
{%- if to_parse_interface[interface].dedicated_interface is defined %}
### Dedicated Interface: {{ to_parse_interface[interface].dedicated_interface }}{% endif %}
{%- if to_parse_interface[interface].efficient_ethernet is defined %}
### Efficient Ethernet: {{ to_parse_interface[interface].efficient_ethernet }}{% endif %}
{%- if to_parse_interface[interface].encapsulations is defined %}
### Encapsulation: {{ to_parse_interface[interface].encapsulations.encapsulation }}{% endif %}
{%- if to_parse_interface[interface].flow_control is defined %}
### Flow Control
#### Send: {{ to_parse_interface[interface].flow_control.send }}
#### Receive: {{ to_parse_interface[interface].flow_control.receive }}{% endif %}
{%- if to_parse_interface[interface].auto_mdix is defined %}
### Auto MDIX: {{ to_parse_interface[interface].auto_mdix }}{% endif %}
{%- if to_parse_interface[interface].reliability is defined %}
### Reliability: {{ to_parse_interface[interface].reliability }}{% endif %}
{%- if to_parse_interface[interface].switchport_monitor is defined %}
### Switchport Monitor: {{ to_parse_interface[interface].switchport_monitor }}{% endif %}
{%- if to_parse_interface[interface].beacon is defined %}
### Beacon: {{ to_parse_interface[interface].beacon }}{% endif %}
{%- if to_parse_interface[interface].autostate is defined %}
### Auto State: {{ to_parse_interface[interface].autostate }}{% endif %}
### Load
{%- if to_parse_interface[interface].rxload is defined %}
#### RX: {{ to_parse_interface[interface].rxload }}{% endif %}
{%- if to_parse_interface[interface].txload is defined %}
#### TX: {{ to_parse_interface[interface].txload }}{% endif %}
{%- if to_parse_interface[interface].counters is defined %}
### Counters
#### Input
{%- if to_parse_interface[interface].counters.in_bad_etype_drop is defined %}
##### Bad Ethertype Drop: {{ to_parse_interface[interface].counters.in_bad_etype_drop }}{% endif %}
{%- if to_parse_interface[interface].counters.in_broadcast_pkts is defined %}
##### Broadcast Packets: {{ to_parse_interface[interface].counters.in_broadcast_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.in_crc_errors is defined %}
##### CRC Errors: {{ to_parse_interface[interface].counters.in_crc_errors }}{% endif %}
{%- if to_parse_interface[interface].counters.in_discard is defined %}
##### Discards: {{ to_parse_interface[interface].counters.in_discard }}{% endif %}
{%- if to_parse_interface[interface].counters.in_errors is defined %}
##### Errors: {{ to_parse_interface[interface].counters.in_errors }}{% endif %}
{%- if to_parse_interface[interface].counters.in_if_down_drop is defined %}
##### Interface Down Drop: {{ to_parse_interface[interface].counters.in_if_down_drop }}{% endif %}
{%- if to_parse_interface[interface].counters.in_ignored is defined %}
##### Ignored: {{ to_parse_interface[interface].counters.in_ignored }}{% endif %}
{%- if to_parse_interface[interface].counters.in_mac_pause_frames is defined %}
##### MAC Pause Frames: {{ to_parse_interface[interface].counters.in_mac_pause_frames }}{% endif %}
{%- if to_parse_interface[interface].counters.in_multicast_pkts is defined %}
##### Multicast Packets: {{ to_parse_interface[interface].counters.in_multicast_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.in_no_buffer is defined %}
##### No Buffer: {{ to_parse_interface[interface].counters.in_no_buffer }}{% endif %}
{%- if to_parse_interface[interface].counters.in_octets is defined %}
##### Octets: {{ to_parse_interface[interface].counters.in_octets }}{% endif %}
{%- if to_parse_interface[interface].counters.in_overrun is defined %}
##### Overrun: {{ to_parse_interface[interface].counters.in_overrun }}{% endif %}
{%- if to_parse_interface[interface].counters.in_oversize_frame is defined %}
##### Oversize Frame: {{ to_parse_interface[interface].counters.in_oversize_frame }}{% endif %}
{%- if to_parse_interface[interface].counters.in_pkts is defined %}
##### Packets: {{ to_parse_interface[interface].counters.in_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.in_runts is defined %}
##### Runts: {{ to_parse_interface[interface].counters.in_runts }}{% endif %}
{%- if to_parse_interface[interface].counters.in_short_frame is defined %}
##### Short Frames: {{ to_parse_interface[interface].counters.in_short_frame }}{% endif %}
{%- if to_parse_interface[interface].counters.in_underrun is defined %}
##### Underrun: {{ to_parse_interface[interface].counters.in_underrun }}{% endif %}
{%- if to_parse_interface[interface].counters.in_unicast_pkts is defined %}
##### Unicast Packets: {{ to_parse_interface[interface].counters.in_unicast_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.in_unknown_protos is defined %}
##### Unknown Protocols: {{ to_parse_interface[interface].counters.in_unknown_protos }}{% endif %}
{%- if to_parse_interface[interface].counters.in_watchdog is defined %}
##### Watchdog: {{ to_parse_interface[interface].counters.in_watchdog }}{% endif %}
{%- if to_parse_interface[interface].counters.in_with_dribble is defined %}
##### With Dribble: {{ to_parse_interface[interface].counters.in_with_dribble }}{% endif %}
#### Output
{%- if to_parse_interface[interface].counters.out_babble is defined %}
##### Babble: {{ to_parse_interface[interface].counters.out_babble }}{% endif %}
{%- if to_parse_interface[interface].counters.out_broadcast_pkts is defined %}
##### Broadcast Packets: {{ to_parse_interface[interface].counters.out_broadcast_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.out_collision is defined %}
##### Collision: {{ to_parse_interface[interface].counters.out_collision }}{% endif %}
{%- if to_parse_interface[interface].counters.out_deferred is defined %}
##### Deferred: {{ to_parse_interface[interface].counters.out_deferred }}{% endif %}
{%- if to_parse_interface[interface].counters.out_discard is defined %}
##### Discard: {{ to_parse_interface[interface].counters.out_discard }}{% endif %}
{%- if to_parse_interface[interface].counters.out_errors is defined %}
##### Errros: {{ to_parse_interface[interface].counters.out_errors }}{% endif %}
{%- if to_parse_interface[interface].counters.out_jumbo_packets is defined %}
##### Jumbo Packets: {{ to_parse_interface[interface].counters.out_jumbo_packets }}{% endif %}
{%- if to_parse_interface[interface].counters.out_late_collision is defined %}
##### Late Collision: {{ to_parse_interface[interface].counters.out_late_collision }}{% endif %}
{%- if to_parse_interface[interface].counters.out_lost_carrier is defined %}
##### Lost Carrier: {{ to_parse_interface[interface].counters.out_lost_carrier }}{% endif %}
{%- if to_parse_interface[interface].counters.out_mac_pause_frames is defined %}
##### MAC Pause Frames: {{ to_parse_interface[interface].counters.out_mac_pause_frames }}{% endif %}
{%- if to_parse_interface[interface].counters.out_multicast_pkts is defined %}
##### Multicast Packets: {{ to_parse_interface[interface].counters.out_multicast_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.out_no_carrier is defined %}
##### No Carrier: {{ to_parse_interface[interface].counters.out_no_carrier }}{% endif %}
{%- if to_parse_interface[interface].counters.out_octets is defined %}
##### Octets: {{ to_parse_interface[interface].counters.out_octets }}{% endif %}
{%- if to_parse_interface[interface].counters.out_pkts is defined %}
##### Packets: {{ to_parse_interface[interface].counters.out_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.out_unicast_pkts is defined %}
##### Unicast Packets: {{ to_parse_interface[interface].counters.out_unicast_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.last_clear is defined %}
##### Last Clear: {{ to_parse_interface[interface].counters.last_clear }}{% endif %}
{%- if to_parse_interface[interface].counters.rate is defined %}
#### Rates
{%- if to_parse_interface[interface].counters.rate.in_rate is defined %}
##### Input
###### {{ to_parse_interface[interface].counters.rate.in_rate }}{% endif %}
{%- if to_parse_interface[interface].counters.rate.in_rate_pkts is defined %}
###### Packets: {{ to_parse_interface[interface].counters.rate.in_rate_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.rate.out_rate is defined %}
##### Output
###### {{ to_parse_interface[interface].counters.rate.out_rate }}{% endif %}
{%- if to_parse_interface[interface].counters.rate.out_rate_pkts is defined %}
###### Packets: {{ to_parse_interface[interface].counters.rate.out_rate_pkts }}{% endif %}
{%- if to_parse_interface[interface].counters.rate.load_interval is defined %}
##### Load Interval: {{ to_parse_interface[interface].counters.rate.load_interval }}{% endif %}{% endif %}
{%- if to_parse_interface[interface].counters.rx is defined %}
#### RX: {{ to_parse_interface[interface].counters.rx }}{% endif %}
{%- if to_parse_interface[interface].counters.tx is defined %}
#### TX: {{ to_parse_interface[interface].counters.tx }}{% endif %}
{% endif %}
{%- endfor %}
{%- endif %}{% endif %}{% endif %}