{%- if filetype_loop == 0 %}Local Interface,Device ID,Remote Interface,IP Address,Platform,Native VLAN,Hold Time,Duplex,Capaibilities,Software Version
{%-     for neighbor in to_parse_cdp_neighbors %}
{%-         for ip_address in to_parse_cdp_neighbors[neighbor].entry_addresses %}
{{ to_parse_cdp_neighbors[neighbor].local_interface }},{{ to_parse_cdp_neighbors[neighbor].device_id }},{{ to_parse_cdp_neighbors[neighbor].port_id }},{{ ip_address }},{{ to_parse_cdp_neighbors[neighbor].platform }},{{ to_parse_cdp_neighbors[neighbor].native_vlan }},{{ to_parse_cdp_neighbors[neighbor].hold_time }},{{ to_parse_cdp_neighbors[neighbor].duplex_mode }},{{ to_parse_cdp_neighbors[neighbor].capabilities }},{{ to_parse_cdp_neighbors[neighbor].software_version | replace(","," ") | replace("\n"," ") }}
{%-         endfor %}
{%-     endfor %}
{%- else %}
{%-     if filetype_loop == 1 %}
# Show CDP Neighbors Details
| Local Interface | Device ID | Remote Interface | IP Address | Platform | Native VLAN | Hold Time | Duplex | Capaibilities | Software Version |
| --------------- | --------- | ---------------- | ---------- | -------- | ----------- | --------- | ------ | ------------- | ---------------- |
{%-         for neighbor in to_parse_cdp_neighbors %}
{%-             for ip_address in to_parse_cdp_neighbors[neighbor].entry_addresses %}
| {{ to_parse_cdp_neighbors[neighbor].local_interface }} | {{ to_parse_cdp_neighbors[neighbor].device_id }} | {{ to_parse_cdp_neighbors[neighbor].port_id }} | {{ ip_address }} | {{ to_parse_cdp_neighbors[neighbor].platform }} | {{ to_parse_cdp_neighbors[neighbor].native_vlan }} | {{ to_parse_cdp_neighbors[neighbor].hold_time }} | {{ to_parse_cdp_neighbors[neighbor].duplex_mode }} | {{ to_parse_cdp_neighbors[neighbor].capabilities }} | {{ to_parse_cdp_neighbors[neighbor].software_version | replace(","," ") | replace("\n"," ") }} |
{%-             endfor %}
{%-         endfor %}
{%-     else %}
{%-         if filetype_loop == 2 %}
<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/colreorder/1.5.4/js/dataTables.colReorder.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/keytable/2.6.4/js/dataTables.keyTable.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.9/js/dataTables.fixedHeader.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.9/css/fixedHeader.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/keytable/2.6.4/css/keyTable.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
<h1>Show CDP Neighbors Details</h1>
<table id = "cdp">
  <thead>
    <tr>
      <th>Local Interface</th>
      <th>Device ID</th>
      <th>Remote Interface</th>
      <th>IP Address</th>
      <th>Platform</th>
      <th>Native VLAN</th>
      <th>Hold Time</th>
      <th>Duplex</th>
      <th>Capaibilities</th>
      <th>Software Version</th>
    </tr>
  </thead>
  <tbody>
{%-             for neighbor in to_parse_cdp_neighbors %}
{%-                 for ip_address in to_parse_cdp_neighbors[neighbor].entry_addresses %}
<tr>
    <td>{{ to_parse_cdp_neighbors[neighbor].local_interface }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].device_id }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].port_id }}</td>
    <td>{{ ip_address }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].platform }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].native_vlan }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].hold_time }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].duplex_mode }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].capabilities }}</td>
    <td>{{ to_parse_cdp_neighbors[neighbor].software_version | replace(","," ") | replace("\n"," ") }}</td>
  </tr>
{%-                 endfor %}
{%-             endfor %}
  </tbody>
</table>
<script type = "text/javascript">
  $(document).ready(function(){
    $('#cdp thead tr')
    .clone(true)
    .addClass('filters')
    .appendTo('#cdp thead');

    var table = $('#cdp').DataTable({
        keys: true,
        dom: 'Bfrtip',
        lengthMenu: [
            [ 10, 25, 50, -1 ],
            [ '10 rows', '25 rows', '50 rows', 'Show all' ]
        ],
        buttons: [
        'pageLength','colvis','copy', 'csv', 'excel', 'pdf', 'print'
        ],
        colReorder: true,
        select: true,            
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
        var api = this.api();

        // For each column
        api
            .columns()
            .eq(0)
            .each(function (colIdx) {
                // Set the header cell to contain the input element
                var cell = $('.filters th').eq(
                    $(api.column(colIdx).header()).index()
                );
                var title = $(cell).text();
                $(cell).html('<input type="text" placeholder="' + title + '" />');

                // On every keypress in this input
                $(
                    'input',
                    $('.filters th').eq($(api.column(colIdx).header()).index())
                )
                    .off('keyup change')
                    .on('keyup change', function (e) {
                        e.stopPropagation();

                        // Get the search value
                        $(this).attr('title', $(this).val());
                        var regexr = '({search})'; //$(this).parents('th').find('select').val();

                        var cursorPosition = this.selectionStart;
                        // Search the column for that value
                        api
                            .column(colIdx)
                            .search(
                                this.value != ''
                                    ? regexr.replace('{search}', '(((' + this.value + ')))')
                                    : '',
                                this.value != '',
                                this.value == ''
                            )
                            .draw();

                        $(this)
                            .focus()[0]
                            .setSelectionRange(cursorPosition, cursorPosition);
                    });
            });
    },
});
});        
</script>
</body></html>
{%-         else %}
# Show CDP Neighbors Details
{%-             for neighbor in to_parse_cdp_neighbors %}
{%-                 for ip_address in to_parse_cdp_neighbors[neighbor].entry_addresses %}
## {{ to_parse_cdp_neighbors[neighbor].local_interface }}
### ID
#### Device: {{ to_parse_cdp_neighbors[neighbor].device_id }}
#### Port: {{ to_parse_cdp_neighbors[neighbor].port_id }}
### IP Address: {{ ip_address }}
### Platform: {{ to_parse_cdp_neighbors[neighbor].platform }}
### Native VLAN: {{ to_parse_cdp_neighbors[neighbor].native_vlan }}
### Hold Time: {{ to_parse_cdp_neighbors[neighbor].hold_time }}
### Duplex: {{ to_parse_cdp_neighbors[neighbor].duplex_mode }}
### Capabilities: {{ to_parse_cdp_neighbors[neighbor].capabilities }}
### Software Version: {{ to_parse_cdp_neighbors[neighbor].software_version | replace(","," ") | replace("\n"," ") }}
{%-                 endfor %}
{%-             endfor %}
{%-         endif %}
{%-     endif %}
{%- endif %}