{% if filetype_loop == 0 %}Port-Channel,Bundle ID,Layer,Type,Status,Protocol,Member Interface,Flags{% for interface in to_parse_etherchannel_summary %}{% for member in to_parse_etherchannel_summary[interface].members %}
{{ interface }},{{ to_parse_etherchannel_summary[interface].bundle_id }},{{ to_parse_etherchannel_summary[interface].layer }},{{ to_parse_etherchannel_summary[interface].type }},{{ to_parse_etherchannel_summary[interface].oper_status }},{{ to_parse_etherchannel_summary[interface].protocol }},{{ member }},{{ to_parse_etherchannel_summary[interface].members[member].flags }}{% endfor %}{% endfor %}
{% else %}{% if filetype_loop == 1 %}
# Show Port-Channel Summary
| Port-Channel | Bundle ID | Layer | Type | Status | Protocol | Member Interface | Flags |
| ------------ | --------- | ----- | ---- | ------ | -------- | ---------------- | ----- |{% for interface in to_parse_etherchannel_summary %}{% for member in to_parse_etherchannel_summary[interface].members %}
| {{ interface }} | {{ to_parse_etherchannel_summary[interface].bundle_id }} | {{ to_parse_etherchannel_summary[interface].layer }} | {{ to_parse_etherchannel_summary[interface].type }} | {{ to_parse_etherchannel_summary[interface].oper_status }} | {{ to_parse_etherchannel_summary[interface].protocol }} | {{ member }} | {{ to_parse_etherchannel_summary[interface].members[member].flags }} |{% endfor %}{% endfor %}
{% else %}{% if filetype_loop == 2 %}
<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/colreorder/1.5.4/js/dataTables.colReorder.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/keytable/2.6.4/js/dataTables.keyTable.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.9/js/dataTables.fixedHeader.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.9/css/fixedHeader.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/keytable/2.6.4/css/keyTable.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
<h1>Show Port Channel Summary</h1>
<table id = "portchannel">
  <tr>
    <th>Port-Channel</th>
    <th>Bundle ID</th>
    <th>Layer</th>
    <th>Type</th>
    <th>Status</th>
    <th>Protocol</th>
    <th>Member Interface</th>
    <th>Flags</th>
  </tr>
{%- for interface in to_parse_etherchannel_summary %}{% for member in to_parse_etherchannel_summary[interface].members %}  
  <tr>
    <td>{{ interface }}</td>
    <td>{{ to_parse_etherchannel_summary[interface].bundle_id }}</td>
    <td>{{ to_parse_etherchannel_summary[interface].layer }}</td>
    <td>{{ to_parse_etherchannel_summary[interface].type }}</td>
    <td>{{ to_parse_etherchannel_summary[interface].oper_status }}</td>
    <td>{{ to_parse_etherchannel_summary[interface].protocol }}</td>
    <td>{{ member }}</td>
    <td>{{ to_parse_etherchannel_summary[interface].members[member].flags }}</td>
  </tr>
{%- endfor %}{% endfor %}
</table>
<script type = "text/javascript">
  $(document).ready(function(){
    $('#portchannel thead tr')
    .clone(true)
    .addClass('filters')
    .appendTo('#portchannel thead');

    var table = $('#portchannel').DataTable({
        keys: true,
        dom: 'Bfrtip',
        lengthMenu: [
            [ 10, 25, 50, -1 ],
            [ '10 rows', '25 rows', '50 rows', 'Show all' ]
        ],
        buttons: [
        'pageLength','colvis','copy', 'csv', 'excel', 'pdf', 'print'
        ],
        colReorder: true,
        select: true,            
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
        var api = this.api();

        // For each column
        api
            .columns()
            .eq(0)
            .each(function (colIdx) {
                // Set the header cell to contain the input element
                var cell = $('.filters th').eq(
                    $(api.column(colIdx).header()).index()
                );
                var title = $(cell).text();
                $(cell).html('<input type="text" placeholder="' + title + '" />');

                // On every keypress in this input
                $(
                    'input',
                    $('.filters th').eq($(api.column(colIdx).header()).index())
                )
                    .off('keyup change')
                    .on('keyup change', function (e) {
                        e.stopPropagation();

                        // Get the search value
                        $(this).attr('title', $(this).val());
                        var regexr = '({search})'; //$(this).parents('th').find('select').val();

                        var cursorPosition = this.selectionStart;
                        // Search the column for that value
                        api
                            .column(colIdx)
                            .search(
                                this.value != ''
                                    ? regexr.replace('{search}', '(((' + this.value + ')))')
                                    : '',
                                this.value != '',
                                this.value == ''
                            )
                            .draw();

                        $(this)
                            .focus()[0]
                            .setSelectionRange(cursorPosition, cursorPosition);
                    });
            });
    },
});
});        
</script>
</body></html>
{%- else %}
# Show Port Channel Summary
{%- for interface in to_parse_etherchannel_summary %}
## {{ interface }}
### Bundle ID: {{ to_parse_etherchannel_summary[interface].bundle_id }}
### Layer: {{ to_parse_etherchannel_summary[interface].layer }}
### Type: {{ to_parse_etherchannel_summary[interface].type }}
### Operational Status: {{ to_parse_etherchannel_summary[interface].oper_status }}
### Protocol {{ to_parse_etherchannel_summary[interface].protocol }}
### Members
{%-     for member in to_parse_etherchannel_summary[interface].members %}  
#### {{ member }}
##### Flags: {{ to_parse_etherchannel_summary[interface].members[member].flags }}
{%- endfor %}{% endfor %}
{%- endif %}{% endif %}{% endif %}