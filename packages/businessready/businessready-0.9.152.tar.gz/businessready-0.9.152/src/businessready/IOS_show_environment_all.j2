{%- if filetype_loop == 0 %}Switch,Temperature State,Inlet Temperature State,Inlet Temp Value,Inlet Temp Yellow,Inlet Temp Red,Hot Spot Temperature State,Hot Temp Value,Hot Temp Yellow,Hot Temp Red,Power Supply,Power Supply PID,PoE Power,Serial Number,State,Status,System Power,Watts,Fan,Fan State
{%-     for switch in to_parse_environment %}
{%-         for fan in to_parse_environment[switch].fan %}
{%-             for power_supply in to_parse_environment[switch].power_supply %}
{{ switch }},{{ to_parse_environment[switch].system_temperature_state }},{{ to_parse_environment[switch].inlet_temperature.state }},{{ to_parse_environment[switch].inlet_temperature.value }},{{ to_parse_environment[switch].inlet_temperature.yellow_threshold }},{{ to_parse_environment[switch].inlet_temperature.red_threshold }},{{ to_parse_environment[switch].hotspot_temperature.state }},{{ to_parse_environment[switch].hotspot_temperature.value }},{{ to_parse_environment[switch].hotspot_temperature.yellow_threshold }},{{ to_parse_environment[switch].hotspot_temperature.red_threshold }},{{ power_supply }},{{ to_parse_environment[switch].power_supply[power_supply].pid | default("N/A") }},{{ to_parse_environment[switch].power_supply[power_supply].poe_power | default("N/A") }},{{ to_parse_environment[switch].power_supply[power_supply].serial_number | default("N/A") }},{{ to_parse_environment[switch].power_supply[power_supply].state }},{{ to_parse_environment[switch].power_supply[power_supply].status }},{{ to_parse_environment[switch].power_supply[power_supply].system_power | default("N/A") }},{{ to_parse_environment[switch].power_supply[power_supply].watts | default("N/A") }},{{ fan }},{{ to_parse_environment[switch].fan[fan].state }}
{%-             endfor %}
{%-         endfor %}
{%-     endfor %}
{%- else %}
{%-     if filetype_loop == 1 %}
# Show Environment All
| Switch | Temperature State | Inlet Temperature State | Inlet Temp Value | Inlet Temp Yellow | Inlet Temp Red | Hot Spot Temperature State | Hot Temp Value | Hot Temp Yellow | Hot Temp Red | Power Supply | Power Supply PID | PoE Power | Serial Number | State | Status | System Power | Watts | Fan | Fan State |
| ------ | ----------------- | ----------------------- | ---------------- | ----------------- | -------------- | -------------------------- | -------------- | --------------- | ------------ | ------------ | ---------------- | --------- | ------------- | ----- | ------ | ------------ | ----- | --- | --------- |
{%-         for switch in to_parse_environment %}
{%-             for fan in to_parse_environment[switch].fan %}
{%-                 for power_supply in to_parse_environment[switch].power_supply %}
| {{ switch }} | {{ to_parse_environment[switch].system_temperature_state }} | {{ to_parse_environment[switch].inlet_temperature.state }} | {{ to_parse_environment[switch].inlet_temperature.value }} | {{ to_parse_environment[switch].inlet_temperature.yellow_threshold }} | {{ to_parse_environment[switch].inlet_temperature.red_threshold }} | {{ to_parse_environment[switch].hotspot_temperature.state }} | {{ to_parse_environment[switch].hotspot_temperature.value }} | {{ to_parse_environment[switch].hotspot_temperature.yellow_threshold }} | {{ to_parse_environment[switch].hotspot_temperature.red_threshold }} | {{ power_supply }} | {{ to_parse_environment[switch].power_supply[power_supply].pid | default("N/A") }} | {{ to_parse_environment[switch].power_supply[power_supply].poe_power | default("N/A") }} | {{ to_parse_environment[switch].power_supply[power_supply].serial_number | default("N/A") }} | {{ to_parse_environment[switch].power_supply[power_supply].state }} | {{ to_parse_environment[switch].power_supply[power_supply].status }} | {{ to_parse_environment[switch].power_supply[power_supply].system_power | default("N/A") }} | {{ to_parse_environment[switch].power_supply[power_supply].watts | default("N/A") }} | {{ fan }} | {{ to_parse_environment[switch].fan[fan].state }} |
{%-                 endfor %}
{%-             endfor %}
{%-         endfor %}
{%-     else %}
{%-         if filetype_loop == 2 %}
<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/colreorder/1.5.4/js/dataTables.colReorder.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/keytable/2.6.4/js/dataTables.keyTable.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.9/js/dataTables.fixedHeader.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.9/css/fixedHeader.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/keytable/2.6.4/css/keyTable.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
<h1>Show Environment All</h1>
<table id = "environment">
  <thead>
  <tr>
    <th>Switch</th>
    <th>Temperature State</th>
    <th>Inlet Temperature State</th>
    <th>Inlet Temp Value</th>
    <th>Inlet Temp Yellow</th>
    <th>Inlet Temp Red</th>
    <th>Hot Spot Temperature State</th>
    <th>Hot Temp Value</th>
    <th>Hot Temp Yellow</th>
    <th>Hot Temp Red</th>
    <th>Power Supply</th>
    <th>Power Supply PID</th>
    <th>PoE Power</th>
    <th>Serial Number</th>
    <th>State</th>
    <th>Status</th>
    <th>System Power</th>
    <th>Watts</th>
    <th>Fan</th>
    <th>Fan State</th>
  </tr>
  </thead>
  <tbody>
{%-         for switch in to_parse_environment %}
{%-             for fan in to_parse_environment[switch].fan %}
{%-                 for power_supply in to_parse_environment[switch].power_supply %}
<tr>
    <td>{{ switch }}</td>
    <td>{{ to_parse_environment[switch].system_temperature_state }}</td>
    <td>{{ to_parse_environment[switch].inlet_temperature.state }}</td>
    <td>{{ to_parse_environment[switch].inlet_temperature.value }}</td>
    <td>{{ to_parse_environment[switch].inlet_temperature.yellow_threshold }}</td>
    <td>{{ to_parse_environment[switch].inlet_temperature.red_threshold }}</td>
    <td>{{ to_parse_environment[switch].hotspot_temperature.state }}</td>
    <td>{{ to_parse_environment[switch].hotspot_temperature.value }}</td>
    <td>{{ to_parse_environment[switch].hotspot_temperature.yellow_threshold }}</td>
    <td>{{ to_parse_environment[switch].hotspot_temperature.red_threshold }}</td>
    <td>{{ power_supply }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].pid | default("N/A") }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].poe_power | default("N/A") }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].serial_number | default("N/A") }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].state }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].status }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].system_power | default("N/A") }}</td>
    <td>{{ to_parse_environment[switch].power_supply[power_supply].watts | default("N/A") }}</td>
    <td>{{ fan }}</td>
    <td>{{ to_parse_environment[switch].fan[fan].state }}</td>
  </tr>
{%-                 endfor %}
{%-             endfor %}
{%-         endfor %}
  </tbody>
</table>
<script type = "text/javascript">
  $(document).ready(function(){
    $('#environment thead tr')
    .clone(true)
    .addClass('filters')
    .appendTo('#environment thead');

    var table = $('#environment').DataTable({
        keys: true,
        dom: 'Bfrtip',
        lengthMenu: [
            [ 10, 25, 50, -1 ],
            [ '10 rows', '25 rows', '50 rows', 'Show all' ]
        ],
        buttons: [
        'pageLength','colvis','copy', 'csv', 'excel', 'pdf', 'print'
        ],
        colReorder: true,
        select: true,            
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
        var api = this.api();

        // For each column
        api
            .columns()
            .eq(0)
            .each(function (colIdx) {
                // Set the header cell to contain the input element
                var cell = $('.filters th').eq(
                    $(api.column(colIdx).header()).index()
                );
                var title = $(cell).text();
                $(cell).html('<input type="text" placeholder="' + title + '" />');

                // On every keypress in this input
                $(
                    'input',
                    $('.filters th').eq($(api.column(colIdx).header()).index())
                )
                    .off('keyup change')
                    .on('keyup change', function (e) {
                        e.stopPropagation();

                        // Get the search value
                        $(this).attr('title', $(this).val());
                        var regexr = '({search})'; //$(this).parents('th').find('select').val();

                        var cursorPosition = this.selectionStart;
                        // Search the column for that value
                        api
                            .column(colIdx)
                            .search(
                                this.value != ''
                                    ? regexr.replace('{search}', '(((' + this.value + ')))')
                                    : '',
                                this.value != '',
                                this.value == ''
                            )
                            .draw();

                        $(this)
                            .focus()[0]
                            .setSelectionRange(cursorPosition, cursorPosition);
                    });
            });
    },
});
});        
</script>
</body></html>
{%-     else %}
# Show Environment All
{%-         for switch in to_parse_environment %}
## {{ switch }}
### System Temperature State: {{ to_parse_environment[switch].system_temperature_state }}
### Inlet Temperature
#### State: {{ to_parse_environment[switch].inlet_temperature.state }}
#### Value: {{ to_parse_environment[switch].inlet_temperature.value }}
#### Thresholds
##### Yellow: {{ to_parse_environment[switch].inlet_temperature.yellow_threshold }}
##### Red: {{ to_parse_environment[switch].inlet_temperature.red_threshold }}
### Hostspot Temperature
#### State: {{ to_parse_environment[switch].hotspot_temperature.state }}
#### Value: {{ to_parse_environment[switch].hotspot_temperature.value }}
#### Thresholds
##### Yellow: {{ to_parse_environment[switch].hotspot_temperature.yellow_threshold }}
##### Red: {{ to_parse_environment[switch].hotspot_temperature.red_threshold }}
### Power Supply
{%-             for power_supply in to_parse_environment[switch].power_supply %}
#### {{ power_supply }}
##### PID: {{ to_parse_environment[switch].power_supply[power_supply].pid | default("N/A") }}
##### PoE Power: {{ to_parse_environment[switch].power_supply[power_supply].poe_power | default("N/A") }}
##### Serial Number: {{ to_parse_environment[switch].power_supply[power_supply].serial_number | default("N/A") }}
##### State: {{ to_parse_environment[switch].power_supply[power_supply].state }}
##### Status: {{ to_parse_environment[switch].power_supply[power_supply].status }}
##### System Power: {{ to_parse_environment[switch].power_supply[power_supply].system_power | default("N/A") }}
##### Watts: {{ to_parse_environment[switch].power_supply[power_supply].watts | default("N/A") }}
{%-             endfor %}
### Fan
{%-             for fan in to_parse_environment[switch].fan %}
#### {{ fan }}
##### State: {{ to_parse_environment[switch].fan[fan].state }}
{%-             endfor %}
{%-         endfor %}
{%- endif %}{% endif %}{% endif %}