{%- if filetype_loop == 0 %}Hostname,Platform,Chassis,Version,Image ID,OS,Uptime,Last Reload,Last Reload Reason,Interfaces,Total Memory,Used Memeory,Serial Number,License Type
{{ to_parse_version.hostname }},{{ to_parse_version.platform }},{{ to_parse_version.chassis }},{{ to_parse_version.version }},{{ to_parse_version.image_id }},{{ to_parse_version.os }},{{ to_parse_version.uptime | replace(","," ") }},{{ to_parse_version.system_restarted_at | replace(","," ") }},{{ to_parse_version.last_reload_reason | replace(","," ") }},{{ to_parse_version.number_of_intfs | replace(","," ") | replace("{","") | replace("}","") }},{{ to_parse_version.main_mem }},{{ to_parse_version.mem_size | replace(","," ") | replace("{","") | replace("}","") }},{{ to_parse_version.chassis_sn }},{{ to_parse_version.license_type }}
{%- else %}
{%-     if filetype_loop == 1 %}
# Show Version
| Hostname | Platform | Chassis | Version | Image ID | OS | Uptime | Last Reload | Last Reload Reason | Interfaces | Total Memory | Used Memeory | Serial Number | License Type |
| -------- | -------- | ------- | ------- | -------- | -- | ------ | ----------- | ------------------ | ---------- | ------------ | ------------ | ------------- | ------------ |
| {{ to_parse_version.hostname }} | {{ to_parse_version.platform }} | {{ to_parse_version.chassis }} | {{ to_parse_version.version }} | {{ to_parse_version.image_id }} | {{ to_parse_version.os }} | {{ to_parse_version.uptime | replace(","," ") }} | {{ to_parse_version.system_restarted_at | replace(","," ") }} | {{ to_parse_version.last_reload_reason | replace(","," ") }} | {{ to_parse_version.number_of_intfs | replace(","," ") | replace("{","") | replace("}","") }} | {{ to_parse_version.main_mem }} | {{ to_parse_version.mem_size | replace(","," ") | replace("{","") | replace("}","") }} | {{ to_parse_version.chassis_sn }} | {{ to_parse_version.license_type }} |
{%-     else %}
{%-         if filetype_loop == 2 %}
<html>
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.print.min.js"></script>
    <script src="https://cdn.datatables.net/colreorder/1.5.4/js/dataTables.colReorder.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.0.0/js/buttons.colVis.min.js"></script>
    <script src="https://cdn.datatables.net/keytable/2.6.4/js/dataTables.keyTable.min.js"></script>
    <script src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
    <script src="https://cdn.datatables.net/fixedheader/3.1.9/js/dataTables.fixedHeader.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/fixedheader/3.1.9/css/fixedHeader.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/keytable/2.6.4/css/keyTable.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
<h1>Show Version</h1>
<table id = "version">
  <thead>
    <tr>
      <th>Hostname</th>
      <th>Platform</th>
      <th>Chassis</th>
      <th>Version</th>
      <th>Image ID</th>
      <th>OS</th>   
      <th>Uptime</th>
      <th>Last Reload</th>
      <th>Last Reload Reason</th>
      <th>Interfaces</th>
      <th>Total Memory</th>
      <th>Used Memory</th>
      <th>Serial Number</th>
      <th>License Type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>{{ to_parse_version.hostname }}</td>
      <td>{{ to_parse_version.platform }}</td>
      <td>{{ to_parse_version.chassis }}</td>
      <td>{{ to_parse_version.version }}</td>
      <td>{{ to_parse_version.image_id }}</td>
      <td>{{ to_parse_version.os }}</td>   
      <td>{{ to_parse_version.uptime }}</td>
      <td>{{ to_parse_version.system_restarted_at }}</td>
      <td>{{ to_parse_version.last_reload_reason }}</td>
      <td>{{ to_parse_version.number_of_intfs | replace("{","") | replace("}","") }}</td>
      <td>{{ to_parse_version.main_mem }}</td>
      <td>{{ to_parse_version.mem_size | replace("{","") | replace("}","") }}</td>
      <td>{{ to_parse_version.chassis_sn }}</td>
      <td>{{ to_parse_version.license_type }}</td>
    </tr>
  </tbody>
</table>
<script type = "text/javascript">
  $(document).ready(function(){
    $('#version thead tr')
    .clone(true)
    .addClass('filters')
    .appendTo('#version thead');

    var table = $('#version').DataTable({
        keys: true,
        dom: 'Bfrtip',
        lengthMenu: [
            [ 10, 25, 50, -1 ],
            [ '10 rows', '25 rows', '50 rows', 'Show all' ]
        ],
        buttons: [
        'pageLength','colvis','copy', 'csv', 'excel', 'pdf', 'print'
        ],
        colReorder: true,
        select: true,            
        orderCellsTop: true,
        fixedHeader: true,
        initComplete: function () {
        var api = this.api();

        // For each column
        api
            .columns()
            .eq(0)
            .each(function (colIdx) {
                // Set the header cell to contain the input element
                var cell = $('.filters th').eq(
                    $(api.column(colIdx).header()).index()
                );
                var title = $(cell).text();
                $(cell).html('<input type="text" placeholder="' + title + '" />');

                // On every keypress in this input
                $(
                    'input',
                    $('.filters th').eq($(api.column(colIdx).header()).index())
                )
                    .off('keyup change')
                    .on('keyup change', function (e) {
                        e.stopPropagation();

                        // Get the search value
                        $(this).attr('title', $(this).val());
                        var regexr = '({search})'; //$(this).parents('th').find('select').val();

                        var cursorPosition = this.selectionStart;
                        // Search the column for that value
                        api
                            .column(colIdx)
                            .search(
                                this.value != ''
                                    ? regexr.replace('{search}', '(((' + this.value + ')))')
                                    : '',
                                this.value != '',
                                this.value == ''
                            )
                            .draw();

                        $(this)
                            .focus()[0]
                            .setSelectionRange(cursorPosition, cursorPosition);
                    });
            });
    },
});
});        
</script>
</body></html>
{%-         else %}
# Show Version
## {{ to_parse_version.hostname }}
### Platform: {{ to_parse_version.platform }}
### Chassis: {{ to_parse_version.chassis }}
### Version: {{ to_parse_version.version }}
### Image ID: {{ to_parse_version.image_id }}
### OS: {{ to_parse_version.os }}
### Uptime: {{ to_parse_version.uptime }}
### Last Reload
#### Time: {{ to_parse_version.system_restarted_at }}
#### Reason: {{ to_parse_version.last_reload_reason }}
### Number of Interfaces: {{ to_parse_version.number_of_intfs | replace("{","") | replace("}","") }}
### Memory
#### Main: {{ to_parse_version.main_mem }}
#### Size: {{ to_parse_version.mem_size | replace("{","") | replace("}","") }}
### Chassis Serial Number: {{ to_parse_version.chassis_sn }}
### License Type: {{ to_parse_version.license_type }}
{%-         endif %}
{%-     endif %}
{%- endif %}