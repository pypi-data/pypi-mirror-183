import libcst as cst
from ._helpers import FixAllNames as FixAllNames, apply_to_all_py_recursively as apply_to_all_py_recursively, get_random_name as get_random_name
from _typeshed import Incomplete
from pathlib import Path

def rename_local_variables(paths: list[Union[Path, str]], seed: Union[int, None] = ...) -> None: ...
def rename_local_variables_string(py_source: str, seed: Union[int, None] = ...) -> str: ...

class RenameLambdaArgs(cst.CSTTransformer):
    def leave_Lambda(self, orig_node, updated_node): ...

class RenameWithAs(cst.CSTTransformer):
    def leave_With(self, orig_node, updated_node): ...

class RenameLoopVariables(cst.CSTTransformer):
    def leave_For(self, orig_node, updated_node): ...

class RenameAssign(cst.CSTTransformer):
    new_names: Incomplete
    def __init__(self) -> None: ...
    def leave_Assign(self, orig_node, updated_node): ...
    def leave_Name(self, orig_node, updated_node): ...

class RenameAssignTarget(cst.CSTTransformer):
    new_names: Incomplete
    def __init__(self) -> None: ...
    def leave_AssignTarget(self, orig_node, updated_node): ...

class RenameAssignInFunctionBodies(cst.CSTTransformer):
    def leave_FunctionDef(self, orig_node, updated_node): ...
