{"version":3,"sources":["nothing.png","SelectImage.tsx","index.tsx"],"names":["module","exports","SelectImage","state","back","options","props","args","images","value","default","handleChange","event","setState","prev","target","Streamlit","setComponentValue","render","Box","sx","minHeight","marginTop","FormControl","fullWidth","InputLabel","id","Select","labelId","label","onChange","autoWidth","maxHeight","maxWidth","map","image","option","MenuItem","key","paddingLeft","alt","src","height","width","nothing","justifyContent","i","this","length","push","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c39050d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nothing.a83d55a4.png\";","import {\n  Streamlit, StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\";\nimport React from \"react\";\nimport MenuItem from '@mui/material/MenuItem';\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\"\nimport { Box, FormControl, InputLabel } from \"@mui/material\"\nimport nothing from \"./nothing.png\";\n\nclass SelectImage extends StreamlitComponentBase {\n\n  state = { back: [], options: this.props.args.options, images: this.props.args.images, value: this.props.args.default}\n\n  componentDidMount() {\n    const back: any[] = [];\n    for (let i=0; i < this.state.options.length; i++) {\n      back.push({option: this.state.options[i], image: this.state.images[i]});\n    }\n    this.setState((prev, state) => ({\n      back: back,\n    }), () => Streamlit.setComponentValue(this.state.value))\n  }\n\n  handleChange = (event: SelectChangeEvent) => {\n    this.setState((prev, state) => ({\n      value: event.target.value\n    }),\n      () => {\n        if (event.target.value === \".nothing\") {\n          Streamlit.setComponentValue(\"\")\n        } else {\n          Streamlit.setComponentValue(this.state.value)\n        }\n      }\n    )\n  }\n\n  render = () => {\n    if (this.props.args[\"label\"] !== \"\") {\n      if (this.props.args[\"no_choice\"] === true) {\n        return (\n          <Box sx={{ minHeight: 200, marginTop: 2 }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"image-select-label\">{this.props.args[\"label\"]}</InputLabel>\n              <Select\n                labelId=\"image-select-label\"\n                id=\"image-select\"\n                value={this.state.value}\n                label=\"Image\"\n                onChange={this.handleChange}\n                autoWidth\n                sx={{ maxHeight: 150, maxWidth: 150 }}\n              >\n                {this.state.back.map(({ image, option }) => (\n                  <MenuItem\n                    value={option}\n                    key={option}\n                    sx={{ paddingLeft: 0, maxHeight: 150, maxWidth: 150 }}\n                  >\n                    <img alt={option} src={image} height={\"100%\"} width={\"100%\"} />\n                  </MenuItem>\n                ))}\n                <MenuItem\n                  value={\".nothing\"}\n                  key={\".no_choice\"}\n                  sx={{ paddingLeft: 0, maxHeight: 150, maxWidth: 150 }}\n                >\n                  <img alt={\".nothing\"} src={nothing} height={\"100%\"} width={\"100%\"} />\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        );\n      } else {\n        return (\n          <Box sx={{minHeight: 200, marginTop: 2}}>\n            <FormControl fullWidth>\n              <InputLabel id=\"image-select-label\">{this.props.args[\"label\"]}</InputLabel>\n              <Select\n                labelId=\"image-select-label\"\n                id=\"image-select\"\n                value={this.state.value}\n                label=\"Image\"\n                onChange={this.handleChange}\n                autoWidth\n                sx={{ maxHeight: 150, maxWidth: 150}}\n              >\n                {this.state.back.map(({ image, option }) => (\n                  <MenuItem\n                    value={option}\n                    key={option}\n                    sx={{paddingLeft: 0, maxHeight: 150, maxWidth: 150}}\n                  >\n                    <img alt={option} src={image} height={\"100%\"} width={\"100%\"}/>\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n        );\n      }\n    } else {\n      if (this.props.args[\"no_choice\"] === true) {\n        return (\n          <Box sx={{minHeight: 200, marginTop: 2}}>\n            <FormControl fullWidth>\n              <Select\n                labelId=\"image-select-label\"\n                id=\"image-select\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              >\n                {this.state.back.map(({ image, option }) => (\n                  <MenuItem sx={{justifyContent: \"flex-end\"}} value={option}><img alt={option} src={image} height={\"100px\"} width={\"100px\"}/></MenuItem>\n                ))}\n                <MenuItem\n                  value={\".nothing\"}\n                  key={\".no_choice\"}\n                  sx={{ paddingLeft: 0, maxHeight: 150, maxWidth: 150 }}\n                >\n                </MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        );\n      } else {\n        return (\n          <Box sx={{minHeight: 200, marginTop: 2}}>\n            <FormControl fullWidth>\n              <Select\n                labelId=\"image-select-label\"\n                id=\"image-select\"\n                value={this.state.value}\n                onChange={this.handleChange}\n              >\n                {this.state.back.map(({ image, option }) => (\n                  <MenuItem sx={{justifyContent: \"flex-end\"}} value={option}><img alt={option} src={image} height={\"100px\"} width={\"100px\"}/></MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n        );\n      }\n    }\n  }\n\n}\n\nexport default withStreamlitConnection(SelectImage)","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport SelectImage from \"./SelectImage\"\ndeclare module \"*.png\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <SelectImage />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}