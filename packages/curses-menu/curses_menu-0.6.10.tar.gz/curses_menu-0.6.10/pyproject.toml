[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "curses-menu"
version = "0.6.10"
description = "A simple console menu system using curses"
authors = ["Paul Barrett <pmbarrett314@gmail.com>"]
license = "MIT"
repository = "http://github.com/pmbarrett314/curses-menu"
packages = [{ include = "cursesmenu" }]
readme = "README.rst"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
include = ["*.rst", "*.md", "*.txt", "tox.ini", "docs/Makefile", "test/**/*.py", "docs/**/*.rst", "docs/**/*.py"]
exclude = ["docs/_build"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.ruff]
select = ["E", "F", "I", "N", "S", "C", "FBT", "B", "A", "T", "Q", "YTT", "RUF", "ANN", "UP"]
#unused: D (pydocstyle), BLE (blind except), C(mccabe)
extend-exclude=["examples/*"]
extend-ignore = [ "S101", "ANN101", "ANN102", "UP015"]
# S101 (assert used): ignored because we use assert for type narrowing and tests
# ANN101 (no self annotation): ignored because self annotations feel redundant
# ANN102 (no cls annotation): ignored because cls annotations also feel redundant
# U015 (redundant open mode): I like open("foo.txt", "r")
per-file-ignores={"test/*"=["ANN"]}
target-version="py37"


[tool.coverage.report]
exclude_lines = [
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pragma: no cover all",
    "@overload",
]


[tool.coverage.run]
source = ['test', 'cursesmenu']
omit = ["cursesmenu/old_curses_menu.py"]
branch = true
data_file = ".cov/.coverage"
plugins = ["coverage_conditional_plugin"]

[tool.coverage.lcov]
output = ".cov/coverage.lcov"

[tool.coverage.coverage_conditional_plugin.rules]
no-cover-nonwindows = "not sys.platform.startswith('win')"
no-cover-windows = "sys.platform.startswith('win')"
py-gte-38 = "sys_version_info >= (3, 8)"
py-lt-38 = "sys_version_info < (3, 8)"
py-gte-39 = "sys_version_info >= (3, 9)"
py-lt-39 = "sys_version_info < (3, 9)"


[tool.pytest.ini_options]
required_plugins = ["pytest-cov"]
addopts = ["-Werror", "-vv", "--cov", "--cov-append", "--cov-report=term-missing", "--cov-report=xml:.cov/coverage.xml","--cov-fail-under=100","--no-cov-on-fail"]

[tool.pydocstyle]
add_ignore = "D105"
match = "(?!__init__.py|^(docs/|test/|examples/|setup.py|conftest.py))"

[tool.mypy]
exclude = "^(scratch/|examples/)"
warn_unused_configs = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = "cursesmenu"
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
strict_concatenate = true


[tool.poetry.dependencies]
python = "^3.7"
windows-curses = { version = "2.3.0", platform = "win32" }
importlib-metadata = { version = ">=1.7.0", python = "<3.8" }
Deprecated = "^1.2.13"

[tool.poetry.group.docs]

[tool.poetry.group.docs.dependencies]
Sphinx = "^5.1.1"
sphinx-rtd-theme = "^1.0.0"
sphinx-autodoc-typehints = "^1.19.1"

[tool.poetry.group.test]

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
tox = "^4.0.0"
coverage = { version = "^7.0.0", extras = ["toml"] }
pyte = "^0.8.1"
pexpect = "^4.8.0"
types-Deprecated = "^1.2.9"
pytest-cov = "^4.0.0"
coverage-conditional-plugin = "^0.8.0"

[tool.poetry.group.type]

[tool.poetry.group.type.dependencies]
types-Deprecated = "^1.2.9"
mypy = "^0.991"
pytest = "^7.1.2"
