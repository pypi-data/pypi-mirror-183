Metadata-Version: 2.1
Name: greek-language-tools
Version: 1.0.0
Summary: A library with tools for easy Greek word transformations.
Author-email: John Zaras <john.zaras@yahoo.com>
Project-URL: Homepage, https://github.com/sinnec/greek-language-tools
Project-URL: Bug Tracker, https://github.com/sinnec/greek-language-tools/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE

# Greek Language Tools

Greek Language Tools is a set of tools that will help you make easy transformations to Greek words.

## Installation

`pip install greek-language-tools`

## Usage

Import as any other module using the name `greeklt`

`from greeklt import *` 

- **capitalize(word)**

Makes a word all caps without accentuation but adds dieresis when necessary:

```
word = "γάιδαρος"
>>> word.upper()
ΓΆΙΔΑΡΟΣ

>>> capitalize(word)
ΓΑΪΔΑΡΟΣ
```

- **remove_accentuation(word)**

Removes accentuation but adds dieresis when necessary, without capitalizing:

```
word = "γάιδαρος"

>>> remove_accentuation(word)
γαϊδαρος
```

Works exceptionally well when you want to sort a list aphabetically and not based on unicode:

```
cities = ["Όσλο", "Λευκωσία", "Άκαμπα", "Ζυρίχη", "Ρώμη"]

>>> sorted(cities)
["Άκαμπα", "Όσλο", "Ζυρίχη", "Λευκωσία", "Ρώμη"]

>>> sorted(cities, key=remove_accentuation)
["Άκαμπα", "Ζυρίχη", "Λευκωσία", "Όσλο", "Ρώμη"]
```

- **convert_final_s(word)**

Checks last letter of each word in a string. If it is a `σ` it is converted into a `ς` (final `σ`):

```
>>> convert_final_s("Φάροσ φάρος ΦΑΡΟΣ")
Φάρος φάρος ΦΑΡΟΣ
```

- **greek_transliteration(word)**

Transliterates a string written with latin characters into it's equivalent Greek (based on the keys of a QWERTY keyboard):

```
>>> greek_transliteration("fvtia")
φωτια
```

This can come quite in handy when a user forgets to change the language and the word looks the same both in latin and Greek:
```
# ANNA written in latin (Anna)
name = "ANNA"

>>> name == greek_transliteration(name)
False

# Both look the same but are different unnicode characters
>>> ANNA == ΑΝΝΑ
False
```
