Metadata-Version: 2.1
Name: changelogs-cli
Version: 1.0.0
Summary: Generates git changelog for Conventional Commits
Home-page: https://github.com/AliYmn/changelog
Download-URL: https://github.com/AliYmn/changelog
Author: Ali Yaman
Author-email: aliymn.db@gmail.com
License: MIT
Keywords: Generates git changelog for Conventional Commits
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Description-Content-Type: text/markdown
License-File: LICENSE

# Changelogs Generator
Hey! This Package is a [changelogs-cli](https://pypi.org/project/changelogs-cli/)  package that creates automatic changelogs that supports [Conventional Commits.](https://www.conventionalcommits.org/en/v1.0.0/)
Since we use Bitbucket, we needed something like this and I wanted to share it publicly in case you need it too.

# Emoji Support
If comments comply with conventional commit rules, they are supported with emoji.

```json
[
    "feat": "‚úÖ",
    "fix": "üöÄ",
    "build": "üíö",
    "chore": "üöÄ",
    "docs": "üìù",
    "style": "üé®",
    "refactor": "üë∑",
    "perf": "‚ö°Ô∏è",
    "test": "üß™",
    "merge": "üéâ",
    "revert": "‚è™Ô∏è"
]  
````
 
# Installing

    pip install changelogs-cli

# Example

First, let's get into the current your repository. 

Example;
    ```cd /home/repository/```

Example usage is as follows.
    changelogs ```example/commits/``` (this should be commit link to show reference  on changelogs md.)


# Demo

i will use this repo for example ; https://github.com/qoomon/git-conventional-commits

<img src="https://raw.githubusercontent.com/AliYmn/changelog/master/images/ex1.png">

<img src="https://raw.githubusercontent.com/AliYmn/changelog/master/images/ex2.png">

---

The sample check logs are as follows : [Check it!](./exChangelog.md)


