Metadata-Version: 2.1
Name: fileformats-medimage
Version: 0.1.3
Summary: Classes for representing different file formats in Python classes for use in type hinting in data workflows
Keywords: file formats,data
Author-email: "Thomas G. Close" <tom.g.close@gmail.com>
Maintainer-email: "Thomas G. Close" <tom.g.close@gmail.com>
Requires-Python: >=3.8
Description-Content-Type: text/x-rst
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering
Requires-Dist: jq>=1.2.2
Requires-Dist: numpy>=1.22.3
Requires-Dist: fileformats-core >=0.1
Requires-Dist: fileformats-common >=0.1.1
Requires-Dist: nibabel >=4.0.2
Requires-Dist: pydicom >=2.3.0
Requires-Dist: pydra-dcm2niix >=1.2.0
Requires-Dist: pydra-mrtrix3 >=0.2
Requires-Dist: pydra >= 0.20.0 ; extra == "converters"
Requires-Dist: black ; extra == "dev"
Requires-Dist: pre-commit ; extra == "dev"
Requires-Dist: codespell ; extra == "dev"
Requires-Dist: flake8 ; extra == "dev"
Requires-Dist: flake8-pyproject ; extra == "dev"
Requires-Dist: pytest >=6.2.5 ; extra == "test"
Requires-Dist: pytest-env>=0.6.2 ; extra == "test"
Requires-Dist: pytest-cov>=2.12.1 ; extra == "test"
Requires-Dist: codecov ; extra == "test"
Requires-Dist: medimages4tests >=0.3 ; extra == "test"
Requires-Dist: arcana-core >=0.8.2 ; extra == "test"
Project-URL: repository, https://github.com/ArcanaFramework/fileformats-medimage
Provides-Extra: converters
Provides-Extra: dev
Provides-Extra: test

FileFormats Extension - Medimage
================================
.. image:: https://github.com/ArcanaFramework/fileformats-medimage/actions/workflows/tests.yml/badge.svg
   :target: https://github.com/ArcanaFramework/fileformats-medimage/actions/workflows/tests.yml
.. image:: https://codecov.io/gh/ArcanaFramework/fileformats-medimage/branch/main/graph/badge.svg?token=UIS0OGPST7
   :target: https://codecov.io/gh/ArcanaFramework/fileformats-medimage
.. image:: https://img.shields.io/pypi/pyversions/fileformats-medimage.svg
   :target: https://pypi.python.org/pypi/fileformats-medimage/
   :alt: Supported Python versions
.. image:: https://img.shields.io/pypi/v/fileformats-medimage.svg
   :target: https://pypi.python.org/pypi/fileformats-medimage/
   :alt: Latest Version

This is a template for an extension module to the
`fileformats <https://github.com/ArcanaFramework/fileformats-core>`__ package that adds
support for commonly used medical imaging formats, such as DICOM, NIfTI, and MRtrix
Image Format.


Quick Installation
------------------

This extension can be installed for Python 3 using *pip*::

    $ pip3 install fileformats-medimage

This will install the core package and any other dependencies

License
-------

This work is licensed under a
`Creative Commons Attribution 4.0 International License <http://creativecommons.org/licenses/by/4.0/>`__

.. image:: https://i.creativecommons.org/l/by/4.0/88x31.png
  :target: http://creativecommons.org/licenses/by/4.0/
  :alt: Creative Commons Attribution 4.0 International License

