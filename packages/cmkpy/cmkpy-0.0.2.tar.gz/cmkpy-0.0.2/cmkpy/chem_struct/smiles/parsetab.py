
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AT ATOM ATOM_H BOND CHARGE COLON CYCLE_NUM DOT LPAREN LSQUARE MAP_NUM NUM RPAREN RSQUAREexpression : ATOMexpression : LSQUARE ATOMexpression : LSQUARE ATOM_Hexpression : LPAREN ATOMexpression : LPAREN LSQUARE ATOMexpression : LPAREN LSQUARE ATOM_Hexpression : expression DOTexpression : expression CHARGEexpression : expression AT ATexpression : expression ATexpression : expression BONDexpression : expression ATOMexpression : expression ATOM_H NUMexpression : expression ATOM_Hexpression : expression LPARENexpression : expression RPARENexpression : expression MAP_NUMexpression : expression CYCLE_NUMexpression : expression NUMexpression : expression RSQUARE\n                      | expression LSQUAREexpression : expression COLON'
    
_lr_action_items = {'ATOM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,],[2,9,-1,19,21,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,25,-9,-13,-5,-6,]),'LSQUARE':([0,1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[3,17,-1,22,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'LPAREN':([0,1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[4,12,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'$end':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[0,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'DOT':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[5,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'CHARGE':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[6,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'AT':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[7,-1,-7,-8,23,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'BOND':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[8,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'ATOM_H':([1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,],[10,-1,20,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,26,-9,-13,-5,-6,]),'RPAREN':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[13,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'MAP_NUM':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[14,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'CYCLE_NUM':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[15,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'NUM':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[11,-1,-7,-8,-10,-11,-12,24,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'RSQUARE':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[16,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),'COLON':([1,2,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,],[18,-1,-7,-8,-10,-11,-12,-14,-19,-15,-16,-17,-18,-20,-21,-22,-2,-3,-4,-9,-13,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,],[1,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ATOM','expression',1,'p_atom','smiles_yacc.py',23),
  ('expression -> LSQUARE ATOM','expression',2,'p_atom_after_square','smiles_yacc.py',32),
  ('expression -> LSQUARE ATOM_H','expression',2,'p_h_atom_after_square','smiles_yacc.py',41),
  ('expression -> LPAREN ATOM','expression',2,'p_atom_after_paren','smiles_yacc.py',50),
  ('expression -> LPAREN LSQUARE ATOM','expression',3,'p_atom_after_square_after_paren','smiles_yacc.py',61),
  ('expression -> LPAREN LSQUARE ATOM_H','expression',3,'p_atom_h_after_square_after_paren','smiles_yacc.py',72),
  ('expression -> expression DOT','expression',2,'p_dot','smiles_yacc.py',84),
  ('expression -> expression CHARGE','expression',2,'p_charge','smiles_yacc.py',101),
  ('expression -> expression AT AT','expression',3,'p_cw_chiral','smiles_yacc.py',109),
  ('expression -> expression AT','expression',2,'p_ccw_chiral','smiles_yacc.py',117),
  ('expression -> expression BOND','expression',2,'p_bond','smiles_yacc.py',125),
  ('expression -> expression ATOM','expression',2,'p_bond_atom','smiles_yacc.py',131),
  ('expression -> expression ATOM_H NUM','expression',3,'p_bond_many_h','smiles_yacc.py',143),
  ('expression -> expression ATOM_H','expression',2,'p_bond_one_h','smiles_yacc.py',150),
  ('expression -> expression LPAREN','expression',2,'p_begin_paren','smiles_yacc.py',159),
  ('expression -> expression RPAREN','expression',2,'p_end_paren','smiles_yacc.py',168),
  ('expression -> expression MAP_NUM','expression',2,'p_map_num','smiles_yacc.py',181),
  ('expression -> expression CYCLE_NUM','expression',2,'p_complex_cycle_num','smiles_yacc.py',189),
  ('expression -> expression NUM','expression',2,'p_simple_cycle_num','smiles_yacc.py',201),
  ('expression -> expression RSQUARE','expression',2,'p_only_square','smiles_yacc.py',218),
  ('expression -> expression LSQUARE','expression',2,'p_only_square','smiles_yacc.py',219),
  ('expression -> expression COLON','expression',2,'p_colon','smiles_yacc.py',223),
]
